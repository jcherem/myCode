set cut_paste_input [stack 0]
version 12.1 v5
push 0
push $cut_paste_input
Camera {
projection_mode {{"\[expression \[value the_cam]projection_mode(\[value the_frame])]"}}
focal {{"\[expression \[value the_cam]focal(\[value the_frame])]"}}
haperture {{"\[expression \[value the_cam]haperture(\[value the_frame])]"}}
vaperture {{"\[expression \[value the_cam]vaperture(\[value the_frame])]"}}
near {{"\[expression \[value the_cam]near(\[value the_frame])]"}}
far {{"\[expression \[value the_cam]far(\[value the_frame])]"}}
win_translate {{"\[expression \[value the_cam]win_translate.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_translate.v(\[value the_frame])]"}}
win_scale {{"\[expression \[value the_cam]win_scale.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_scale.v(\[value the_frame])]"}}
winroll {{"\[expression \[value the_cam]winroll(\[value the_frame])]"}}
focal_point {{"\[expression \[value the_cam]focal_point(\[value the_frame])]"}}
fstop {{"\[expression \[value the_cam]fstop(\[value the_frame])]"}}
name Stamp123
help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021"
onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
knobChanged "import stamps; stamps.wiredKnobChanged()"
autolabel "nuke.thisNode().knob(\"title\").value()"
tile_color 0x33000001
note_font "Bitstream Vera Sans"
note_font_size 20
selected true
xpos -9578
ypos 14811
hide_input true
addUserKnob {20 DummyCam l Defaults +INVISIBLE}
addUserKnob {43 the_cam +INVISIBLE}
the_cam "\[\n#DummyCam v1.2 - Updated 5 May 2021.\nset starting_point \"this.input0\"\nset default \"this.d_\"\n\n# If cam has no inputs, return the default.\nif \{\[exists \$starting_point]\} \{\n    set x \[node \$starting_point]\n\} \{ \n    return \$default\n\}\n\nset finished 0\nwhile \{\$finished != 1\} \{\n\n    # First look for a Cam or Input or topnode.\n    while \{\[class \$x] != \"Camera3\" && \[class \$x] != \"Camera2\" && \[class \$x] != \"Camera\" && \[class \$x] != \"Input\" && \$x != \[topnode \$x]\} \{\n        set x \[node \$x.input0]\n    \}\n\n    # Then, check if node is a cam (and return), and otherwise, if it's an input, see if the parent exists and move to it.\n    if \{\[class \$x]==\"Camera3\"||\[class \$x]==\"Camera2\"||\[class \$x]==\"Camera\"\} \{\n        set x \[append x \".\"]\n        return \$x\n    \} \{ \n        if \{ \[class \$x]==\"Input\" \} \{ \n            set inp \"\$x.parent.input\"\n            set inputNum \[value \$x.number]\n            set inp \[append inp \$inputNum]\n            if \{ \[exists \$inp] \} \{\n                set x \[node \$inp]\n            \} \{ \n                set finished 1\n            \}\n        \} \{ \n            set finished 1\n        \}\n    \}\n\}\nreturn \$default\n]"
addUserKnob {43 the_frame +INVISIBLE}
the_frame "\[\nset the_camera \[string trimright \[value the_cam] .]\nif \{\[exists \$the_camera]\} \{\n    return \[value \$the_camera.frame]\n\} \{ \n    return \[frame]\n\}\n]"
addUserKnob {4 d_projection_mode l projection +INVISIBLE M {perspective orthographic uv spherical ""}}
addUserKnob {7 d_focal l "focal length" +INVISIBLE R 0 100}
d_focal 50
addUserKnob {7 d_haperture l "horiz aperture" +INVISIBLE R 0 50}
d_haperture 24.576
addUserKnob {7 d_vaperture l "vert aperture" +INVISIBLE R 0 50}
d_vaperture 18.672
addUserKnob {7 d_near l near +INVISIBLE R 0 10}
d_near 0.1
addUserKnob {7 d_far l far +INVISIBLE R 0 10000}
d_far 10000
addUserKnob {30 d_win_translate l "window translate" +INVISIBLE}
addUserKnob {30 d_win_scale l "window scale" +INVISIBLE}
d_win_scale {1 1}
addUserKnob {7 d_winroll l "window roll" +INVISIBLE R 0 45}
addUserKnob {7 d_focal_point l "focal distance" +INVISIBLE R 0 10}
d_focal_point 2
addUserKnob {7 d_fstop l fstop +INVISIBLE R 0 30}
d_fstop 16
addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated May 18 2021." -STARTLINE +INVISIBLE T "<span style=\"color:#666\"><br/><b>DummyCam v1.2</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2019-2021</span>"}
addUserKnob {20 wired_tab l "Wired Stamp"}
addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
title CAM
addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T CAM}
addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>Camera</i>}
addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
addUserKnob {26 line1 l "" +STARTLINE}
addUserKnob {6 postageStamp_show l "postage stamp" t "Enable the postage stamp thumbnail in this node.\nYou're seeing this because the class of this node includes the postage_stamp knob." +HIDDEN +STARTLINE}
addUserKnob {26 anchor_label l Anchor: T " "}
addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
addUserKnob {26 stamps_label l Stamps: T " "}
addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
addUserKnob {26 space_1 l "" +STARTLINE T " "}
addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
addUserKnob {26 space_2 l "" +STARTLINE T " "}
addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
addUserKnob {1 anchor l Anchor}
anchor Anchor_6b5e587c1
addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
addUserKnob {26 line2 l "" +STARTLINE}
addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
}
Group {
inputs 2
name vtImagePlane27
selected true
xpos -9720
ypos 14825
addUserKnob {20 image_plane l "Image Plane"}
addUserKnob {4 output l Output M {"Image Plane (deep)" "Stabilize (deep)" "Matchmove (deep)" "" "" ""}}
output "Matchmove (deep)"
addUserKnob {6 geo_out l "output geo" -STARTLINE}
addUserKnob {41 reference_frame l "reference frame" T FrameHold1.first_frame}
addUserKnob {41 distance T TransformGeo1.uniform_scale}
addUserKnob {26 ""}
addUserKnob {41 orientation T Card1.orientation}
addUserKnob {41 image_aspect l "image aspect" -STARTLINE T Card1.image_aspect}
addUserKnob {41 rows l rows/columns T Card1.rows}
addUserKnob {41 columns l "" -STARTLINE T Card1.columns}
addUserKnob {41 z T Card1.z}
addUserKnob {41 lens_in_focal l "lens-in focal" T Card1.lens_in_focal}
addUserKnob {41 lens_in_haperture l "lens-in haperture" T Card1.lens_in_haperture}
addUserKnob {26 ""}
addUserKnob {20 Card l "Card and TransformGeo" n 1}
addUserKnob {41 xform_order l "transform order" T Card1.xform_order}
addUserKnob {41 rot_order l "rotation order" T Card1.rot_order}
addUserKnob {6 wireframe l "show wireframe" +STARTLINE}
addUserKnob {41 translate l INVISIBLE +INVISIBLE T Card1.translate}
addUserKnob {41 rotate T Card1.rotate}
addUserKnob {41 scaling l scale T Card1.scaling}
addUserKnob {41 uniform_scale l "uniform scale" T Card1.uniform_scale}
addUserKnob {41 skew T Card1.skew}
addUserKnob {41 pivot T Card1.pivot}
addUserKnob {26 text_transformgeo l TransformGeo}
addUserKnob {41 translate_1 l translate T TransformGeo1.translate}
addUserKnob {22 bake_geo l "Bake Geo" T "import math \n\nmResult = nuke.math.Matrix4()\nnode = nuke.thisNode()\n\nwith node:\n    card_export = nuke.toNode('CardExport')\nfor i in range(0,16):\n    mResult\[i] = card_export\['matrix'].valueAt(node\['reference_frame'].value())\[i]\n\nmResult.transpose()\n\nmTranslate = nuke.math.Matrix4(mResult)\nmTranslate.translationOnly()\nmRotate = nuke.math.Matrix4(mResult)\nmRotate.rotationOnly()\nmScale = nuke.math.Matrix4(mResult)\nmScale.scaleOnly()\n\ntranslate = (mTranslate\[12], mTranslate\[13], mTranslate\[14])\nrotateRad = mRotate.rotationsZXY()\nrotate = (math.degrees(rotateRad\[0]), math.degrees(rotateRad\[1]), math.degrees(rotateRad\[2]))\nscale = (1, 1, 1)\n\n\nbaked_card = nuke.createNode('Card2')\n#baked_card.setInput(0, None)\nbaked_card\['label'].setValue('Baked Card')\nbaked_card\['uniform_scale'].setValue(card_export\['uniform_scale'].value())\nbaked_card\['translate'].setValue(translate)\nbaked_card\['rotate'].setValue(rotate)" +STARTLINE}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 ScanlineRender n 1}
addUserKnob {41 antialiasing T ScanlineRender1.antialiasing}
addUserKnob {41 overscan T ScanlineRender1.overscan}
addUserKnob {41 samples T ScanlineRender1.samples}
addUserKnob {41 shutter T ScanlineRender1.shutter}
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 credits l "" +STARTLINE T "© 2019 Valentin Trasnea"}
}
Wireframe {
inputs 0
name Wireframe1
xpos 288
ypos 197
}
Input {
inputs 0
name project_camera
label "\[value number]"
xpos 212
ypos -148
number 3
}
Input {
inputs 0
name cam
label "\[value number]"
xpos 17
ypos -144
}
Dot {
name Dot1
xpos 51
ypos -50
}
set N5d16e6d0 [stack 0]
Switch {
inputs 2
which 1
name Switch1
xpos 212
ypos -54
disable {{"!\[exists input3]"}}
}
FrameHold {
first_frame 1008
name FrameHold1
xpos 212
ypos -15
disable {{"\[exists input3]"}}
addUserKnob {20 dneg l DNeg}
addUserKnob {26 _version l "" +STARTLINE +INVISIBLE T 1.1}
addUserKnob {22 documentation l Documentation -STARTLINE T nukescripts.start('http://dnet/x/PwBDBg')}
addUserKnob {26 ""}
addUserKnob {3 first_frame_dup l "first frame" t "The first frame to use. If increment is set to 0, first frame is used at every frame of the input clip.\n\n<b>NOTE:</b> This is a duplicate of the knob on the first tab, here for convenience. Any change here will set the knob on the first tab."}
first_frame_dup 1008
addUserKnob {3 increment_dup l increment t "The increment to use when rendering every certain number of frames from the input clip. For example, if this is set to 5 and first frame is set to 1, Nuke only uses frames 1, 6, 11, 16, and so on from the input.\n\n<b>NOTE:</b> This is a duplicate of the knob on the first tab, here for convenience. Any change here will set the knob on the first tab."}
addUserKnob {26 ""}
addUserKnob {22 comp_first l "comp first" t "Set the hold frame to the comp first frame, a.k.a. in Nuke parlance, root.first_frame, or in Shotgun parlance, 'sg_head_in'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"compFirstButton\"]).compFirstButton()"}
addUserKnob {22 cut_in l "cut in" t "Set the hold frame to the cut in frame, which is the comp first frame plus head handles, or in Shotgun parlance, 'sg_cut_in'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"cutInButton\"]).cutInButton()"}
addUserKnob {22 cut_out l "cut out" t "Set the hold frame to the cut out frame, which is the comp last frame minus tail handles, or in Shotgun parlance, 'sg_cut_out'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"cutOutButton\"]).cutOutButton()"}
addUserKnob {22 comp_last l "comp last" t "Set the hold frame to the comp last frame, a.k.a. in Nuke parlance, root.last_frame, or in Shotgun parlance, 'sg_tail_out'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"compLastButton\"]).compLastButton()"}
addUserKnob {26 "" -STARTLINE T " "}
addUserKnob {22 hero_frame l "hero frame" t "Set the hold frame to the hero frame from Shotgun, a.k.a. 'sg_hero_frame'. Beware that this may not always be set by the sequence supervisor. If not, go bug him or her!" T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"getHeroFrameButton\"]).getHeroFrameButton()" +STARTLINE}
addUserKnob {22 middle_frame l "middle frame" t "Set the hold frame to the frame between the cut in and cut out." -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"middleFrameButton\"]).middleFrameButton()"}
addUserKnob {22 current_frame l "current frame" t "Set the hold frame to the current frame as in the active viewer's timeline, a.k.a. nuke.frame()." -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"currentFrameButton\"]).currentFrameButton()"}
addUserKnob {26 ""}
addUserKnob {4 get_show_shot_from l "get show/shot from" t "Which should be used to retrieve info from the database? Default is <b>environment</b>, which uses \$SHOW and \$SHOT. If you want to use this node's input, use <b>metadata</b>, which will grab the input/filename value. Or, you can type it in manually with <b>specify</b>.," M {environment metadata specify}}
addUserKnob {6 always_refresh l "always refresh" t "If unchecked, use locally-cached frame range information if available. If checked, always refresh from the database no matter what. Certain actions will cause locally-cached frame range info to become stale and override this preference, such as changing the <i>get show/shot from</i> value." -STARTLINE}
addUserKnob {1 hidden_foce_startline +HIDDEN}
addUserKnob {26 show -STARTLINE +HIDDEN T " "}
addUserKnob {26 shot -STARTLINE +HIDDEN T " "}
addUserKnob {1 show_specify l show +HIDDEN}
show_specify " "
addUserKnob {1 shot_specify l shot +HIDDEN}
shot_specify " "
addUserKnob {26 cut_range l "cut range" +HIDDEN T " "}
addUserKnob {26 comp_range l "comp range" +HIDDEN T " "}
addUserKnob {26 hero_frame_value l "hero frame" +HIDDEN T " "}
addUserKnob {6 hidden_is_stale l "" -STARTLINE +HIDDEN}
addUserKnob {1 cut_in_specify +HIDDEN}
addUserKnob {1 cut_out_specify +HIDDEN}
addUserKnob {1 comp_first_specify +HIDDEN}
addUserKnob {1 comp_last_specify +HIDDEN}
addUserKnob {1 hero_frame_specify +HIDDEN}
}
Dot {
name Dot3
xpos 246
ypos 47
}
set Nb3f5a20 [stack 0]
Input {
inputs 0
name image
label "\[value number]"
xpos 439
ypos -134
number 1
}
set Nc4246940 [stack 0]
Project3D2 {
inputs 2
crop false
name Project3D2
xpos 305
ypos 43
}
push $N5d16e6d0
Dot {
name Dot2
xpos 51
ypos 83
}
set Nc5f89660 [stack 0]
push $Nc4246940
Project3D2 {
inputs 2
crop false
name Project3D1
xpos 439
ypos 79
}
set Nc616b6c0 [stack 0]
Dot {
name Dot6
xpos 531
ypos 121
}
push $Nc616b6c0
Switch {
inputs 3
which {{parent.output}}
name Switch_Output1
xpos 439
ypos 171
}
MergeMat {
inputs 2
operation plus
name MergeMat1
xpos 439
ypos 197
disable {{!parent.wireframe}}
}
set Neb5f2c80 [stack 0]
Input {
inputs 0
name geo
label "\[value number]"
xpos 624
ypos -135
number 2
}
ApplyMaterial {
inputs 2
name ApplyMaterial1
xpos 624
ypos 197
}
push $Nb3f5a20
Dot {
name Dot4
xpos 246
ypos 294
}
set Nea73d010 [stack 0]
push $Nea73d010
push $Neb5f2c80
Card2 {
z 22
uniform_scale 2
control_points {3 3 3 6 

1 {-0.5 0 -0.5} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0.1666666865} 0 {0 0 0} 0 {0 0 0} 
1 {0 0 -0.5} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0.1666666865} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 0 -0.5} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0.1666666865} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0.1666666716} 0 {0 0 -0.1666666716} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0.1666666716} 0 {0 0 -0.1666666716} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0.1666666716} 0 {0 0 -0.1666666716} 0 {1 0.5 0} 
1 {-0.5 0 0.5} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 0 -0.1666666865} 0 {0 1 0} 
1 {0 0 0.5} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 0 -0.1666666865} 0 {0.5 1 0} 
1 {0.5 0 0.5} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 0 -0.1666666865} 0 {1 1 0} }
name Card1
xpos 439
ypos 264
}
TransformGeo {
inputs 3
translate {0 0 {-uniform_scale}}
uniform_scale 46
name TransformGeo1
xpos 439
ypos 290
}
Switch {
inputs 2
which {{"\[exists parent.input2]"}}
name Switch_In_Geo
xpos 439
ypos 364
}
set N181d34d0 [stack 0]
Dot {
name Dot8
xpos 594
ypos 368
}
Dot {
name Dot7
xpos 594
ypos 678
}
push $Nc5f89660
Dot {
name Dot5
xpos 51
ypos 410
}
set Nb2a8c80 [stack 0]
push $N181d34d0
Input {
inputs 0
name bg
label bg
xpos 639
ypos 501
number 4
}
set N180d74c0 [stack 0]
ScanlineRender {
inputs 3
conservative_shader_sampling false
antialiasing {{parent.ScanlineRender1.antialiasing}}
overscan {{parent.ScanlineRender1.overscan} {parent.ScanlineRender1.overscan}}
samples {{parent.ScanlineRender1.samples}}
shutter {{parent.ScanlineRender1.shutter}}
shutteroffset centred
motion_vectors_type distance
name ScanlineRender3
xpos 17
ypos 513
}
push $Nea73d010
push $N181d34d0
push $N180d74c0
ScanlineRender {
inputs 3
conservative_shader_sampling false
antialiasing {{parent.ScanlineRender1.antialiasing}}
overscan {{parent.ScanlineRender1.overscan} {parent.ScanlineRender1.overscan}}
samples {{parent.ScanlineRender1.samples}}
shutter {{parent.ScanlineRender1.shutter}}
shutteroffset centred
motion_vectors_type distance
name ScanlineRender2
xpos 212
ypos 504
}
push $Nb2a8c80
push $N181d34d0
push $N180d74c0
ScanlineRender {
inputs 3
conservative_shader_sampling false
overscan {150 150}
shutteroffset centred
motion_vectors_type distance
name ScanlineRender1
xpos 439
ypos 507
}
Switch {
inputs 3
which {{parent.output}}
name Switch_Output
xpos 439
ypos 609
}
Switch {
inputs 2
which {{parent.geo_out}}
name Switch_Out_Geo
xpos 439
ypos 674
}
Output {
name Output1
xpos 439
ypos 752
}
Card2 {
inputs 0
uniform_scale {{abs(TransformGeo1.uniform_scale)*Card1.uniform_scale}}
useMatrix true
matrix {
    {{parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix}}
    {{parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix}}
    {{parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix}}
    {{parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix} {parent.Axis2.world_matrix}}
  }
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name CardExport
gl_color 0xffff00ff
xpos 955
ypos 346
}
push $Nea73d010
push $Nea73d010
Axis2 {
inputs 2
translate {{parent.TransformGeo1.translate} {parent.TransformGeo1.translate} {parent.TransformGeo1.translate}}
name Axis1
xpos 281
ypos 313
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_job': '', 'ivy_usemanualuri': False, 'leafname': '', 'ivy_vnum': 0, 'ivy_twignametags': \{\}, 'ivy_shot': '', 'ivy_regex': False, 'ivy_type': '', 'ivy_versionquery': '', 'spider_uri': ''\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
_expressions {{curve}}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
addUserKnob {1 leaf_label l Leaf}
addUserKnob {1 ivy_version l Version}
addUserKnob {43 ivy_notes l Notes}
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
}
Axis2 {
rotate {{parent.Card1.rotate} {parent.Card1.rotate} {parent.Card1.rotate}}
name Axis2
xpos 790
ypos 313
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_job': '', 'ivy_usemanualuri': False, 'leafname': '', 'ivy_vnum': 0, 'ivy_twignametags': \{\}, 'ivy_shot': '', 'ivy_regex': False, 'ivy_type': '', 'ivy_versionquery': '', 'spider_uri': ''\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
_expressions {{curve}}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
addUserKnob {1 leaf_label l Leaf}
addUserKnob {1 ivy_version l Version}
addUserKnob {43 ivy_notes l Notes}
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
}
end_group
Group {
name DEEP_CTRL12
tile_color 0xdfff00ff
note_font "Bitstream Vera Sans Bold"
note_font_size 22
note_font_color 0xff00bfff
selected true
xpos -9720
ypos 14882
addUserKnob {20 User}
addUserKnob {26 text_5 l "<font color='yellow'> <b>GR DEEP CTRL" T "Controller for repositioning generic FX elements within Deep.\t\t\t\t\t\t\t"}
addUserKnob {26 ""}
addUserKnob {26 text_1 l "<font color='yellow'> <b>Transform" T " "}
addUserKnob {26 text_4 l " " -STARTLINE T "    \t\t\t\t\t\t\t\t\t\t\t"}
addUserKnob {22 tReset l RESET -STARTLINE T "n=nuke.thisNode()\nn.knob('x').setValue(0)\nn.knob('y').setValue(0)\nn.knob('z').setValue(0)\n\nn.knob('x').clearAnimated()\nn.knob('y').clearAnimated()\nn.knob('z').clearAnimated()\n"}
addUserKnob {7 x R -2000 2000}
addUserKnob {7 y R -500 500}
addUserKnob {7 z R -1500 0}
addUserKnob {26 ""}
addUserKnob {26 text l "<font color='yellow'> <b>Scale" T "Scale is inverted here i.e. smaller number increases size.\t\t\t\t\t\t\t\t"}
addUserKnob {22 sReset l RESET -STARTLINE T "n=nuke.thisNode()\nn.knob('scale').setValue(1)\nn.knob('scale').clearAnimated()"}
addUserKnob {14 scale l "        " R 0 100}
scale 1
addUserKnob {26 ""}
addUserKnob {26 text_2 l "<font color='yellow'> <b>Volume" T " "}
addUserKnob {6 volumeswitch l on|off -STARTLINE}
volumeswitch true
addUserKnob {26 text_3 l " " -STARTLINE T " \t\t\t \t\t\t\t\t\t\t\t\t\t"}
addUserKnob {22 resetVolume l RESET -STARTLINE T "n=nuke.thisNode()\n\nn.knob('volumeswitch').setValue(0)\nn.knob('frontCTRL').setValue(0)\nn.knob('backCTRL').setValue(0)\n\nn.knob('frontCTRL').clearAnimated()\nn.knob('backCTRL').clearAnimated()"}
addUserKnob {7 frontCTRL l front R 0 1000}
addUserKnob {7 backCTRL l back R 0 1000}
addUserKnob {26 ""}
addUserKnob {26 text_6 l " " T "\t\t\t\t\t\t\t\t\t\t\t"}
addUserKnob {22 docs l "<font color='magenta'>Documentation" -STARTLINE T "nukescripts.openurl.start('http://dnet.dneg.com/display/GR/FX+-+Generic+renders')\n\n"}
}
Input {
inputs 0
name matte
xpos -393
ypos -624
number 1
}
Dot {
name Dot1
note_font_size 35
xpos -359
ypos -559
}
Input {
inputs 0
name input
xpos -590
ypos -1060
}
set N8ca6b520 [stack 0]
push $N8ca6b520
DeepRecolor {
inputs 2
name DeepRecolor2
xpos -590
ypos -1008
disable true
}
DeepToImage2 {
name DeepToImage1
xpos -590
ypos -960
disable true
}
Transform {
scale {{parent.scale}}
center {1920 804}
shutteroffset centred
name Transform1
xpos -590
ypos -860
disable true
}
Dot {
name Dot4
note_font_size 35
xpos -559
ypos -809
}
set Nc67a5150 [stack 0]
push $Nc67a5150
Dot {
name Dot3
note_font_size 35
xpos -659
ypos -809
}
DeepFromImage {
name DeepFromImage1
xpos -693
ypos -761
disable true
}
Dot {
name Dot2
note_font_size 35
xpos -659
ypos -709
}
DeepRecolor {
inputs 2
name DeepRecolor1
xpos -590
ypos -710
}
DeepReformat {
type scale
scale {{parent.scale} {parent.scale}}
resize none
pbb true
name DeepReformat1
xpos -590
ypos -658
}
DeepTransform {
inputs 2
translate {{parent.x} {parent.y} {parent.z}}
name DeepTransform1
xpos -590
ypos -560
}
DeepExpression {
chans1 deep
rgba.alpha rgba.alpha*0.999999
deep.front "deep.front - \[value softness_F]"
deep.back "deep.back + \[value softness_B]"
name DeepVolume1
label "Front \[value softness_F]\nBack \[value softness_B]"
xpos -590
ypos -472
disable {{1-parent.boolean}}
addUserKnob {20 DeepSoftness}
addUserKnob {7 softness_F l "Softness Front" R 0 1000}
softness_F {{parent.frontCTRL}}
addUserKnob {7 softness_B l "Softness Back" R 0 10000}
softness_B {{parent.backCTRL}}
}
Output {
name Output1
xpos -590
ypos -310
}
end_group
