set cut_paste_input [stack 0]
version 10.5 v7
BackdropNode {
inputs 0
name BackdropNode111
tile_color 0x36373737
label "<center><img src=\"Keyer.png\"> Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 60
selected true
xpos 72848
ypos 14908
bdwidth 4028
bdheight 3808
z_order -2
}
BackdropNode {
inputs 0
name BackdropNode185
tile_color 0x7f0001
label "<center><img src=\"Keyer.png\"> Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 60
selected true
xpos 77224
ypos 14932
bdwidth 4028
bdheight 3808
z_order -2
}
BackdropNode {
inputs 0
name BackdropNode112
tile_color 0x283744ff
label "<center><img src=\"Keyer.png\"> Core Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 73967
ypos 15850
bdwidth 996
bdheight 1335
z_order -1
}
BackdropNode {
inputs 0
name BackdropNode186
tile_color 0x2d5f27ff
label "<center><img src=\"Keyer.png\"> Core Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 78343
ypos 15874
bdwidth 996
bdheight 1335
z_order -1
}
BackdropNode {
inputs 0
name BackdropNode113
tile_color 0x283744ff
label "<center><img src=\"DustBust.png\"> Garbage Matte"
note_font_size 30
selected true
xpos 75826
ypos 17404
bdwidth 549
bdheight 808
}
BackdropNode {
inputs 0
name BackdropNode114
tile_color 0x283744ff
label "<center><img src=\"Keyer.png\"> Additive Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 76085
ypos 15850
bdwidth 510
bdheight 879
}
BackdropNode {
inputs 0
name BackdropNode179
tile_color 0x283744ff
label "<center><img src=\"EdgeDetect.png\"> Merge Keys"
note_font_size 30
selected true
xpos 75543
ypos 17398
bdwidth 262
bdheight 321
}
BackdropNode {
inputs 0
name BackdropNode180
tile_color 0x36373737
label "<center><img src=\"Radial.png\"> Roto Matte"
note_font_size 30
selected true
xpos 74383
ypos 16652
bdwidth 290
bdheight 467
}
BackdropNode {
inputs 0
name BackdropNode181
tile_color 0x283744ff
label "<center><img src=\"Keyer.png\"> Edge Key/Soft Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 74980
ypos 15849
bdwidth 1085
bdheight 1325
}
BackdropNode {
inputs 0
name BackdropNode182
tile_color 0x283744ff
label "<center><img src=\"HueCorrect.png\"> Despill"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 72962
ypos 15844
bdwidth 988
bdheight 2250
}
BackdropNode {
inputs 0
name BackdropNode183
tile_color 0x283744ff
label "<center><img src=\"Read.png\"> Scan"
note_font_size 30
selected true
xpos 75077
ypos 14959
bdwidth 1075
bdheight 367
}
BackdropNode {
inputs 0
name BackdropNode184
tile_color 0x283744ff
label "<center><img src=\"Merge.png\"> Denoised Element"
note_font_size 30
selected true
xpos 75333
ypos 15387
bdwidth 577
bdheight 391
}
BackdropNode {
inputs 0
name BackdropNode187
tile_color 0x36615401
label "<center><img src=\"DustBust.png\"> Garbage Matte"
note_font_size 30
selected true
xpos 80198
ypos 17428
bdwidth 549
bdheight 808
}
BackdropNode {
inputs 0
name BackdropNode188
tile_color 0x32b132ff
label "<center><img src=\"Keyer.png\"> Additive Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 80461
ypos 15874
bdwidth 510
bdheight 879
}
BackdropNode {
inputs 0
name BackdropNode189
tile_color 0x677f5201
label "<center><img src=\"EdgeDetect.png\"> Merge Keys"
note_font_size 30
selected true
xpos 79922
ypos 17458
bdwidth 262
bdheight 321
}
BackdropNode {
inputs 0
name BackdropNode190
tile_color 0x191901
label "<center><img src=\"Radial.png\"> Roto Matte"
note_font_size 30
selected true
xpos 78757
ypos 16676
bdwidth 290
bdheight 467
}
BackdropNode {
inputs 0
name BackdropNode191
tile_color 0x4d7f47ff
label "<center><img src=\"Keyer.png\"> Edge Key/Soft Key"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 79356
ypos 15873
bdwidth 1085
bdheight 1325
}
BackdropNode {
inputs 0
name BackdropNode192
tile_color 0x423c7f01
label "<center><img src=\"HueCorrect.png\"> Despill"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 77338
ypos 15871
bdwidth 988
bdheight 2250
}
BackdropNode {
inputs 0
name BackdropNode193
tile_color 0x7f5f0001
label "<center><img src=\"Read.png\"> Scan"
note_font_size 30
selected true
xpos 79449
ypos 14993
bdwidth 1075
bdheight 367
}
BackdropNode {
inputs 0
name BackdropNode194
tile_color 0x344234ff
label "<center><img src=\"Roto.png\"> Roto helpers"
note_font_size 30
selected true
xpos 79562
ypos 16152
bdwidth 416
bdheight 702
}
BackdropNode {
inputs 0
name BackdropNode195
tile_color 0x4b4b4b01
label "<center><img src=\"Merge.png\"> Denoised Element"
note_font_size 30
selected true
xpos 79707
ypos 15411
bdwidth 577
bdheight 391
}
BackdropNode {
inputs 0
name BackdropNode196
tile_color 0x191901
label "<center><img src=\"Radial.png\"> \nMerge"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 40
selected true
xpos 80985
ypos 15479
bdwidth 215
bdheight 3218
}
StickyNote {
inputs 0
name StickyNote118
label "<left>Use the gamma node to control the intensity\nof the soft key being merged with the core key matte"
selected true
xpos 75375
ypos 17610
}
StickyNote {
inputs 0
name StickyNote119
label "Dynamic despill"
selected true
xpos 73034
ypos 16503
}
StickyNote {
inputs 0
name StickyNote120
label "<left>Use this mask to stencil out\nundesired portions of the key"
selected true
xpos 76174
ypos 17924
}
StickyNote {
inputs 0
name StickyNote121
label "<left>Add additional rotos\nto alpha"
note_font_size 15
selected true
xpos 74513
ypos 17002
}
StickyNote {
inputs 0
name StickyNote122
label "<left>this mask pipe controls the blending\nof the despill treatment"
selected true
xpos 73936
ypos 17564
}
StickyNote {
inputs 0
name StickyNote123
label "Work your additive key here"
selected true
xpos 76273
ypos 15931
}
StickyNote {
inputs 0
name StickyNote124
label "<center>IBK stacker build node\n"
note_font_size 15
selected true
xpos 75719
ypos 16692
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1076
lifetime_end 1076
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto54
selected true
xpos 76080
ypos 17928
}
Dot {
name Dot143
selected true
xpos 76114
ypos 18148
}
Read {
inputs 0
file /jobs/ABR/fr0390/ELEMENT/E_fr0390_comp_denoise_fg01_s01_v001/2112x998/E_fr0390_comp_denoise_fg01_s01_v001.####.exr
localizationPolicy off
format "2112 998 0 0 2112 998 1 Alexa 65 OG Working"
proxy_format "640 480 0 0 640 480 1 PC_Video"
first 1001
last 1049
origfirst 1001
origlast 1049
origset true
smartGrade true
name Read83
selected true
xpos 75509
ypos 15565
icon popcorn_raw.png
postage_stamp false
postage_stamp_frame 1025
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_leaf': True, 'ivy_job': u'ABR', 'ivy_usemanualuri': False, 'leafname': u'main_proxy0', 'ivy_vnum': 1, 'ivy_twignametags': \[\{'text': '', 'required': False, 'name': 'label'\}, \{'text': '', 'required': False, 'name': 'layer'\}, \{'text': 'fg01_s01', 'required': False, 'name': 'scan_id'\}, \{'text': 'denoise', 'required': False, 'name': 'subtask'\}, \{'text': 'comp', 'required': False, 'name': 'task'\}], 'ivy_shot': '\[getenv SHOT]', 'ivy_regex': False, 'custom_settings': \{\}, 'ivy_type': u'elmr', 'ivy_versionquery': 'latest', 'spider_uri': 'spider://query@Stalk.latest?Stem.job==ABR&Stem.stemname==fr0390&TwigType.code.re(elmr)&Twig.transfix_map.re(^scan_id:fg01_s01;subtask:denoise;task:comp\$)&Stalk.reviewstatus!=Declined&Stalk.state==complete'\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
_ivyFile /jobs/ABR/fr0390/ELEMENT/E_fr0390_comp_denoise_fg01_s01_v001/2112x998/E_fr0390_comp_denoise_fg01_s01_v001.####.exr
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
_expressions {{curve}}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
twig_dnuuid 90da51e6-7d70-4ff8-89c5-10ce12686407
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
stalk_dnuuid 312ba136-160e-4f80-ae6a-90da3214de81
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
twigtype_dnuuid e9f824fa-c932-4c3e-acbd-c612fb5ea846
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
leaf_dnuuid ebdfa9d2-356e-4ddc-a1fb-4971ccaf40d4
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
twigtype elmr
addUserKnob {1 leaf_label l Leaf}
leaf_label main_proxy0
addUserKnob {1 ivy_version l Version}
ivy_version 1
addUserKnob {43 ivy_notes l Notes}
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
addUserKnob {20 popcorn l Popcorn}
addUserKnob {26 bakeIvyTabString l "" +STARTLINE T "bake ivy tab            "}
addUserKnob {4 bakeIvyTab l "" t "Updates the node based on the ivy tab either before or after executing all other calls." -STARTLINE M {off before after}}
bakeIvyTab before
addUserKnob {6 bakeMe l " " t "bake knobs to bake" +STARTLINE}
bakeMe true
addUserKnob {1 knobsToBake l "knobs to bake" t "comma-separated list of knobs to bake, or values to assign. eg: \"value=10, file=\[pcrn input 1]\"" -STARTLINE}
addUserKnob {6 execMe l " " t "exec knobs to exec" +STARTLINE}
addUserKnob {1 knobsToExec l "knobs to exec" t "comma-separated list of knobs (buttons) to execute()" -STARTLINE}
addUserKnob {6 execThis l " " t "run the code to exec" +STARTLINE}
addUserKnob {43 codeToExec l "code to exec " t "python code to exec()\nnuke.thisNode() is available to the code" -STARTLINE}
addUserKnob {6 dontBake l "  dont bake      " t "do not bake this node" +STARTLINE}
addUserKnob {3 bakeOrder l "bake order" t "Nodes are baked from the lowest order to the highest. Default value is 0" -STARTLINE}
}
Dot {
name Dot149
label "\n\n\n<left>\nDenoised Scan"
note_font_size 15
selected true
xpos 75543
ypos 15680
}
push $cut_paste_input
Dot {
name Dot233
selected true
xpos 75687
ypos 15362
}
set Na29fd200 [stack 0]
Dot {
name Dot465
selected true
xpos 75687
ypos 15447
}
set Na29eace0 [stack 0]
Switch {
inputs 2
which 1
name Switch13
selected true
xpos 75653
ypos 15676
}
Dot {
name Dot473
selected true
xpos 75687
ypos 15719
}
set N90de2cb0 [stack 0]
push $Na29eace0
Dot {
name Dot550
selected true
xpos 75805
ypos 15448
}
Merge2 {
inputs 2
operation from
name Merge39
selected true
xpos 75771
ypos 15715
}
Dot {
name Dot551
selected true
xpos 75805
ypos 15751
}
push $N90de2cb0
add_layer {grain grain.red grain.green grain.blue grain.alpha}
ShuffleCopy {
inputs 2
alpha alpha2
black red
white green
red2 blue
out2 grain
name ShuffleCopy2
selected true
xpos 75653
ypos 15742
}
Dot {
name Dot552
selected true
xpos 75687
ypos 15790
}
set Na0c88780 [stack 0]
Dot {
name Dot553
selected true
xpos 75687
ypos 16237
}
set Na0c8d210 [stack 0]
IBKColourV3 {
name IBKColourV3_1
selected true
xpos 75442
ypos 16233
}
Dot {
name Dot555
selected true
xpos 75475
ypos 16387
}
set Na8c6c660 [stack 0]
Dot {
name Dot586
label "clean plate"
selected true
xpos 76146
ypos 16387
}
dnLogLin {
operation lin2log
"log reference" 445
"lin reference" 0.18
"negative gamma" 0.6
"black level" 0
"dens per cv" 0.002
name dnLogLin1
selected true
xpos 76112
ypos 16430
}
Dot {
name Dot907
selected true
xpos 76146
ypos 16528
}
push $Na0c88780
Dot {
name Dot908
selected true
xpos 76263
ypos 15790
}
dnLogLin {
operation lin2log
"log reference" 445
"lin reference" 0.18
"negative gamma" 0.6
"black level" 0
"dens per cv" 0.002
name dnLogLin9
selected true
xpos 76229
ypos 16164
}
CheckerBoard2 {
inputs 0
name CheckerBoard2
selected true
xpos 76672
ypos 14728
}
Dot {
name Dot909
label "<--- Background"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold"
note_font_size 15
selected true
xpos 76706
ypos 14946
}
Dot {
name Dot910
selected true
xpos 76706
ypos 15036
}
set Na8cb1ca0 [stack 0]
dnLogLin {
operation lin2log
"log reference" 445
"lin reference" 0.18
"negative gamma" 0.6
"black level" 0
"dens per cv" 0.002
name dnLogLin10
selected true
xpos 76675
ypos 16177
}
AdditiveKeyer {
inputs 3
name AdditiveKeyer1
selected true
xpos 76675
ypos 16524
}
dnLogLin {
"log reference" 445
"lin reference" 0.18
"negative gamma" 0.6
"black level" 0
"dens per cv" 0.002
name dnLogLin12
selected true
xpos 76675
ypos 16645
}
Dot {
name Dot911
selected true
xpos 76709
ypos 16767
}
set Na28678e0 [stack 0]
push $Na8c6c660
Dot {
name Dot912
selected true
xpos 75475
ypos 16767
}
push $Na0c8d210
IBKGizmoV3 {
inputs 3
name IBKGizmoV3_1
xpos 75652
ypos 16763
}
Group {
name Restore_Grain2
selected true
xpos 75652
ypos 17106
}
Input {
inputs 0
name Input1
xpos 600
ypos -737
}
Dot {
name Dot2
xpos 634
ypos -667
}
set Na21b64c0 [stack 0]
Shuffle {
in grain
in2 rgba
alpha alpha2
name Shuffle12
xpos 444
ypos -677
}
Group {
name EH_DynamicDespill19
help "A simple expression based spill corrector that is enabled to use\nbackground luminance values if plugged in. Similar to the spill suppression\nin IBK Gizmo.\n\nAny questions contact cameron.a.carson@gmail.com"
knobChanged "nuke.thisNode()\['rgbWeight'].setVisible(nuke.thisNode()\['\nspillOp'].value()=='Average')\nnuke.thisNode()\['blgrtext'].\nsetVisible(nuke.thisNode()\['spillOp'].value()=='Average')"
tile_color 0x6aff55ff
xpos 444
ypos -547
addUserKnob {20 Main}
addUserKnob {4 spillType l "Spill Type" t "Select spill type to remove" M {Green Blue ""}}
addUserKnob {4 spillOp l "Spill Operation" t "Select the type of spill\noperation to perform" M {Average Max "Red Limit" "Blue/Green Limit" ""}}
addUserKnob {7 rgbWeight l "Red Weight" t "Adjust weight to favor one\ncolor or other." R -1 1}
addUserKnob {26 blgrtext l "Blue/Green Weight" -STARTLINE T " "}
addUserKnob {26 unnamed_1 l "" +STARTLINE T " "}
addUserKnob {7 opMult l "Operation Multiplier" t "This limiting channels\nare multiplied by this value." R 0 2}
opMult 1
addUserKnob {26 unnamed l "" +STARTLINE T " "}
addUserKnob {6 lumaRest l "Luma Match" t "Check to Restore Lumanance to BG\nor Original" +STARTLINE}
lumaRest true
addUserKnob {7 bgBlur l "BG PreBlur" t "Adjust to level of BG Blur\nDesired." R 0 50}
bgBlur 20
addUserKnob {26 unnamed_2 l "" +STARTLINE T " "}
addUserKnob {20 spillCC l "Luma Fill CC" n 1}
addUserKnob {18 blackCC l Blacks t "Lifts Blacks" R -1 1}
blackCC {0 0 0}
addUserKnob {6 blackCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 whiteCC l Whites t "Gains Whites" R 0 4}
whiteCC {0.6435800195 0.7375800014 0.8435800076}
addUserKnob {6 whiteCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gammaCC l Gamma t Gamma R 0 4}
gammaCC 1
addUserKnob {6 gammaCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {20 endGroup n -1}
addUserKnob {26 unnnamed l "" +STARTLINE T " "}
}
Input {
inputs 0
name FG
xpos 0
ypos -80
}
Dot {
name Dot1
xpos 34
ypos -40
}
set Na21db240 [stack 0]
Dot {
name Dot3
xpos 140
ypos -40
}
Dot {
name Dot2
xpos 140
ypos 117
}
set Na21e4880 [stack 0]
Dot {
name Dot4
xpos 140
ypos 157
}
set Na21e9330 [stack 0]
push $Na21e4880
push $Na21db240
Expression {
temp_name0 rw
temp_expr0 r*(1-rgbWeight)
temp_name1 gw
temp_expr1 g*(1+rgbWeight)
temp_name2 bw
temp_expr2 b*(1+rgbWeight)
expr0 r>(gw+bw)/2*opMult?(gw+bw)/2*opMult:r
expr1 g>(bw+rw)/2*opMult?(bw+rw)/2*opMult:g
expr2 b>(rw+gw)/2*opMult?(rw+gw)/2*opMult:b
name Average_Op
xpos 0
ypos -6
disable {{"spillOp != 0" x1 1}}
}
Expression {
temp_name0 lm
temp_expr0 "spillOp == 2 ? r : spillType == 0 ? b : g"
expr0 r>lm*opMult?lm*opMult:r
expr1 g>lm*opMult?lm*opMult:g
expr2 b>lm*opMult?lm*opMult:b
name Limit_Op
xpos 0
ypos 34
disable {{"spillOp < 2 "}}
}
Expression {
temp_name0 gb
temp_expr0 (g>b?g:b)
temp_name1 rb
temp_expr1 (r>b?r:b)
temp_name2 rg
temp_expr2 (r>g?r:g)
expr0 r>gb*opMult?gb*opMult:r
expr1 g>rb*opMult?rb*opMult:g
expr2 b>rg*opMult?rg*opMult:b
name Max_Op
xpos 0
ypos 74
disable {{"spillOp != 1"}}
}
ShuffleCopy {
inputs 2
red red
blue blue
alpha alpha2
name Copy_RedBlue
xpos 0
ypos 114
disable {{"spillType != 0"}}
}
ShuffleCopy {
inputs 2
red red
green green
alpha alpha2
name Copy_RedGreen
xpos 0
ypos 154
disable {{"spillType != 1"}}
}
Dot {
name Dot6
xpos 34
ypos 194
}
set Na22365d0 [stack 0]
push $Na21e9330
Merge2 {
inputs 2
operation from
name Merge3
xpos 106
ypos 191
}
Clamp {
name Clamp2
xpos 106
ypos 231
}
Saturation {
saturation 0
mode Maximum
name Saturation2
xpos 106
ypos 281
}
Grade {
black {{blackCC} {blackCC} {blackCC} {blackCC}}
white {{whiteCC} {whiteCC} {whiteCC} {whiteCC}}
gamma {{gammaCC x14 1.22}}
name Grade1
xpos 106
ypos 321
}
Dot {
name Dot5
xpos 140
ypos 361
}
set Na2276dd0 [stack 0]
Dot {
name Dot8
xpos 140
ypos 438
}
Input {
inputs 0
name BG
xpos 211
number 1
}
NoOp {
name NoOp1
xpos 211
ypos 95
}
Blur {
size {{bgBlur}}
name Blur1
xpos 211
ypos 185
}
push $Na2276dd0
Merge2 {
inputs 2
operation multiply
name Merge2
xpos 211
ypos 358
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot7
xpos 245
ypos 398
}
push $Na22365d0
Merge2 {
inputs 2
operation plus
name Merge1
xpos 0
ypos 395
disable {{"lumaRest != 1" x1 1}}
}
add_layer {SpillMap SpillMap.red SpillMap.green SpillMap.blue SpillMap.alpha}
ShuffleCopy {
inputs 2
red red
green green
blue blue
alpha red
out SpillMap
name ShuffleCopy1
xpos 0
ypos 435
}
Output {
name Output1
xpos 0
ypos 507
}
end_group
push $Na21b64c0
Dot {
name Dot1
xpos 634
ypos -595
}
Merge2 {
inputs 2
operation plus
Achannels rgb
maskChannelInput rgba.alpha
name Plus5
xpos 600
ypos -553
}
Output {
name Output1
xpos 600
ypos -447
}
end_group
Gamma {
name Gamma2
label "Soft key adjust"
selected true
xpos 75652
ypos 17617
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1107
lifetime_end 1107
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto55
selected true
xpos 74412
ypos 16935
}
Dot {
name Dot913
selected true
xpos 74446
ypos 17081
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1107
lifetime_end 1107
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto56
selected true
xpos 74832
ypos 16304
}
Dot {
name Dot914
selected true
xpos 74866
ypos 16461
}
push $Na0c88780
Dot {
name Dot915
selected true
xpos 74757
ypos 15790
}
set Na262cd50 [stack 0]
Primatte3 {
data { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
init_hybrid_matte true
crop {0 0 2112 998}
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
name Primatte4
selected true
xpos 74723
ypos 16052
}
push $Na262cd50
Dot {
name Dot916
selected true
xpos 74569
ypos 15790
}
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 1
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 1
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight1
selected true
xpos 74535
ypos 16061
}
Dot {
name Dot917
selected true
xpos 74569
ypos 16461
}
Keymix {
inputs 3
name Keymix21
selected true
xpos 74723
ypos 16451
}
Merge2 {
inputs 2
name Merge41
selected true
xpos 74723
ypos 17077
}
KeyChewV4 {
name KeyChewV4_18
selected true
xpos 74723
ypos 17202
bbox {{"\[python nuke.thisNode().input(0).format().x()]"} {"\[python nuke.thisNode().input(0).format().y()]"} {"\[python nuke.thisNode().input(0).format().r()]"} {"\[python nuke.thisNode().input(0).format().t()]"}}
}
Dot {
name Dot918
selected true
xpos 74757
ypos 17710
}
ChannelMerge {
inputs 2
name ChannelMerge92
selected true
xpos 75652
ypos 17694
}
Merge2 {
inputs 2
operation stencil
bbox A
name Merge42
selected true
xpos 75652
ypos 18144
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1076
lifetime_end 1076
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto57
selected true
xpos 73844
ypos 17507
}
Dot {
name Dot919
selected true
xpos 73878
ypos 17639
}
push $Na29fd200
Dot {
name Dot920
selected true
xpos 73742
ypos 15362
}
set Na2b9e1a0 [stack 0]
Dot {
name Dot921
selected true
xpos 73744
ypos 16454
}
push $Na8cb1ca0
Dot {
name Dot922
selected true
xpos 73854
ypos 15036
}
set Na2b3b710 [stack 0]
Dot {
name Dot923
selected true
xpos 73854
ypos 16510
}
SoftKeyer {
inputs 2
name SoftKeyer3
selected true
xpos 73710
ypos 16506
add {0.2291824371 0.6539827585 0.1091662496 0}
lMatch 0.5
}
Dot {
inputs 0
name Dot924
selected true
xpos 73336
ypos 17431
}
push $Na2b9e1a0
Dot {
name Dot925
selected true
xpos 73172
ypos 15362
}
set Na2be93f0 [stack 0]
Dot {
name Dot926
selected true
xpos 73011
ypos 15362
}
Dot {
name Dot927
selected true
xpos 73011
ypos 17431
}
push $Na2b3b710
Dot {
name Dot928
selected true
xpos 73338
ypos 15036
}
Dot {
name Dot929
selected true
xpos 73338
ypos 16507
}
push $Na2be93f0
Group {
inputs 2
name EH_DynamicDespill1
help "A simple expression based spill corrector that is enabled to use\nbackground luminance values if plugged in. Similar to the spill suppression\nin IBK Gizmo.\n\nAny questions contact cameron.a.carson@gmail.com"
knobChanged "nuke.thisNode()\['rgbWeight'].setVisible(nuke.thisNode()\['\nspillOp'].value()=='Average')\nnuke.thisNode()\['blgrtext'].\nsetVisible(nuke.thisNode()\['spillOp'].value()=='Average')"
tile_color 0x6aff55ff
selected true
xpos 73138
ypos 16503
addUserKnob {20 Main}
addUserKnob {4 use l Use M {Background "Luma Fill CC" ""}}
use "Luma Fill CC"
addUserKnob {4 spillType l "Spill Type" t "Select spill type to remove" M {Green Blue ""}}
addUserKnob {4 spillOp l "Spill Operation" t "Select the type of spill\noperation to perform" M {Average Max "Red Limit" "Blue/Green Limit" ""}}
addUserKnob {7 rgbWeight l "Red Weight" t "Adjust weight to favor one\ncolor or other." R -1 1}
rgbWeight -0.1
addUserKnob {26 blgrtext l "Blue/Green Weight" -STARTLINE T " "}
addUserKnob {26 unnamed_1 l "" +STARTLINE T " "}
addUserKnob {7 opMult l "Operation Multiplier" t "This limiting channels\nare multiplied by this value." R 0 2}
opMult 1
addUserKnob {26 unnamed l "" +STARTLINE T " "}
addUserKnob {6 lumaRest l "Luma Match" t "Check to Restore Lumanance to BG\nor Original" +STARTLINE}
lumaRest true
addUserKnob {7 bgBlur l "BG PreBlur" t "Adjust to level of BG Blur\nDesired." R 0 50}
bgBlur 20
addUserKnob {26 unnamed_2 l "" +STARTLINE T " "}
addUserKnob {20 spillCC l "Luma Fill CC" n 1}
addUserKnob {18 blackCC l Blacks t "Lifts Blacks" R -1 1}
blackCC {0 0 0}
addUserKnob {6 blackCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 whiteCC l Whites t "Gains Whites" R 0 4}
whiteCC {0.5807133317 0.7307133675 0.9607133269}
addUserKnob {6 whiteCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gammaCC l Gamma t Gamma R 0 4}
gammaCC 1
addUserKnob {6 gammaCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {20 endGroup n -1}
addUserKnob {26 unnnamed l "" +STARTLINE T " "}
}
Input {
inputs 0
name BG
xpos 211
ypos -205
number 1
}
Blur {
size {{bgBlur}}
name Blur1
xpos 211
ypos 185
}
Input {
inputs 0
name FG
xpos 0
ypos -200
}
Dot {
name Dot1
xpos 34
ypos -160
}
set N9f0af910 [stack 0]
Dot {
name Dot3
xpos 140
ypos -160
}
Dot {
name Dot2
xpos 140
ypos 4
}
set N9f0b8e20 [stack 0]
Dot {
name Dot4
xpos 140
ypos 85
}
set N9f0bd880 [stack 0]
push $N9f0b8e20
push $N9f0af910
Expression {
temp_name0 rw
temp_expr0 r*(1-rgbWeight)
temp_name1 gw
temp_expr1 g*(1+rgbWeight)
temp_name2 bw
temp_expr2 b*(1+rgbWeight)
expr0 r>(gw+bw)/2*opMult?(gw+bw)/2*opMult:r
expr1 g>(bw+rw)/2*opMult?(bw+rw)/2*opMult:g
expr2 b>(rw+gw)/2*opMult?(rw+gw)/2*opMult:b
name Average_Op
xpos 0
ypos -122
disable {{"spillOp != 0" x1 1}}
}
Expression {
temp_name0 lm
temp_expr0 "spillOp == 2 ? r : spillType == 0 ? b : g"
expr0 r>lm*opMult?lm*opMult:r
expr1 g>lm*opMult?lm*opMult:g
expr2 b>lm*opMult?lm*opMult:b
name Limit_Op
xpos 0
ypos -86
disable {{"spillOp < 2 "}}
}
Expression {
temp_name0 gb
temp_expr0 (g>b?g:b)
temp_name1 rb
temp_expr1 (r>b?r:b)
temp_name2 rg
temp_expr2 (r>g?r:g)
expr0 r>gb*opMult?gb*opMult:r
expr1 g>rb*opMult?rb*opMult:g
expr2 b>rg*opMult?rg*opMult:b
name Max_Op
xpos 0
ypos -42
disable {{"spillOp != 1"}}
}
ShuffleCopy {
inputs 2
red red
blue blue
alpha alpha2
name Copy_RedBlue
xpos 0
ypos -6
disable {{"spillType != 0" x1339 1}}
}
ShuffleCopy {
inputs 2
red red
green green
alpha alpha2
name Copy_RedGreen
xpos 0
ypos 75
disable {{"spillType != 1"}}
}
Dot {
name Dot6
xpos 34
ypos 194
}
set N9f10ab90 [stack 0]
push $N9f0bd880
Merge2 {
inputs 2
operation from
name Merge3
xpos 106
ypos 190
}
Clamp {
name Clamp2
xpos 106
ypos 233
}
Saturation {
saturation 0
mode Maximum
name Saturation2
xpos 106
ypos 281
}
Grade {
black {{blackCC} {blackCC} {blackCC} {blackCC}}
white {{whiteCC} {whiteCC} {whiteCC} {whiteCC}}
gamma {{gammaCC x14 1.22}}
name Grade1
xpos 106
ypos 325
}
Dot {
name Dot5
xpos 140
ypos 361
}
set N9f14b390 [stack 0]
Merge2 {
inputs 2
operation multiply
name Merge2
label "!\[exists parent.input1]"
xpos 211
ypos 351
disable {{parent.use}}
}
Dot {
name Dot7
xpos 245
ypos 484
}
push $N9f14b390
Dot {
name Dot8
xpos 140
ypos 414
}
push $N9f10ab90
ShuffleCopy {
inputs 2
red red
green green
blue blue
alpha red
out SpillMap
name ShuffleCopy1
xpos 0
ypos 404
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 0
ypos 480
disable {{"lumaRest != 1" x1 1}}
}
set N9f177830 [stack 0]
Output {
name Output1
xpos 0
ypos 593
}
push $N9f177830
Viewer {
frame_range 1001-1142
frame_increment 8
overscan 300
center_fstop 0
viewerProcess Film
input_process false
far 100000
name Viewer1
xpos 245
ypos 553
}
end_group
Group {
inputs 3
name Restore_Luma
selected true
xpos 73138
ypos 17427
}
Input {
inputs 0
name Mask
xpos 125
ypos -42
number 2
}
Dot {
name Dot1
xpos 159
ypos 173
}
Input {
inputs 0
name Scan
xpos -128
ypos -43
number 1
}
Input {
inputs 0
name Despill
xpos 0
ypos -43
}
Dot {
name Dot49
xpos 34
ypos 124
}
set N9f207c10 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge2
xpos -128
ypos 120
}
Saturation {
saturation 0
name Saturation1
xpos -128
ypos 169
}
push $N9f207c10
Merge2 {
inputs 2+1
operation plus
name Merge7
xpos 0
ypos 169
}
Output {
name Output1
xpos 0
ypos 300
}
end_group
Dot {
name Dot930
selected true
xpos 73172
ypos 17639
}
Keymix {
inputs 3
name Keymix23
selected true
xpos 73710
ypos 17629
}
Dot {
name Dot931
selected true
xpos 73744
ypos 18257
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy9
selected true
xpos 75652
ypos 18247
}
Premult {
name Premult6
selected true
xpos 75652
ypos 18342
}
Dot {
name Dot932
selected true
xpos 75684
ypos 18633
}
push $Na28678e0
Merge2 {
inputs 2
bbox B
name Merge43
label "also merge : \[value also_merge]"
selected true
xpos 76675
ypos 18623
}
push $Na29eace0
OFXcom.absoft.neatvideo4_v4 {
DNP 
NFP ODA1APotAAAAAAAAAAABAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AACAPwAAgD/NzMw+zcxMP83MTD8BAAAAAADAPwAAwD8AAIA/AACAPwAAgD8AAAAAAAAAP5qZmT4AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAIA/AACAPwAAgD8AAQAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAQEBAQEBAQEBAQEAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAgAAAAAAgD8AAAAAAAAAAAAAwD8AAAAAAAAAAAAAAD8BAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQD8AAIA/AACAPwAAgD8BAAAAAAAAAAAAgD8AAIA/AAAAAAAAAACamVkgw
ParamsHash1 -608523119
ParamsHash2 260
ParamsHash3 0
name "Reduce Noise v4_3"
selected true
xpos 75507
ypos 15443
}
Dot {
name Dot933
selected true
xpos 75541
ypos 15469
}
FileOut {
name FileOut38
tile_color 0xbfbf00ff
selected true
xpos 75507
ypos 15488
icon smartgrade.png
channels rgba
_destination /jobs
file /jobs/ABR/lh0020/ELEMENT/E_lh0020_comp_denoise_fg01_s01_v001/2112x998/E_lh0020_comp_denoise_fg01_s01_v001.####.exr
proxy ""
fileProxy /jobs/ABR/lh0020/ELEMENT/E_lh0020_comp_denoise_fg01_s01_v001/1056x499/E_lh0020_comp_denoise_fg01_s01_v001.####.exr
views {main}
first 1001
last 1100
pbb true
smart_grade on
tex_metadata "default metadata and exr/*"
_format "2112 998 0 0 2112 998 1.0 Alexa 65 OG Working"
_generator "NukeRenderGenerator dnnuke.core.render.generators"
_ivyVals "\{'variant': None, 'host': None, 'versionNum': '1', 'twigType': 'spider://query@TwigType.one?TwigType.code==2d', 'twigNameTags': \{'scan_id': u'fg01_s01', 'task': u'comp', 'subtask': u'denoise', 'out_dir': u'ELEMENT'\}, 'job': 'ABR', 'stalk': None, 'stalkAttrs': \{'framerange': '1001-1049'\}, 'twig': None, 'stem': 'spider://query@Stem.one?Stem.dnuuid==4cbb4725-fef0-4131-ae57-0decd8c661d0&Stem.stemname==fr0390&Stem.stemtype==shot'\}"
_old_filetype exr
_stalkname E_fr0390_comp_denoise_fg01_s01_v001
_twigtype 2d
_wrapper "FileOut dnnuke.nodes.file_out.wrapper"
beforeRender ""
beforeFrameRender ""
afterFrameRender ""
afterRender ""
renderProgress ""
_invert_grade /tools/ABR/ivyasset/fr0390/ivy/grade/GRD_fr0390_neutral_v001/GRD_fr0390_neutral_v001.grade
addUserKnob {20 popcorn l Popcorn}
addUserKnob {6 bakeMe l " " t "bake knobs to bake" +STARTLINE}
bakeMe true
addUserKnob {1 knobsToBake l "knobs to bake" t "comma-separated list of knobs to bake, or values to assign. eg: \"value=10, file=\[pcrn input 1]\"" -STARTLINE}
addUserKnob {6 execMe l " " t "exec knobs to exec" +STARTLINE}
addUserKnob {1 knobsToExec l "knobs to exec" t "comma-separated list of knobs (buttons) to execute()" -STARTLINE}
addUserKnob {6 execThis l " " t "run the code to exec" +STARTLINE}
addUserKnob {43 codeToExec l "code to exec " t "python code to exec()\nnuke.thisNode() is available to the code" -STARTLINE}
addUserKnob {6 dontBake l "  dont bake      " t "do not bake this node" +STARTLINE}
addUserKnob {3 bakeOrder l "bake order" t "Nodes are baked from the lowest order to the highest. Default value is 0" -STARTLINE}
}
StickyNote {
inputs 0
name StickyNote125
label "after loading the scan, apply neutral grade"
selected true
xpos 75777
ypos 15254
}
Group {
inputs 0
name Spawner15
tile_color 0x4c4c4cff
label "Get Scan all"
note_font "Bitstream Vera Sans"
note_font_color 0xffffffff
selected true
xpos 75637
ypos 15181
icon popcorn_raw.png
addUserKnob {20 Spawner}
addUserKnob {1 _spawn_data +INVISIBLE}
_spawn_data "\{'uri_settings': \{'interface': 'Stalk', 'search': %%'Stem.job==\{job\}', 'TwigType.code==scan', 'Stalk.ondisk_\{site\}==Full', 'Stem.stemname==\{shot\}'\$\$, 'method': 'latestAll'\}, 'import_settings': \{'delete_after_spawn': False, 'spacing': '100', 'select_nodes': True, 'import_method': 'latest', 'position': '0 -100'\}, 'schema': 1\}"
addUserKnob {6 spawner -STARTLINE +INVISIBLE}
spawner true
addUserKnob {1 _class l "" +STARTLINE +INVISIBLE}
_class Spawner
addUserKnob {1 _wrapper l "" +STARTLINE +INVISIBLE}
_wrapper "Spawner dnnuke.core.spawn.wrapper"
addUserKnob {22 docButton l Documentation T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocs']).openDocs(nuke.thisNode())" +STARTLINE}
addUserKnob {26 docdivider l "" +STARTLINE}
addUserKnob {52 spawner_widget l "" +STARTLINE T "__import__('dnnuke.core.spawn.node', fromlist=\['SpawnerKnobWrapper']).SpawnerKnobWrapper(nuke.thisNode())" +STARTLINE}
addUserKnob {20 "Code To Execute"}
addUserKnob {43 codeBeforeSpawn l "Execute before spawning" t "python code to exec() before spawning\nnuke.thisNode() is available to the code"}
addUserKnob {43 codeAfterSpawn l "Execute after spawning" t "python code to exec() after spawning is completed\nnuke.thisSpawn() and thisNode() are available to the code"}
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_job': '', 'ivy_usemanualuri': False, 'leafname': '', 'ivy_vnum': 0, 'ivy_twignametags': \{\}, 'ivy_shot': '', 'ivy_regex': False, 'ivy_type': '', 'ivy_versionquery': '', 'spider_uri': ''\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
addUserKnob {1 leaf_label l Leaf}
addUserKnob {1 ivy_version l Version}
addUserKnob {43 ivy_notes l Notes}
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
addUserKnob {20 popcorn l Popcorn}
addUserKnob {26 bakeIvyTabString l "" +STARTLINE T "bake ivy tab            "}
addUserKnob {4 bakeIvyTab l "" t "Updates the node based on the ivy tab either before or after executing all other calls." -STARTLINE M {off before after}}
addUserKnob {26 bakeSpawnerString l "" +STARTLINE T "bake spawner            "}
addUserKnob {4 bakeSpawner l "" t "Execute this spawner node before or after executing all other calls." -STARTLINE M {off before after}}
bakeSpawner before
addUserKnob {6 bakeMe l " " t "bake knobs to bake" +STARTLINE}
bakeMe true
addUserKnob {1 knobsToBake l "knobs to bake" t "comma-separated list of knobs to bake, or values to assign. eg: \"value=10, file=\[pcrn input 1]\"" -STARTLINE}
addUserKnob {6 execMe l " " t "exec knobs to exec" +STARTLINE}
addUserKnob {1 knobsToExec l "knobs to exec" t "comma-separated list of knobs (buttons) to execute()" -STARTLINE}
addUserKnob {6 execThis l " " t "run the code to exec" +STARTLINE}
addUserKnob {43 codeToExec l "code to exec " t "python code to exec()\nnuke.thisNode() is available to the code" -STARTLINE}
addUserKnob {6 dontBake l "  dont bake      " t "do not bake this node" +STARTLINE}
addUserKnob {3 bakeOrder l "bake order" t "Nodes are baked from the lowest order to the highest. Default value is 0" -STARTLINE}
}
Input {
inputs 0
name Input1
}
Output {
name Output1
}
end_group
Read {
inputs 0
file /jobs/ABR/fr0390/SCAN/S_fr0390_fg01_s01/2112x998/s_fr0390_fg01_s01.####.exr
localizationPolicy off
format "2112 998 0 0 2112 998 1 Alexa 65 OG Working"
proxy /jobs/ABR/fr0390/SCAN/S_fr0390_fg01_s01/1056x499/s_fr0390_fg01_s01.%04d.exr
proxy_format "640 480 0 0 640 480 1 PC_Video"
first 977
last 1073
origfirst 977
origlast 1073
origset true
smartGrade true
name Read84
selected true
xpos 75637
ypos 15081
postage_stamp_frame 1025
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_job': '', 'ivy_usemanualuri': False, 'leafname': '', 'ivy_vnum': 0, 'ivy_twignametags': \{\}, 'ivy_shot': '', 'ivy_regex': False, 'ivy_type': '', 'ivy_versionquery': '', 'spider_uri': ''\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
_ivyFile /jobs/ABR/fr0390/SCAN/S_fr0390_fg01_s01/2112x998/s_fr0390_fg01_s01.####.exr
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
twig_dnuuid 7499587e-fb2c-4264-833b-7620a66b0cce
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
stalk_dnuuid 41bfe912-4dec-43bd-b319-5f984d015b15
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
twigtype_dnuuid 38226990-7e50-479d-9b0e-7db373dd96c9
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
leaf_dnuuid a2fd8038-c92c-4bad-af2e-58c271a26715
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
twigtype scan
addUserKnob {1 leaf_label l Leaf}
leaf_label main_proxy0
addUserKnob {1 ivy_version l Version}
ivy_version 1
addUserKnob {43 ivy_notes l Notes}
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
}
StickyNote {
inputs 0
name StickyNote126
label "<left>Use the gamma node to control the intensity\nof the soft key being merged with the core key matte"
selected true
xpos 79751
ypos 17634
}
StickyNote {
inputs 0
name StickyNote127
label "Dynamic despill"
selected true
xpos 77410
ypos 16530
}
StickyNote {
inputs 0
name StickyNote128
label "<left>Use this mask to stencil out\nundesired portions of the key"
selected true
xpos 80546
ypos 17948
}
StickyNote {
inputs 0
name StickyNote129
label "<left>Roto helpers to aid getting rid\nof undesired colors pull into the clean plate\n\n"
selected true
xpos 79657
ypos 16231
}
StickyNote {
inputs 0
name StickyNote130
label "<left>Add additional rotos\nto alpha"
note_font_size 15
selected true
xpos 78887
ypos 17026
}
StickyNote {
inputs 0
name StickyNote131
label "<left>this mask pipe controls the blending\nof the despill treatment"
selected true
xpos 78312
ypos 17588
}
StickyNote {
inputs 0
name StickyNote132
label "Work your additive key here"
selected true
xpos 80649
ypos 15955
}
StickyNote {
inputs 0
name StickyNote133
label "<center>IBK stacker build node\n"
note_font_size 15
selected true
xpos 80095
ypos 16716
}
Read {
inputs 0
file /jobs/ABR/fr0390/SCAN/S_fr0390_fg01_s01/2112x998/s_fr0390_fg01_s01.####.exr
localizationPolicy off
format "2112 998 0 0 2112 998 1 Alexa 65 OG Working"
proxy /jobs/ABR/fr0390/SCAN/S_fr0390_fg01_s01/1056x499/s_fr0390_fg01_s01.%04d.exr
proxy_format "640 480 0 0 640 480 1 PC_Video"
first 977
last 1073
origfirst 977
origlast 1073
origset true
smartGrade true
name Read96
selected true
xpos 80029
ypos 15104
icon popcorn_raw.png
postage_stamp_frame 1025
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_leaf': True, 'ivy_job': u'ABR', 'ivy_usemanualuri': False, 'leafname': u'main_proxy0', 'ivy_vnum': 1, 'ivy_twignametags': \[\{'text': 'fg01', 'required': True, 'name': 'scan_id'\}], 'ivy_shot': '\[getenv SHOT]', 'ivy_regex': False, 'custom_settings': \{u'is_hero': False\}, 'ivy_type': u'scan', 'ivy_versionquery': 'approved', 'spider_uri': 'spider://query@Stalk.latest?Stem.job==ABR&Stem.stemname==fr0390&TwigType.code.re(scan)&Twig.transfix_map.re(^scan_id:fg01\$)&Stalk.reviewstatus==Approved&Stalk.state==complete'\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
_ivyFile /jobs/ABR/fr0390/SCAN/S_fr0390_fg01_s01/2112x998/s_fr0390_fg01_s01.####.exr
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
_expressions {{curve}}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
twig_dnuuid 7499587e-fb2c-4264-833b-7620a66b0cce
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
stalk_dnuuid 41bfe912-4dec-43bd-b319-5f984d015b15
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
twigtype_dnuuid 38226990-7e50-479d-9b0e-7db373dd96c9
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
leaf_dnuuid a2fd8038-c92c-4bad-af2e-58c271a26715
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
twigtype scan
addUserKnob {1 leaf_label l Leaf}
leaf_label main_proxy0
addUserKnob {1 ivy_version l Version}
ivy_version 1
addUserKnob {43 ivy_notes l Notes}
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
addUserKnob {20 popcorn l Popcorn}
addUserKnob {26 bakeIvyTabString l "" +STARTLINE T "bake ivy tab            "}
addUserKnob {4 bakeIvyTab l "" t "Updates the node based on the ivy tab either before or after executing all other calls." -STARTLINE M {off before after}}
bakeIvyTab after
addUserKnob {6 bakeMe l " " t "bake knobs to bake" +STARTLINE}
bakeMe true
addUserKnob {1 knobsToBake l "knobs to bake" t "comma-separated list of knobs to bake, or values to assign. eg: \"value=10, file=\[pcrn input 1]\"" -STARTLINE}
addUserKnob {6 execMe l " " t "exec knobs to exec" +STARTLINE}
addUserKnob {1 knobsToExec l "knobs to exec" t "comma-separated list of knobs (buttons) to execute()" -STARTLINE}
addUserKnob {6 execThis l " " t "run the code to exec" +STARTLINE}
addUserKnob {43 codeToExec l "code to exec " t "python code to exec()\nnuke.thisNode() is available to the code" -STARTLINE}
addUserKnob {6 dontBake l "  dont bake      " t "do not bake this node" +STARTLINE}
addUserKnob {3 bakeOrder l "bake order" t "Nodes are baked from the lowest order to the highest. Default value is 0" -STARTLINE}
}
SmartGrade {
name SmartGrade5
selected true
xpos 80029
ypos 15237
channels rgb
file /tools/ABR/ivyasset/fr0390/ivy/grade/GRD_fr0390_neutral_v001/GRD_fr0390_neutral_v001.grade
}
Dot {
name Dot934
selected true
xpos 80063
ypos 15386
}
set N284a0460 [stack 0]
Dot {
name Dot935
selected true
xpos 80063
ypos 15471
}
set N1133c260 [stack 0]
OFXcom.absoft.neatvideo4_v4 {
DNP 
NFP ODA1APotAAAAAAAAAAABAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AACAPwAAgD/NzMw+zcxMP83MTD8BAAAAAADAPwAAwD8AAIA/AACAPwAAgD8AAAAAAAAAP5qZmT4AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAIA/AACAPwAAgD8AAQAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAQEBAQEBAQEBAQEAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAgAAAAAAgD8AAAAAAAAAAAAAwD8AAAAAAAAAAAAAAD8BAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQD8AAIA/AACAPwAAgD8BAAAAAAAAAAAAgD8AAIA/AAAAAAAAAACamVkgw
ParamsHash1 -608523119
ParamsHash2 260
ParamsHash3 0
name "Reduce Noise v4_4"
selected true
xpos 79883
ypos 15467
}
Dot {
name Dot936
selected true
xpos 79917
ypos 15493
}
FileOut {
name FileOut40
tile_color 0xbfbf00ff
selected true
xpos 79883
ypos 15511
icon smartgrade.png
channels rgba
_destination /jobs
file /jobs/ABR/lh0020/ELEMENT/E_lh0020_comp_denoise_fg01_s01_v001/2112x998/E_lh0020_comp_denoise_fg01_s01_v001.####.exr
proxy ""
fileProxy /jobs/ABR/lh0020/ELEMENT/E_lh0020_comp_denoise_fg01_s01_v001/1056x499/E_lh0020_comp_denoise_fg01_s01_v001.####.exr
views {main}
first 1001
last 1100
pbb true
smart_grade on
tex_metadata "default metadata and exr/*"
_format "1 1 0 0 1 1 1.0 "
_generator "NukeRenderGenerator dnnuke.core.render.generators"
_ivyVals "\{'variant': None, 'host': None, 'versionNum': '1', 'twigType': 'spider://query@TwigType.one?TwigType.code==2d', 'twigNameTags': \{'scan_id': u'fg01_s01', 'task': u'comp', 'subtask': u'denoise', 'out_dir': u'ELEMENT'\}, 'job': 'ABR', 'stalk': None, 'stalkAttrs': \{'framerange': '1001-1049'\}, 'twig': None, 'stem': 'spider://query@Stem.one?Stem.dnuuid==4cbb4725-fef0-4131-ae57-0decd8c661d0&Stem.stemname==fr0390&Stem.stemtype==shot'\}"
_old_filetype exr
_stalkname E_fr0390_comp_denoise_fg01_s01_v001
_twigtype 2d
_wrapper "FileOut dnnuke.nodes.file_out.wrapper"
beforeRender ""
beforeFrameRender ""
afterFrameRender ""
afterRender ""
renderProgress ""
_invert_grade /tools/ABR/ivyasset/fr0390/ivy/grade/GRD_fr0390_neutral_v001/GRD_fr0390_neutral_v001.grade
addUserKnob {20 popcorn l Popcorn}
addUserKnob {6 bakeMe l " " t "bake knobs to bake" +STARTLINE}
bakeMe true
addUserKnob {1 knobsToBake l "knobs to bake" t "comma-separated list of knobs to bake, or values to assign. eg: \"value=10, file=\[pcrn input 1]\"" -STARTLINE}
addUserKnob {6 execMe l " " t "exec knobs to exec" +STARTLINE}
addUserKnob {1 knobsToExec l "knobs to exec" t "comma-separated list of knobs (buttons) to execute()" -STARTLINE}
addUserKnob {6 execThis l " " t "run the code to exec" +STARTLINE}
addUserKnob {43 codeToExec l "code to exec " t "python code to exec()\nnuke.thisNode() is available to the code" -STARTLINE}
addUserKnob {6 dontBake l "  dont bake      " t "do not bake this node" +STARTLINE}
addUserKnob {3 bakeOrder l "bake order" t "Nodes are baked from the lowest order to the highest. Default value is 0" -STARTLINE}
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1076
lifetime_end 1076
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto73
selected true
xpos 80452
ypos 17952
}
Dot {
name Dot937
selected true
xpos 80486
ypos 18172
}
set Na3539e20 [stack 0]
push $cut_paste_input
Roto {
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x448f0000 x4420c000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1144 643}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1052
lifetime_end 1052
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto80
selected true
xpos 80503
ypos 16315
}
Blur {
size 12.2
name Blur126
selected true
xpos 80503
ypos 16353
}
Dot {
name Dot938
selected true
xpos 80537
ypos 16455
}
Read {
inputs 0
file /jobs/ABR/fr0390/ELEMENT/E_fr0390_comp_denoise_fg01_s01_v001/2112x998/E_fr0390_comp_denoise_fg01_s01_v001.####.exr
localizationPolicy off
format "2112 998 0 0 2112 998 1 Alexa 65 OG Working"
proxy_format "640 480 0 0 640 480 1 PC_Video"
first 1001
last 1049
origfirst 1001
origlast 1049
origset true
smartGrade true
name Read97
selected true
xpos 79885
ypos 15586
icon popcorn_raw.png
postage_stamp_frame 1025
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_leaf': True, 'ivy_job': u'ABR', 'ivy_usemanualuri': False, 'leafname': u'main_proxy0', 'ivy_vnum': 1, 'ivy_twignametags': \[\{'text': '', 'required': False, 'name': 'label'\}, \{'text': '', 'required': False, 'name': 'layer'\}, \{'text': 'fg01_s01', 'required': False, 'name': 'scan_id'\}, \{'text': 'denoise', 'required': False, 'name': 'subtask'\}, \{'text': 'comp', 'required': False, 'name': 'task'\}], 'ivy_shot': '\[getenv SHOT]', 'ivy_regex': False, 'custom_settings': \{\}, 'ivy_type': u'elmr', 'ivy_versionquery': 'pending', 'spider_uri': 'spider://query@Stalk.latest?Stem.job==ABR&Stem.stemname==fr0390&TwigType.code.re(elmr)&Twig.transfix_map.re(^scan_id:fg01_s01;subtask:denoise;task:comp\$)&Stalk.reviewstatus==Pending&Stalk.state==complete'\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
_ivyFile /jobs/ABR/fr0390/ELEMENT/E_fr0390_comp_denoise_fg01_s01_v001/2112x998/E_fr0390_comp_denoise_fg01_s01_v001.####.exr
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
_expressions {{curve}}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
twig_dnuuid 90da51e6-7d70-4ff8-89c5-10ce12686407
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
stalk_dnuuid 312ba136-160e-4f80-ae6a-90da3214de81
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
twigtype_dnuuid e9f824fa-c932-4c3e-acbd-c612fb5ea846
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
leaf_dnuuid ebdfa9d2-356e-4ddc-a1fb-4971ccaf40d4
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
twigtype elmr
addUserKnob {1 leaf_label l Leaf}
leaf_label main_proxy0
addUserKnob {1 ivy_version l Version}
ivy_version 1
addUserKnob {43 ivy_notes l Notes}
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
addUserKnob {20 popcorn l Popcorn}
addUserKnob {26 bakeIvyTabString l "" +STARTLINE T "bake ivy tab            "}
addUserKnob {4 bakeIvyTab l "" t "Updates the node based on the ivy tab either before or after executing all other calls." -STARTLINE M {off before after}}
bakeIvyTab before
addUserKnob {6 bakeMe l " " t "bake knobs to bake" +STARTLINE}
bakeMe true
addUserKnob {1 knobsToBake l "knobs to bake" t "comma-separated list of knobs to bake, or values to assign. eg: \"value=10, file=\[pcrn input 1]\"" -STARTLINE}
addUserKnob {6 execMe l " " t "exec knobs to exec" +STARTLINE}
addUserKnob {1 knobsToExec l "knobs to exec" t "comma-separated list of knobs (buttons) to execute()" -STARTLINE}
addUserKnob {6 execThis l " " t "run the code to exec" +STARTLINE}
addUserKnob {43 codeToExec l "code to exec " t "python code to exec()\nnuke.thisNode() is available to the code" -STARTLINE}
addUserKnob {6 dontBake l "  dont bake      " t "do not bake this node" +STARTLINE}
addUserKnob {3 bakeOrder l "bake order" t "Nodes are baked from the lowest order to the highest. Default value is 0" -STARTLINE}
}
Dot {
name Dot939
label "\n\n\n<left>\nDenoised Scan"
note_font_size 15
selected true
xpos 79919
ypos 15704
}
push $N1133c260
Switch {
inputs 2
which 1
name Switch14
selected true
xpos 80029
ypos 15700
}
Dot {
name Dot940
selected true
xpos 80063
ypos 15743
}
set Na3b59bb0 [stack 0]
push $N1133c260
Dot {
name Dot941
selected true
xpos 80181
ypos 15472
}
Merge2 {
inputs 2
operation from
name Merge44
selected true
xpos 80147
ypos 15739
}
Dot {
name Dot942
selected true
xpos 80181
ypos 15775
}
push $Na3b59bb0
ShuffleCopy {
inputs 2
alpha alpha2
black red
white green
red2 blue
out2 grain
name ShuffleCopy3
selected true
xpos 80029
ypos 15765
}
Dot {
name Dot943
selected true
xpos 80063
ypos 15814
}
set N22f87e30 [stack 0]
Dot {
name Dot944
selected true
xpos 80639
ypos 15814
}
Shuffle {
red green
blue green
name Shuffle26
selected true
xpos 80605
ypos 16292
}
Grade {
blackpoint {0.008991838433 0.008991838433 0.008991838433 0}
whitepoint {0.4963437915 0.4963437915 0.4963437915 0}
black 0.016
white 2.24
gamma 1.06
white_clamp true
name Grade53
selected true
xpos 80605
ypos 16330
}
Shuffle {
alpha white
name Shuffle33
selected true
xpos 80605
ypos 16362
}
Merge2 {
inputs 2
operation mask
bbox A
name Merge45
selected true
xpos 80605
ypos 16451
}
Constant {
inputs 0
channels rgb
color 1
format "2112 998 0 0 2112 998 1 Alexa 65 OG Phase 2"
name Constant1
selected true
xpos 80742
ypos 16356
}
Merge2 {
inputs 2
name Merge46
selected true
xpos 80742
ypos 16451
}
Dot {
name Dot945
selected true
xpos 80776
ypos 16531
}
CheckerBoard2 {
inputs 0
name CheckerBoard1
selected true
xpos 81048
ypos 14752
}
Dot {
name Dot946
label "<--- Background"
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold"
note_font_size 15
selected true
xpos 81082
ypos 14970
}
Dot {
name Dot947
selected true
xpos 81082
ypos 15060
}
set N90337e00 [stack 0]
Merge2 {
inputs 2
operation multiply
bbox B
output rgb
mix 0.5
name Multiply4
selected true
xpos 81048
ypos 16527
}
Dot {
name Dot948
selected true
xpos 81085
ypos 16791
}
set Nc189270 [stack 0]
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1066
lifetime_end 1066
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto85
selected true
xpos 79815
ypos 16354
}
Dot {
name Dot949
selected true
xpos 79849
ypos 16791
}
push $N22f87e30
Group {
inputs 3
name IBK_Master3
tile_color 0xbc00ff
selected true
xpos 80029
ypos 16781
addUserKnob {20 User l "IBK Settings"}
addUserKnob {22 stack l "IBK stack build" T "# Second option COPY/PASTE\nimport nuke\nimport math\nfrom pprint import pprint\n\ndef deselectall():\n    for i in nuke.selectedNodes():\n        i\['selected'].setValue(False)\n\ndef selectlabel():\n    for i in nuke.allNodes():\n        label = i\['label'].value()\n        if label == 'stacker':\n            i.setSelected(True)\n\n# deselect all\nfor i in nuke.selectedNodes():\n    i\['selected'].setValue(False)\n\n# Select and delete labeled IBKs\nfor i in nuke.allNodes():\n    label = i\['label'].value()\n    if label == 'stacker':\n        i.setSelected(True)\n\ns = nuke.selectedNodes()\nb = nuke.allNodes()\n\nfor n in b:\n    if n in s:\n        nuke.delete(n)\n\n# Create Stack\nselNode = nuke.toNode('Parameters')\nxName = selNode\['name'].value()\nxFactor = selNode\['fillFactor'].value()\nxSize = selNode\['stackSize'].value()\n\nprint 'FILL FACTOR' , xFactor\n\nxSizeInt = int(xSize) - 1\n\niColor = nuke.toNode('IBKMaster')\niColorName = iColor\['name'].value()\niColorScreen = iColor\['screen_type'].value()\nscreenColor = 'C-'+iColorScreen\nprint screenColor\n\n# set screen type in IBKGizmo\nibkGizmo = nuke.toNode('IBKGizmoV3_1')\nibkGizmo.knob('st').setValue(screenColor)\nselNode = nuke.toNode('IBKColour1')\nselNode.setSelected(True)\nselNode.knob('screen_type').setExpression('\{\}.screen_type'.format(iColorName))\npatch = selNode\['multi'].value()\nprint xSizeInt\n\nfor i in range(xSizeInt):\n    print 'counter value =====================>', i\n    nuke.nodeCopy(\"%clipboard%\")\n    pNode = nuke.nodePaste(\"%clipboard%\")\n    nuke.selectedNode().knob('label').setValue('stacker')\n    pNodeName = nuke.selectedNode().knob('name').getValue()\n    print 'Selected node name --------------------->', pNodeName\n    if i == 0:\n        pNodePatch = nuke.selectedNode().knob('multi').value()\n        nuke.selectedNode().knob('multi').setExpression('IBKColour1.multi * 2')\n        print 'pNodePatch value ==================', pNodePatch\n    else:\n        exp = str((pNodePatch * xFactor)*i)\n    nuke.selectedNode().knob('multi').setExpression('Parameters.fillFactor * ' + str(i+1*2) + '*IBKColour1.multi')\n    pNodePatch = pNode\['multi'].value()\n\n\ndeselectall()\n\nselectlabel()\n\nnodes = nuke.selectedNodes()\ncounter = 0\n\nfor i in nodes:\n    counter = counter + 1\n    print i\['name'].value(), 'index ->', counter\n    i\['multi'].setExpression('IBKColour'+str(counter)+'.multi * 2 * Parameters.fillFactor')\n\n\n" +STARTLINE}
addUserKnob {41 stackSize l "Stack Size" T Parameters.stackSize}
addUserKnob {41 fillFactor l "Fill Factor" T Parameters.fillFactor}
addUserKnob {41 output l View-> T Switch1.output}
addUserKnob {26 ""}
addUserKnob {41 screen_type l "screen type" T IBKMaster.screen_type}
addUserKnob {41 Size l size T IBKMaster.Size}
addUserKnob {41 off l darks T IBKMaster.off}
addUserKnob {41 off_panelDropped l "panel dropped state" T IBKMaster.off_panelDropped}
addUserKnob {41 mult l lights T IBKMaster.mult}
addUserKnob {41 mult_panelDropped l "panel dropped state" T IBKMaster.mult_panelDropped}
addUserKnob {26 ""}
addUserKnob {41 erode T IBKMaster.erode}
addUserKnob {26 ""}
addUserKnob {41 multi l "patch black" T IBKColour1.multi}
addUserKnob {26 ""}
addUserKnob {41 st l "screen type" T IBKGizmoV3_1.st}
addUserKnob {41 colour l "colour " T IBKGizmoV3_1.colour}
addUserKnob {41 colour_panelDropped l "panel dropped state" T IBKGizmoV3_1.colour_panelDropped}
addUserKnob {26 ""}
addUserKnob {41 red_weight l "red weight" T IBKGizmoV3_1.red_weight}
addUserKnob {41 blue_green_weight l "blue/green weight" T IBKGizmoV3_1.blue_green_weight}
addUserKnob {26 ""}
addUserKnob {41 lm_enable l "luminance match" T IBKGizmoV3_1.lm_enable}
addUserKnob {41 level l "screen range" T IBKGizmoV3_1.level}
addUserKnob {41 luma l "luminance level" T IBKGizmoV3_1.luma}
addUserKnob {41 ll_enable l enable T IBKGizmoV3_1.ll_enable}
addUserKnob {26 ""}
addUserKnob {41 autolevels T IBKGizmoV3_1.autolevels}
addUserKnob {41 yellow T IBKGizmoV3_1.yellow}
addUserKnob {41 cyan T IBKGizmoV3_1.cyan}
addUserKnob {41 magenta T IBKGizmoV3_1.magenta}
addUserKnob {26 ""}
addUserKnob {41 ss l "screen subtraction" T IBKGizmoV3_1.ss}
addUserKnob {41 ublu l "use bkg luminance" -STARTLINE T IBKGizmoV3_1.ublu}
addUserKnob {41 ubcr l "use bkg chroma" -STARTLINE T IBKGizmoV3_1.ubcr}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x4b4b4b01
label "<center><img src=\"Merge.png\"> Dont Delete"
note_font_size 30
xpos 1301
ypos -112
bdwidth 125
bdheight 230
}
Input {
inputs 0
name Roto
xpos 1460
ypos -114
number 1
}
Clamp {
maximum 0
MinClampTo_enable true
MaxClampTo_enable true
name Clamp1
xpos 1460
ypos -33
}
Dot {
name Dot1
xpos 1494
ypos 69
}
Input {
inputs 0
name Scan
xpos 1610
ypos -114
}
Dot {
name Dot2
xpos 1643
ypos -36
}
set Nbe88570 [stack 0]
IBKColourV3 {
name IBKMaster
xpos 1609
ypos 39
screen_type green
Size 0.1
off {0.001083333394 -0.002666666871 0.00158333336}
erode 14
}
Merge {
inputs 2
operation stencil
bbox B
name Merge1
xpos 1610
ypos 65
}
set N99fae30 [stack 0]
IBKColourV3 {
name IBKColour1
xpos 1610
ypos 100
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi 4.5
}
IBKColourV3 {
name IBKColour2
label stacker
xpos 1610
ypos 126
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour1.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour3
label stacker
xpos 1610
ypos 152
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour2.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour4
label stacker
xpos 1610
ypos 178
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour3.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour5
label stacker
xpos 1610
ypos 204
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour4.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour6
label stacker
xpos 1610
ypos 230
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour5.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour7
label stacker
xpos 1610
ypos 256
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour6.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour8
label stacker
xpos 1610
ypos 282
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour7.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour9
label stacker
xpos 1610
ypos 308
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour8.multi * 2 * Parameters.fillFactor"}}
}
IBKColourV3 {
name IBKColour10
label stacker
xpos 1610
ypos 334
screen_type {{IBKMaster.screen_type}}
Size {{IBKMaster.Size}}
off {{IBKMaster.off} {IBKMaster.off} {IBKMaster.off}}
mult {{IBKMaster.mult} {IBKMaster.mult} {IBKMaster.mult}}
multi {{"IBKColour9.multi * 2 * Parameters.fillFactor"}}
}
set N22ee4b20 [stack 0]
Dot {
name Dot5
xpos 1644
ypos 581
}
set N273915b0 [stack 0]
Dot {
name Dot7
xpos 1644
ypos 679
}
push $N99fae30
Dot {
name Dot6
xpos 1644
ypos 679
}
Input {
inputs 0
name bg
xpos 1845
ypos -114
number 2
}
Dot {
name Dot4
xpos 1879
ypos 581
}
push $N273915b0
push $Nbe88570
Dot {
name Dot3
xpos 1812
ypos -36
}
IBKGizmoV3 {
inputs 3
name IBKGizmoV3_1
selected false
xpos 1778
ypos 577
st C-green
red_weight 0.52
blue_green_weight 0.525
lm_enable true
luma 0.565
ll_enable true
}
Switch {
inputs 3
which {{output}}
name Switch1
xpos 1778
ypos 669
addUserKnob {20 User}
addUserKnob {4 output l View-> M {Result IBKColour CleanPlate}}
output CleanPlate
}
Output {
name Output1
xpos 1778
ypos 730
}
NoOp {
inputs 0
name Parameters
xpos 1330
ypos 32
hide_input true
addUserKnob {20 User}
addUserKnob {3 stackSize l "Stack Size"}
stackSize 10
addUserKnob {3 fillFactor l "Fill Factor"}
fillFactor 1
}
push $N22ee4b20
push 0
push 0
push 0
push 0
push 0
Viewer {
inputs 6
frame_range 1001-1335
frame_increment 8
input_number 5
overscan 300
center_fstop 0
viewerProcess Film
far 100000
name Viewer1
xpos 1720
ypos 132
}
end_group
Group {
name Restore_Grain3
selected true
xpos 80028
ypos 17130
}
Input {
inputs 0
name Input1
xpos 600
ypos -737
}
Dot {
name Dot2
xpos 634
ypos -667
}
set N2788f550 [stack 0]
Shuffle {
in grain
in2 rgba
alpha alpha2
name Shuffle12
xpos 444
ypos -677
}
Group {
name EH_DynamicDespill19
help "A simple expression based spill corrector that is enabled to use\nbackground luminance values if plugged in. Similar to the spill suppression\nin IBK Gizmo.\n\nAny questions contact cameron.a.carson@gmail.com"
knobChanged "nuke.thisNode()\['rgbWeight'].setVisible(nuke.thisNode()\['\nspillOp'].value()=='Average')\nnuke.thisNode()\['blgrtext'].\nsetVisible(nuke.thisNode()\['spillOp'].value()=='Average')"
tile_color 0x6aff55ff
xpos 444
ypos -547
addUserKnob {20 Main}
addUserKnob {4 spillType l "Spill Type" t "Select spill type to remove" M {Green Blue ""}}
addUserKnob {4 spillOp l "Spill Operation" t "Select the type of spill\noperation to perform" M {Average Max "Red Limit" "Blue/Green Limit" ""}}
addUserKnob {7 rgbWeight l "Red Weight" t "Adjust weight to favor one\ncolor or other." R -1 1}
addUserKnob {26 blgrtext l "Blue/Green Weight" -STARTLINE T " "}
addUserKnob {26 unnamed_1 l "" +STARTLINE T " "}
addUserKnob {7 opMult l "Operation Multiplier" t "This limiting channels\nare multiplied by this value." R 0 2}
opMult 1
addUserKnob {26 unnamed l "" +STARTLINE T " "}
addUserKnob {6 lumaRest l "Luma Match" t "Check to Restore Lumanance to BG\nor Original" +STARTLINE}
lumaRest true
addUserKnob {7 bgBlur l "BG PreBlur" t "Adjust to level of BG Blur\nDesired." R 0 50}
bgBlur 20
addUserKnob {26 unnamed_2 l "" +STARTLINE T " "}
addUserKnob {20 spillCC l "Luma Fill CC" n 1}
addUserKnob {18 blackCC l Blacks t "Lifts Blacks" R -1 1}
blackCC {0 0 0}
addUserKnob {6 blackCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 whiteCC l Whites t "Gains Whites" R 0 4}
whiteCC {0.6435800195 0.7375800014 0.8435800076}
addUserKnob {6 whiteCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gammaCC l Gamma t Gamma R 0 4}
gammaCC 1
addUserKnob {6 gammaCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {20 endGroup n -1}
addUserKnob {26 unnnamed l "" +STARTLINE T " "}
}
Input {
inputs 0
name FG
xpos 0
ypos -80
}
Dot {
name Dot1
xpos 34
ypos -40
}
set Nd05d5c10 [stack 0]
Dot {
name Dot3
xpos 140
ypos -40
}
Dot {
name Dot2
xpos 140
ypos 117
}
set N25cdfa20 [stack 0]
Dot {
name Dot4
xpos 140
ypos 157
}
set Ne719fe0 [stack 0]
push $N25cdfa20
push $Nd05d5c10
Expression {
temp_name0 rw
temp_expr0 r*(1-rgbWeight)
temp_name1 gw
temp_expr1 g*(1+rgbWeight)
temp_name2 bw
temp_expr2 b*(1+rgbWeight)
expr0 r>(gw+bw)/2*opMult?(gw+bw)/2*opMult:r
expr1 g>(bw+rw)/2*opMult?(bw+rw)/2*opMult:g
expr2 b>(rw+gw)/2*opMult?(rw+gw)/2*opMult:b
name Average_Op
xpos 0
ypos -6
disable {{"spillOp != 0" x1 1}}
}
Expression {
temp_name0 lm
temp_expr0 "spillOp == 2 ? r : spillType == 0 ? b : g"
expr0 r>lm*opMult?lm*opMult:r
expr1 g>lm*opMult?lm*opMult:g
expr2 b>lm*opMult?lm*opMult:b
name Limit_Op
xpos 0
ypos 34
disable {{"spillOp < 2 "}}
}
Expression {
temp_name0 gb
temp_expr0 (g>b?g:b)
temp_name1 rb
temp_expr1 (r>b?r:b)
temp_name2 rg
temp_expr2 (r>g?r:g)
expr0 r>gb*opMult?gb*opMult:r
expr1 g>rb*opMult?rb*opMult:g
expr2 b>rg*opMult?rg*opMult:b
name Max_Op
xpos 0
ypos 74
disable {{"spillOp != 1"}}
}
ShuffleCopy {
inputs 2
red red
blue blue
alpha alpha2
name Copy_RedBlue
xpos 0
ypos 114
disable {{"spillType != 0"}}
}
ShuffleCopy {
inputs 2
red red
green green
alpha alpha2
name Copy_RedGreen
xpos 0
ypos 154
disable {{"spillType != 1"}}
}
Dot {
name Dot6
xpos 34
ypos 194
}
set N90748da0 [stack 0]
push $Ne719fe0
Merge2 {
inputs 2
operation from
name Merge3
xpos 106
ypos 191
}
Clamp {
name Clamp2
xpos 106
ypos 231
}
Saturation {
saturation 0
mode Maximum
name Saturation2
xpos 106
ypos 281
}
Grade {
black {{blackCC} {blackCC} {blackCC} {blackCC}}
white {{whiteCC} {whiteCC} {whiteCC} {whiteCC}}
gamma {{gammaCC x14 1.22}}
name Grade1
xpos 106
ypos 321
}
Dot {
name Dot5
xpos 140
ypos 361
}
set N2871e3b0 [stack 0]
Dot {
name Dot8
xpos 140
ypos 438
}
Input {
inputs 0
name BG
xpos 211
number 1
}
NoOp {
name NoOp1
xpos 211
ypos 95
}
Blur {
size {{bgBlur}}
name Blur1
xpos 211
ypos 185
}
push $N2871e3b0
Merge2 {
inputs 2
operation multiply
name Merge2
xpos 211
ypos 358
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot7
xpos 245
ypos 398
}
push $N90748da0
Merge2 {
inputs 2
operation plus
name Merge1
xpos 0
ypos 395
disable {{"lumaRest != 1" x1 1}}
}
ShuffleCopy {
inputs 2
red red
green green
blue blue
alpha red
out SpillMap
name ShuffleCopy1
xpos 0
ypos 435
}
Output {
name Output1
xpos 0
ypos 507
}
end_group
push $N2788f550
Dot {
name Dot1
xpos 634
ypos -595
}
Merge2 {
inputs 2
operation plus
Achannels rgb
maskChannelInput rgba.alpha
name Plus5
xpos 600
ypos -553
}
Output {
name Output1
xpos 600
ypos -447
}
end_group
Dot {
name Dot950
selected true
xpos 80062
ypos 17408
}
set N1492c110 [stack 0]
Gamma {
name Gamma3
label "Soft key adjust"
selected true
xpos 80028
ypos 17634
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1107
lifetime_end 1107
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto86
selected true
xpos 78786
ypos 16959
}
Dot {
name Dot951
selected true
xpos 78820
ypos 17105
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1107
lifetime_end 1107
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto87
selected true
xpos 79208
ypos 16328
}
Dot {
name Dot952
selected true
xpos 79242
ypos 16485
}
push $N22f87e30
Dot {
name Dot953
selected true
xpos 79133
ypos 15814
}
set N26336180 [stack 0]
Primatte3 {
data { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primEdgedata { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

primBodydata { 5
    0 0 0
    65552
    0 5
    30234 30234 30234 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

bg_color_selected false
init_hybrid_matte true
crop {0 0 2112 998}
"Adjust Lighting" 0
"Hybrid Matte" 0
"Fine Tuning" 0
name Primatte1
selected true
xpos 79099
ypos 16076
}
push $N26336180
Dot {
name Dot954
selected true
xpos 78945
ypos 15814
}
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 0 0}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 1
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 1
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight3
selected true
xpos 78911
ypos 16085
}
Dot {
name Dot955
selected true
xpos 78945
ypos 16485
}
Keymix {
inputs 3
name Keymix24
selected true
xpos 79099
ypos 16475
}
Merge2 {
inputs 2
name Merge47
selected true
xpos 79099
ypos 17101
}
KeyChewV4 {
name KeyChewV4_19
selected true
xpos 79099
ypos 17226
bbox {{"\[python nuke.thisNode().input(0).format().x()]"} {"\[python nuke.thisNode().input(0).format().y()]"} {"\[python nuke.thisNode().input(0).format().r()]"} {"\[python nuke.thisNode().input(0).format().t()]"}}
}
Dot {
name Dot956
selected true
xpos 79133
ypos 17734
}
ChannelMerge {
inputs 2
mix 0.535
name ChannelMerge93
selected true
xpos 80028
ypos 17718
}
Merge2 {
inputs 2
operation stencil
bbox A
name Merge50
selected true
xpos 80028
ypos 18168
}
Roto {
inputs 0
output alpha
cliptype none
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44840000 x43f98000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1056 499}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1076
lifetime_end 1076
view {}
motionblur_on true
motionblur_shutter_offset_type centred
source_black_outside true
name Roto88
selected true
xpos 78220
ypos 17534
}
Dot {
name Dot957
selected true
xpos 78254
ypos 17666
}
push $N284a0460
Dot {
name Dot958
selected true
xpos 78118
ypos 15386
}
set Na85d8010 [stack 0]
Dot {
name Dot959
selected true
xpos 78120
ypos 16481
}
push $N90337e00
Dot {
name Dot960
selected true
xpos 78230
ypos 15060
}
set N907103a0 [stack 0]
Dot {
name Dot961
selected true
xpos 78230
ypos 16537
}
SoftKeyer {
inputs 2
name SoftKeyer2
selected true
xpos 78086
ypos 16533
add {0.2291824371 0.6539827585 0.1091662496 0}
lMatch 0.5
}
Dot {
inputs 0
name Dot962
selected true
xpos 77712
ypos 17458
}
push $Na85d8010
Dot {
name Dot963
selected true
xpos 77548
ypos 15386
}
set N148cf670 [stack 0]
Dot {
name Dot964
selected true
xpos 77387
ypos 15386
}
Dot {
name Dot965
selected true
xpos 77387
ypos 17458
}
push $N907103a0
Dot {
name Dot966
selected true
xpos 77714
ypos 15060
}
Dot {
name Dot967
selected true
xpos 77714
ypos 16534
}
push $N148cf670
Group {
inputs 2
name EH_DynamicDespill2
help "A simple expression based spill corrector that is enabled to use\nbackground luminance values if plugged in. Similar to the spill suppression\nin IBK Gizmo.\n\nAny questions contact cameron.a.carson@gmail.com"
knobChanged "nuke.thisNode()\['rgbWeight'].setVisible(nuke.thisNode()\['\nspillOp'].value()=='Average')\nnuke.thisNode()\['blgrtext'].\nsetVisible(nuke.thisNode()\['spillOp'].value()=='Average')"
tile_color 0x6aff55ff
selected true
xpos 77514
ypos 16530
addUserKnob {20 Main}
addUserKnob {4 use l Use M {Background "Luma Fill CC" ""}}
use "Luma Fill CC"
addUserKnob {4 spillType l "Spill Type" t "Select spill type to remove" M {Green Blue ""}}
addUserKnob {4 spillOp l "Spill Operation" t "Select the type of spill\noperation to perform" M {Average Max "Red Limit" "Blue/Green Limit" ""}}
addUserKnob {7 rgbWeight l "Red Weight" t "Adjust weight to favor one\ncolor or other." R -1 1}
rgbWeight -0.1
addUserKnob {26 blgrtext l "Blue/Green Weight" -STARTLINE T " "}
addUserKnob {26 unnamed_1 l "" +STARTLINE T " "}
addUserKnob {7 opMult l "Operation Multiplier" t "This limiting channels\nare multiplied by this value." R 0 2}
opMult 1
addUserKnob {26 unnamed l "" +STARTLINE T " "}
addUserKnob {6 lumaRest l "Luma Match" t "Check to Restore Lumanance to BG\nor Original" +STARTLINE}
lumaRest true
addUserKnob {7 bgBlur l "BG PreBlur" t "Adjust to level of BG Blur\nDesired." R 0 50}
bgBlur 20
addUserKnob {26 unnamed_2 l "" +STARTLINE T " "}
addUserKnob {20 spillCC l "Luma Fill CC" n 1}
addUserKnob {18 blackCC l Blacks t "Lifts Blacks" R -1 1}
blackCC {0 0 0}
addUserKnob {6 blackCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 whiteCC l Whites t "Gains Whites" R 0 4}
whiteCC {0.5807133317 0.7307133675 0.9607133269}
addUserKnob {6 whiteCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gammaCC l Gamma t Gamma R 0 4}
gammaCC 1
addUserKnob {6 gammaCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {20 endGroup n -1}
addUserKnob {26 unnnamed l "" +STARTLINE T " "}
}
Input {
inputs 0
name BG
xpos 211
ypos -205
number 1
}
Blur {
size {{bgBlur}}
name Blur1
xpos 211
ypos 185
}
Input {
inputs 0
name FG
xpos 0
ypos -200
}
Dot {
name Dot1
xpos 34
ypos -160
}
set N14e8aec0 [stack 0]
Dot {
name Dot3
xpos 140
ypos -160
}
Dot {
name Dot2
xpos 140
ypos 4
}
set N14e94310 [stack 0]
Dot {
name Dot4
xpos 140
ypos 85
}
set N137c4440 [stack 0]
push $N14e94310
push $N14e8aec0
Expression {
temp_name0 rw
temp_expr0 r*(1-rgbWeight)
temp_name1 gw
temp_expr1 g*(1+rgbWeight)
temp_name2 bw
temp_expr2 b*(1+rgbWeight)
expr0 r>(gw+bw)/2*opMult?(gw+bw)/2*opMult:r
expr1 g>(bw+rw)/2*opMult?(bw+rw)/2*opMult:g
expr2 b>(rw+gw)/2*opMult?(rw+gw)/2*opMult:b
name Average_Op
xpos 0
ypos -126
disable {{"spillOp != 0" x1 1}}
}
Expression {
temp_name0 lm
temp_expr0 "spillOp == 2 ? r : spillType == 0 ? b : g"
expr0 r>lm*opMult?lm*opMult:r
expr1 g>lm*opMult?lm*opMult:g
expr2 b>lm*opMult?lm*opMult:b
name Limit_Op
xpos 0
ypos -86
disable {{"spillOp < 2 "}}
}
Expression {
temp_name0 gb
temp_expr0 (g>b?g:b)
temp_name1 rb
temp_expr1 (r>b?r:b)
temp_name2 rg
temp_expr2 (r>g?r:g)
expr0 r>gb*opMult?gb*opMult:r
expr1 g>rb*opMult?rb*opMult:g
expr2 b>rg*opMult?rg*opMult:b
name Max_Op
xpos 0
ypos -46
disable {{"spillOp != 1"}}
}
ShuffleCopy {
inputs 2
red red
blue blue
alpha alpha2
name Copy_RedBlue
xpos 0
ypos -6
disable {{"spillType != 0"}}
}
ShuffleCopy {
inputs 2
red red
green green
alpha alpha2
name Copy_RedGreen
xpos 0
ypos 75
disable {{"spillType != 1"}}
}
Dot {
name Dot6
xpos 34
ypos 194
}
set N157d7bb0 [stack 0]
push $N137c4440
Merge2 {
inputs 2
operation from
name Merge3
xpos 106
ypos 191
}
Clamp {
name Clamp2
xpos 106
ypos 231
}
Saturation {
saturation 0
mode Maximum
name Saturation2
xpos 106
ypos 281
}
Grade {
black {{blackCC} {blackCC} {blackCC} {blackCC}}
white {{whiteCC} {whiteCC} {whiteCC} {whiteCC}}
gamma {{gammaCC x14 1.22}}
name Grade1
xpos 106
ypos 321
}
Dot {
name Dot5
xpos 140
ypos 361
}
set N160dbdb0 [stack 0]
Merge2 {
inputs 2
operation multiply
name Merge2
label "!\[exists parent.input1]"
xpos 211
ypos 351
disable {{parent.use}}
}
Dot {
name Dot7
xpos 245
ypos 484
}
push $N160dbdb0
Dot {
name Dot8
xpos 140
ypos 414
}
push $N157d7bb0
ShuffleCopy {
inputs 2
red red
green green
blue blue
alpha red
out SpillMap
name ShuffleCopy1
xpos 0
ypos 404
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 0
ypos 480
disable {{"lumaRest != 1" x1 1}}
}
set N13edbc30 [stack 0]
Output {
name Output1
xpos 0
ypos 593
}
push $N13edbc30
Viewer {
frame_range 1001-1142
frame_increment 8
overscan 300
center_fstop 0
viewerProcess Film
input_process false
far 100000
name Viewer1
xpos 245
ypos 553
}
end_group
Group {
inputs 3
name Restore_Luma1
selected true
xpos 77514
ypos 17454
}
Input {
inputs 0
name Mask
xpos 125
ypos -42
number 2
}
Dot {
name Dot1
xpos 159
ypos 173
}
Input {
inputs 0
name Scan
xpos -128
ypos -43
number 1
}
Input {
inputs 0
name Despill
xpos 0
ypos -43
}
Dot {
name Dot49
xpos 34
ypos 124
}
set N26eea420 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge2
xpos -128
ypos 120
}
Saturation {
saturation 0
name Saturation1
xpos -128
ypos 169
}
push $N26eea420
Merge2 {
inputs 2+1
operation plus
name Merge7
xpos 0
ypos 169
}
Output {
name Output1
xpos 0
ypos 300
}
end_group
Dot {
name Dot968
selected true
xpos 77548
ypos 17666
}
Keymix {
inputs 3
name Keymix61
selected true
xpos 78086
ypos 17656
}
Dot {
name Dot969
selected true
xpos 78120
ypos 18281
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy14
selected true
xpos 80028
ypos 18271
}
Premult {
name Premult17
selected true
xpos 80028
ypos 18365
}
Gamma {
channels alpha
name Gamma7
selected true
xpos 80028
ypos 18421
}
Group {
name IvyGroup6
onCreate "__import__('dnnuke.core.ivy.tab.callbacks', fromlist=\['onCreate']).onCreate()"
knobChanged "__import__('dnnuke.core.ivy.tab.callbacks', fromlist=\['knobChanged']).knobChanged()"
tile_color 0x989898ff
label "<b>GrainMatte_WF_v\[format %03d \[value ivy_version]]</b>(comp)"
selected true
xpos 80028
ypos 18480
addUserKnob {20 GrainMatte_WF}
addUserKnob {6 InvertMatte +STARTLINE}
InvertMatte true
addUserKnob {1 default_values +INVISIBLE}
default_values "\[('GrainMatte_WF', \{'knob': 'Tab_Knob', 'tcl': '\{20 GrainMatte_WF\}', 'link': '', 'tooltip': '', 'default': None, 'flags': \{\}, 'toScript': '1', 'range': None, 'value': True, 'label': 'GrainMatte_WF'\}), ('InvertMatte', \{'knob': 'Boolean_Knob', 'tcl': '\{6 InvertMatte +STARTLINE\}', 'link': '', 'tooltip': '', 'default': None, 'flags': \{4096: True\}, 'toScript': 'false', 'range': (0.0, 1.0), 'value': False, 'label': 'InvertMatte'\})]"
addUserKnob {20 ivygrouptab l IvyGroup}
addUserKnob {2 file l "Script Path"}
file /jobs/ABR/ne_seq/ivy/nkt/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001.nk
addUserKnob {6 internal_updates l "Update internal spider nodes" t "Whether or not to recursively update all internal Ivy nodes as well" +STARTLINE}
internal_updates true
addUserKnob {6 save_template l "Save Template on Update" t "Saves the current template at update time internally allowing switching between the old and new one" -STARTLINE}
save_template true
addUserKnob {6 execute_spawners l "Execute internal spawners" t "Whether or not to recursively execute all internal spawner nodes" +STARTLINE}
execute_spawners true
addUserKnob {6 previous_template l "Output Previous Template" t "Toggles displaying of the previously saved template" +HIDDEN +STARTLINE}
addUserKnob {22 clearPreviousTemplate l "Clear Previous Template" t "Clears the previous template that was saved at update" +HIDDEN T "__import__('dnnuke.core.ivy.template.group', fromlist=\['clearIvyGroups']).clearIvyGroups(nuke.thisNode())" +STARTLINE}
addUserKnob {6 ivygroup -STARTLINE +INVISIBLE}
ivygroup true
addUserKnob {1 _class l "" +STARTLINE +INVISIBLE}
_class IvyGroup
addUserKnob {26 divider10 l "" +STARTLINE}
addUserKnob {22 ivy_publish l Publish... T "__import__('dnnuke.core.ivy.template', fromlist=\['publish']).publish(nodes=\[nuke.thisNode()])" +STARTLINE}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 comment l "" +STARTLINE T "Publish Comment: GrainMatte\nVersion Comment (v001): GrainMatte"}
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_job': 'ABR', 'ivy_usemanualuri': False, 'leafname': '', 'ivy_vnum': 0, 'ivy_twignametags': \[\{'text': 'comp', 'required': False, 'name': 'task'\}, \{'text': 'group', 'required': False, 'name': 'type'\}, \{'text': 'GrainMatte_WF', 'required': False, 'name': 'label'\}], 'ivy_shot': 'ne_seq', 'ivy_regex': False, 'ivy_type': 'nkt', 'ivy_versionquery': 'approved', 'spider_uri': 'spider://query@Stalk.latest?Stem.job==ABR&Stem.stemname==ne_seq&TwigType.code.re(nkt)&Twig.transfix_map.re(^label:GrainMatte_WF;task:comp;type:group\$)&Stalk.reviewstatus==Approved&Stalk.state==complete'\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
_ivyFile /jobs/ABR/ne_seq/ivy/nkt/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001.nk
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
twig_dnuuid 8e039bf0-4195-47df-a824-6aad985b38ef
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
stalk_dnuuid 83c9fe88-ef90-4eca-8600-2b8d56ca0ec3
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
twigtype_dnuuid 9a87d850-8e1b-4781-95c5-e50580d06fe5
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
leaf_dnuuid 0e41b973-98dc-4f79-9354-0af3b87c8953
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
twigtype nkt
addUserKnob {1 leaf_label l Leaf}
leaf_label main
addUserKnob {1 ivy_version l Version}
ivy_version 1
addUserKnob {43 ivy_notes l Notes}
ivy_notes GrainMatte
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
}
Input {
inputs 0
name Input1
selected true
xpos -600
ypos -587
}
add_layer {grainmatte grainmatte.alpha}
Shuffle {
red alpha
out grainmatte
name GrainMatte_Workflow
tile_color 0x878787ff
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
selected true
xpos -600
ypos -547
}
Invert {
channels grainmatte
name Invert1
selected true
xpos -600
ypos -491
disable {{parent.InvertMatte==0?1:0}}
}
Output {
name Output1
tile_color 0x989898ff
selected true
xpos -600
ypos -407
}
end_group
Dot {
name Dot970
selected true
xpos 80060
ypos 18657
}
push $Na3539e20
push $N1492c110
Dot {
name Dot971
selected true
xpos 80836
ypos 17408
}
Merge2 {
inputs 2
operation stencil
bbox A
name Merge51
selected true
xpos 80802
ypos 18168
}
Group {
name IvyGroup2
onCreate "__import__('dnnuke.core.ivy.tab.callbacks', fromlist=\['onCreate']).onCreate()"
knobChanged "__import__('dnnuke.core.ivy.tab.callbacks', fromlist=\['knobChanged']).knobChanged()"
tile_color 0x989898ff
label "<b>GrainMatte_WF_v\[format %03d \[value ivy_version]]</b>(comp)"
selected true
xpos 80802
ypos 18194
addUserKnob {20 GrainMatte_WF}
addUserKnob {6 InvertMatte +STARTLINE}
InvertMatte true
addUserKnob {1 default_values +INVISIBLE}
default_values "\[('GrainMatte_WF', \{'knob': 'Tab_Knob', 'tcl': '\{20 GrainMatte_WF\}', 'link': '', 'tooltip': '', 'default': None, 'flags': \{\}, 'toScript': '1', 'range': None, 'value': True, 'label': 'GrainMatte_WF'\}), ('InvertMatte', \{'knob': 'Boolean_Knob', 'tcl': '\{6 InvertMatte +STARTLINE\}', 'link': '', 'tooltip': '', 'default': None, 'flags': \{4096: True\}, 'toScript': 'false', 'range': (0.0, 1.0), 'value': False, 'label': 'InvertMatte'\})]"
addUserKnob {20 ivygrouptab l IvyGroup}
addUserKnob {2 file l "Script Path"}
file /jobs/ABR/ne_seq/ivy/nkt/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001.nk
addUserKnob {6 internal_updates l "Update internal spider nodes" t "Whether or not to recursively update all internal Ivy nodes as well" +STARTLINE}
internal_updates true
addUserKnob {6 save_template l "Save Template on Update" t "Saves the current template at update time internally allowing switching between the old and new one" -STARTLINE}
save_template true
addUserKnob {6 execute_spawners l "Execute internal spawners" t "Whether or not to recursively execute all internal spawner nodes" +STARTLINE}
execute_spawners true
addUserKnob {6 previous_template l "Output Previous Template" t "Toggles displaying of the previously saved template" +HIDDEN +STARTLINE}
addUserKnob {22 clearPreviousTemplate l "Clear Previous Template" t "Clears the previous template that was saved at update" +HIDDEN T "__import__('dnnuke.core.ivy.template.group', fromlist=\['clearIvyGroups']).clearIvyGroups(nuke.thisNode())" +STARTLINE}
addUserKnob {6 ivygroup -STARTLINE +INVISIBLE}
ivygroup true
addUserKnob {1 _class l "" +STARTLINE +INVISIBLE}
_class IvyGroup
addUserKnob {26 divider10 l "" +STARTLINE}
addUserKnob {22 ivy_publish l Publish... T "__import__('dnnuke.core.ivy.template', fromlist=\['publish']).publish(nodes=\[nuke.thisNode()])" +STARTLINE}
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {26 comment l "" +STARTLINE T "Publish Comment: GrainMatte\nVersion Comment (v001): GrainMatte"}
addUserKnob {20 Ivy}
addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
addUserKnob {26 divider4 l "" +STARTLINE}
addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
_ivyVals "\{'ivy_job': 'ABR', 'ivy_usemanualuri': False, 'leafname': '', 'ivy_vnum': 0, 'ivy_twignametags': \[\{'text': 'comp', 'required': False, 'name': 'task'\}, \{'text': 'group', 'required': False, 'name': 'type'\}, \{'text': 'GrainMatte_WF', 'required': False, 'name': 'label'\}], 'ivy_shot': 'ne_seq', 'ivy_regex': False, 'ivy_type': 'nkt', 'ivy_versionquery': 'approved', 'spider_uri': 'spider://query@Stalk.latest?Stem.job==ABR&Stem.stemname==ne_seq&TwigType.code.re(nkt)&Twig.transfix_map.re(^label:GrainMatte_WF;task:comp;type:group\$)&Stalk.reviewstatus==Approved&Stalk.state==complete'\}"
addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
_ivyFile /jobs/ABR/ne_seq/ivy/nkt/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001/F_NKT_ne_seq_comp_group_GrainMatte_WF_v001.nk
addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
addUserKnob {26 divider0 l "" +STARTLINE}
addUserKnob {20 dbinfo l "DB Info" n 1}
dbinfo 0
addUserKnob {1 twig_dnuuid l "Twig Id"}
twig_dnuuid 8e039bf0-4195-47df-a824-6aad985b38ef
addUserKnob {1 stalk_dnuuid l "Stalk Id"}
stalk_dnuuid 83c9fe88-ef90-4eca-8600-2b8d56ca0ec3
addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
twigtype_dnuuid 9a87d850-8e1b-4781-95c5-e50580d06fe5
addUserKnob {1 leaf_dnuuid l "Leaf Id"}
leaf_dnuuid 0e41b973-98dc-4f79-9354-0af3b87c8953
addUserKnob {26 divider1 l "" +STARTLINE}
addUserKnob {1 twigtype l "Twig Type"}
twigtype nkt
addUserKnob {1 leaf_label l Leaf}
leaf_label main
addUserKnob {1 ivy_version l Version}
ivy_version 1
addUserKnob {43 ivy_notes l Notes}
ivy_notes GrainMatte
addUserKnob {26 divider2 l "" +STARTLINE}
addUserKnob {1 build_label l "Build Label"}
addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
}
Input {
inputs 0
name Input1
selected true
xpos -600
ypos -587
}
Shuffle {
red alpha
out grainmatte
name GrainMatte_Workflow
tile_color 0x878787ff
note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
selected true
xpos -600
ypos -547
}
Invert {
channels grainmatte
name Invert1
selected true
xpos -600
ypos -491
disable {{parent.InvertMatte==0?1:0}}
}
Output {
name Output1
tile_color 0x989898ff
selected true
xpos -600
ypos -407
}
end_group
Dot {
name Dot972
selected true
xpos 80836
ypos 18268
}
push $Nc189270
Merge2 {
inputs 2
bbox B
also_merge grainmatte
name Merge59
label "also merge : \[value also_merge]"
selected true
xpos 81051
ypos 18258
}
Merge2 {
inputs 2
bbox B
also_merge grainmatte
name Merge61
label "also merge : \[value also_merge]"
selected true
xpos 81051
ypos 18647
}
