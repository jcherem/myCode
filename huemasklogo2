set cut_paste_input [stack 0]
version 11.3 v6
ColorWheel {
 inputs 0
 gamma 0.45
 name ColorWheel2
 selected true
 xpos -610
 ypos 3104
}
Grade {
 name Grade8
 selected true
 xpos -610
 ypos 3176
}
set N4cc000b0 [stack 0]
Viewer {
 frame 2117
 frame_range 1001-2116
 frame_increment 8
 gain 0.06
 overscan 300
 center_fstop 0
 viewerProcess Film
 far 100000
 name Viewer2
 selected true
 xpos -723
 ypos 3306
}
push $cut_paste_input
Roto {
 output alpha
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x448b0000 x44418000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {xc303df8a 0}
        {x43823fff x420545a1}
        {x4303df86 0}
        {0 xc2fc985c}
        {x43f9a383 x43830000}
        {0 x42fc985c}
        {x4303df86 0}
        {x43823fff x43f5574c}
        {xc303df8a 0}
        {0 x42fc985c}
        {x41adc798 x43830000}
        {0 xc2fc985c}}}
      {cc
       {f 8192}
       {px x447a4000
        {xc303df8a 0}
        {0 0}
        {x4303df86 0}
        {0 xc2fc985c}
        {0 0}
        {0 x42fc985c}
        {x4303df86 0}
        {0 0}
        {xc303df8a 0}
        {0 x42fc985c}
        {0 0}
        {0 xc2fc985c}}}}
     {tx x447a4000 x43ab4000 x43570000}
     {a osw x41200000 osf 0 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 tt x40e00000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1112 774}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto1
 selected true
 xpos -309
 ypos 3449
}
set N7710aa80 [stack 0]
Invert {
 name Invert2
 selected true
 xpos -86
 ypos 3746
 disable true
}
push $N7710aa80
Blur {
 size 36
 name Blur3
 selected true
 xpos -188
 ypos 3726
}
RotoPaint {
 inputs 0
 output alpha
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x448b0000 x44418000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Brush64 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44808000 x44a88000 1}
       {x447e0000 x44a88000 1}
       {x44700000 x44a80000 1}
       {x446a0000 x44a78000 1}}}
     {tx x45045000 x44764000 x44a82000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush63 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44120000 x448e0000 1}
       {x440f0000 x448d0000 1}}}
     {tx x45045000 x44108000 x448d8000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush62 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44460000 x44948000 1}
       {x44430000 x44940000 1}}}
     {tx x45045000 x44448000 x44944000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush61 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44450000 x44ab8000 1}
       {x44470000 x44ac0000 1}
       {x444d0000 x44ac8000 1}
       {x445b0000 x44ae0000 1}
       {x445d0000 x44ae0000 1}
       {x445c0000 x44ae0000 1}
       {x44520000 x44ac8000 1}
       {x44430000 x44aa0000 1}
       {x44320000 x44a78000 1}
       {x44330000 x44a78000 1}
       {x44340000 x44a78000 1}
       {x443f0000 x44a80000 1}
       {x444c0000 x44aa0000 1}
       {x44590000 x44ac0000 1}
       {x44580000 x44ac0000 1}
       {x44560000 x44ac0000 1}
       {x444c0000 x44ab0000 1}
       {x443f0000 x44a90000 1}
       {x443b0000 x44a88000 1}
       {x44390000 x44a88000 1}
       {x443c0000 x44a88000 1}
       {x44470000 x44a98000 1}
       {x44530000 x44ab0000 1}
       {x44590000 x44ab8000 1}
       {x44510000 x44ab0000 1}
       {x444d0000 x44aa8000 1}
       {x44410000 x44a90000 1}
       {x443c0000 x44a80000 1}
       {x443b0000 x44a80000 1}
       {x44440000 x44a90000 1}
       {x44510000 x44aa8000 1}
       {x44550000 x44ab0000 1}
       {x44540000 x44ab0000 1}
       {x44460000 x44aa0000 1}
       {x443e0000 x44a90000 1}
       {x443c0000 x44a90000 1}}}
     {tx x45045000 x44486aab x44aa4aab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush60 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44d78000 x43ac0000 1}
       {x44d78000 x43a40000 1}
       {x44d70000 x43a40000 1}}}
     {tx x45045000 x44d75555 x43a6aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush59 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44c78000 x43a00000 1}
       {x44c60000 x439c0000 1}
       {x44c58000 x43a00000 1}}}
     {tx x45045000 x44c65555 x439eaaab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush58 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44180000 x44340000 1}
       {x441a0000 x442f0000 1}
       {x441a0000 x442e0000 1}}}
     {tx x45045000 x44195555 x44305555}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush57 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x444d0000 x440a0000 1}
       {x44500000 x44080000 1}
       {x44500000 x44050000 1}}}
     {tx x45045000 x444f0000 x4407aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush56 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44970000 x44190000 1}
       {x44960000 x441a0000 1}}}
     {tx x45045000 x44968000 x44198000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush55 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x448b8000 x44560000 1}}}
     {tx x45045000 x448b8000 x44560000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush54 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44950000 x441e0000 1}}}
     {tx x45045000 x44950000 x441e0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush53 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x448b8000 x44580000 1}}}
     {tx x45045000 x448b8000 x44580000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush52 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44830000 x442b0000 1}
       {x44840000 x442a0000 1}}}
     {tx x45045000 x44838000 x442a8000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush51 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44988000 x446a0000 1}
       {x44998000 x44680000 1}
       {x449a0000 x44680000 1}
       {x449a8000 x44680000 1}}}
     {tx x45045000 x4499a000 x44688000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush50 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44590000 x44410000 1}
       {x445b0000 x443e0000 1}}}
     {tx x45045000 x445a0000 x443f8000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush49 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44af0000 x44650000 1}
       {x44af8000 x44630000 1}
       {x44b08000 x445f0000 1}
       {x44b10000 x445e0000 1}
       {x44b18000 x445e0000 1}
       {x44b18000 x445f0000 1}
       {x44b18000 x44600000 1}
       {x44b18000 x44630000 1}
       {x44b18000 x44660000 1}
       {x44b10000 x44670000 1}
       {x44b00000 x44670000 1}}}
     {tx x45045000 x44b0c5d1 x446245d1}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush48 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44a10000 x44120000 1}
       {x449f0000 x44110000 1}}}
     {tx x45045000 x44a00000 x44118000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush47 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x43fa0000 x44910000 1}
       {x43f80000 x44908000 1}
       {x43f60000 x44900000 1}}}
     {tx x45045000 x43f80000 x44908000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush46 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44080000 x44998000 1}
       {x44030000 x44990000 1}
       {x44000000 x44980000 1}
       {x43f40000 x44968000 1}}}
     {tx x45045000 x44014000 x44984000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush45 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x443a0000 x44af0000 1}
       {x44390000 x44ae8000 1}
       {x44380000 x44ae8000 1}
       {x44380000 x44af0000 1}}}
     {tx x45045000 x4438c000 x44aec000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush44 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x43ee0000 x44190000 1}
       {x43f00000 x44150000 1}
       {x43f20000 x44140000 1}}}
     {tx x45045000 x43f00000 x44160000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush43 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ca8000 x444d0000 1}}}
     {tx x447a4000 x44ca8000 x444d0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush42 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b04000 x44444000 1}}}
     {tx x447a4000 x44b04000 x44444000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush41 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3e000 x447c8000 1}
       {x44d3e000 x44778000 1}}}
     {tx x447a4000 x44d3e000 x447a0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush40 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44db6000 x443f4000 1}
       {x44dac000 x44430000 1}
       {x44d98000 x44444000 1}}}
     {tx x447a4000 x44da8aab x44422aab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush39 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5a000 x44ad2000 1}
       {x44a64000 x44ad2000 1}}}
     {tx x447a4000 x44a5f000 x44ad2000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush38 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x444f8000 x448ca000 1}}}
     {tx x447a4000 x444f8000 x448ca000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush37 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x442dc000 x4492e000 1}
       {x4432c000 x44924000 1}
       {x4432c000 x4491a000 1}}}
     {tx x447a4000 x44311555 x44924000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush36 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x442c8000 x449d8000 1}
       {x442f0000 x449b0000 1}
       {x442c8000 x44974000 1}}}
     {tx x447a4000 x442d5555 x449a9555}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush35 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x442dc000 x4499c000 1}
       {x442b4000 x4499c000 1}
       {x442c8000 x4499c000 1}
       {x442c8000 x44988000 1}
       {x442b4000 x44988000 1}
       {x4428c000 x44988000 1}}}
     {tx x447a4000 x442baaab x44992000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush34 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447dc000 x44a50000 1}}}
     {tx x447a4000 x447dc000 x44a50000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush33 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44638000 x44aaa000 1}}}
     {tx x447a4000 x44638000 x44aaa000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush32 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x444bc000 x44a28000 1}}}
     {tx x447a4000 x444bc000 x44a28000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush31 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44548000 x44a28000 1}}}
     {tx x447a4000 x44548000 x44a28000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush30 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b86000 x435c0000 1}}}
     {tx x447a4000 x44b86000 x435c0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush29 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4492e000 x43eb0000 1}}}
     {tx x447a4000 x4492e000 x43eb0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush28 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a1e000 x43700000 1}
       {x44a0a000 x437f0000 1}}}
     {tx x447a4000 x44a14000 x43778000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush27 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487a000 x42fa0000 1}
       {x448d4000 x43070000 1}}}
     {tx x447a4000 x448a7000 x43020000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush26 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44816000 x437f0000 1}}}
     {tx x447a4000 x44816000 x437f0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush25 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a2000 x44034000 1}
       {x44870000 x44020000 1}}}
     {tx x447a4000 x44889000 x4402a000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush24 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44584000 x43ac8000 1}
       {x44598000 x43b40000 1}}}
     {tx x447a4000 x4458e000 x43b04000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush23 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44368000 x43cd0000 1}}}
     {tx x447a4000 x44368000 x43cd0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush22 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44570000 x440ac000 1}}}
     {tx x447a4000 x44570000 x440ac000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush21 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446ec000 x44278000 1}}}
     {tx x447a4000 x446ec000 x44278000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush20 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44020000 x44340000 1}}}
     {tx x447a4000 x44020000 x44340000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush19 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44214000 x444f8000 1}}}
     {tx x447a4000 x44214000 x444f8000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush18 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x442f0000 x445c0000 1}}}
     {tx x447a4000 x442f0000 x445c0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush17 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4469c000 x447dc000 1}}}
     {tx x447a4000 x4469c000 x447dc000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush16 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x443cc000 x448a2000 1}}}
     {tx x447a4000 x443cc000 x448a2000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush15 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4441c000 x449ce000 1}}}
     {tx x447a4000 x4441c000 x449ce000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush14 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44906000 x448fc000 1}
       {x44802000 x44974000 1}}}
     {tx x447a4000 x44884000 x44938000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush13 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44906000 x448fc000 1}
       {x448e8000 x448f2000 1}
       {x448c0000 x448f2000 1}}}
     {tx x447a4000 x448e4aab x448f5555}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush12 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44906000 x44a64000 1}
       {x44906000 x44a28000 1}
       {x448f2000 x44a1e000 1}}}
     {tx x447a4000 x448ff555 x44a38aab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush11 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a6000 x449a6000 1}
       {x44988000 x449f6000 1}}}
     {tx x447a4000 x44997000 x449ce000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush10 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2c000 x44802000 1}}}
     {tx x447a4000 x44b2c000 x44802000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush9 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2c000 x44802000 1}
       {x44ac8000 x447dc000 1}}}
     {tx x447a4000 x44afa000 x447f0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush8 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd0000 x448ac000 1}
       {x44c62000 x448ac000 1}}}
     {tx x447a4000 x44c99000 x448ac000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush7 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cbc000 x44700000 1}
       {x44cbc000 x4478c000 1}
       {x44cbc000 x447c8000 1}}}
     {tx x447a4000 x44cbc000 x44771555}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush6 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bfe000 x443f4000 1}
       {x44c08000 x44430000 1}}}
     {tx x447a4000 x44c03000 x44412000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush5 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0e000 x44124000 1}
       {x44af0000 x44160000 1}
       {x44af0000 x44174000 1}}}
     {tx x447a4000 x44afa000 x44152aab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush4 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c62000 x43fa0000 1}}}
     {tx x447a4000 x44c62000 x43fa0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush3 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6c000 x43cf8000 1}
       {x44c6c000 x43d48000 1}
       {x44c6c000 x43d70000 1}}}
     {tx x447a4000 x44c6c000 x43d3aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b90000 x43a50000 1}
       {x44bb8000 x43af0000 1}}}
     {tx x447a4000 x44ba4000 x43aa0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}
    {cubiccurve Brush1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b0000 x43a28000 1}
       {x449ce000 x43a00000 1}
       {x449d8000 x43a00000 1}
       {x449ec000 x43a00000 1}}}
     {tx x447a4000 x449d0800 x43a0a000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 tt x41880000}}}}}}
 toolbox {brush {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush bs 42 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 2117 ltm 2117 tt 17 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_size 42
 toolbar_brush_hardness 0.200000003
 toolbar_lifetime_type single
 toolbar_lifetime_start 2117
 toolbar_lifetime_end 2117
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1112 774}
 colorOverlay {0 0 0 0}
 lifetime_start 2117
 lifetime_end 2117
 motionblur_on true
 motionblur_shutter_offset_type centred
 brush_size 42
 brush_spacing 0.05000000075
 brush_hardness 0.200000003
 source_black_outside true
 name RotoPaint1
 selected true
 xpos -197
 ypos 3218
}
RotoPaint {
 inputs 0
 output alpha
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x448b0000 x44418000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup OpenSpline1 1049088 bezier
     {{cc
       {f 1056800}
       {px x45045000
        {x43b21cc8 x429684d0}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x447e0002 x44b10000}
        {xc38e0004 xc2700000}
        {x41c00040 x439ffffc}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x43fbfffc x44550002}
        {xc1b9d4d0 xc39adbbc}
        {xc3080000 x42d80002}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x444f0000 x439bfffd}
        {x4352fe24 xc3278d99}
        {xc29249f0 xc29f1f0e}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44b60000 x43700003}
        {x42e40000 x42f7fff8}
        {x42780000 xc3a4fffe}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44d88000 x4451ffff}
        {xc1c30240 x4301bec0}
        {x436b8bb8 xc2304780}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44a88000 x449d8000}
        {xc39b0000 x42680000}
        {x42800000 x42b00000}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44430000 x447d0001}
        {xc2800000 xc2b00000}
        {xc3440000 x42d80000}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x445f0000 x43ee0000}
        {x43440000 xc2d80000}
        {xc2de3210 xc29eb600}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44ab0000 x43e60000}
        {x42e00000 x42a00000}
        {x432c0000 xc3440004}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44b38000 x44700001}
        {xc3084dd8 x431b52a4}
        {x426ffff0 x42a00000}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x446d0001 x44670000}
        {xc23d1910 xc27c2180}
        {xc3073f98 x427283a0}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x447f0000 x4417ffff}
        {x42e80000 xc24ffff0}
        {xc1d1c600 xc2dc4228}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44a50000 x442c0001}
        {x41a00000 x42a7fff8}
        {x42300000 x40800000}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x44930000 x44550000}
        {xc2642500 xc0a5ec80}
        {0 0}
        {{a osw
       {{x45045000 1}}	 osf
       {{x45045000 0}}}     x448e0000 x443b0002}
        {0 0}}}     idem}
     {tx x45045000 x448f5555 x4450cccd}
     {a osbe 0 osee 0 osw x41200000 osf 0 str 1 ltn x45045000 ltm x45045000 tt x41200000}}
    {cubiccurve Brush2 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x447c0000 x44aa8000 1}
       {x44790000 x44aa8000 1}
       {x44720000 x44aa0000 1}
       {x446a0000 x44a98000 1}
       {x44690000 x44a90000 1}
       {x44650000 x44a88000 1}
       {x44620000 x44a80000 1}
       {x445e0000 x44a70000 1}
       {x445b0000 x44a60000 1}
       {x44580000 x44a58000 1}
       {x44530000 x44a40000 1}
       {x44500000 x44a30000 1}
       {x444a0000 x44a18000 1}
       {x44490000 x44a10000 1}
       {x44440000 x449f8000 1}
       {x44430000 x449f0000 1}
       {x44420000 x449e8000 1}
       {x443d0000 x449d0000 1}
       {x443b0000 x449c8000 1}
       {x44350000 x449a8000 1}
       {x44310000 x44990000 1}
       {x442f0000 x44980000 1}
       {x442a0000 x44960000 1}
       {x44270000 x44948000 1}
       {x44250000 x44930000 1}
       {x441f0000 x44900000 1}
       {x441e0000 x448f0000 1}
       {x441d0000 x448e8000 1}
       {x441b0000 x448c8000 1}
       {x44180000 x448b0000 1}
       {x44140000 x44890000 1}
       {x44130000 x44880000 1}
       {x44110000 x44868000 1}
       {x440f0000 x44858000 1}
       {x440d0000 x44840000 1}
       {x440a0000 x44820000 1}
       {x44070000 x447f0000 1}
       {x44030000 x44770000 1}
       {x44020000 x44750000 1}
       {x44010000 x44720000 1}
       {x43fe0000 x446d0000 1}
       {x43fa0000 x446a0000 1}
       {x43f80000 x44660000 1}
       {x43f60000 x44630000 1}
       {x43f60000 x44600000 1}
       {x43f20000 x445c0000 1}
       {x43f20000 x44590000 1}
       {x43f00000 x44560000 1}
       {x43f00000 x44530000 1}
       {x43ee0000 x444f0000 1}
       {x43ee0000 x444b0000 1}
       {x43ec0000 x44480000 1}
       {x43ec0000 x44450000 1}
       {x43ec0000 x44420000 1}
       {x43ec0000 x443f0000 1}
       {x43ec0000 x443c0000 1}
       {x43ec0000 x443a0000 1}
       {x43ec0000 x44350000 1}
       {x43ec0000 x44320000 1}
       {x43ec0000 x442f0000 1}
       {x43ec0000 x442c0000 1}
       {x43ee0000 x44280000 1}
       {x43f00000 x44210000 1}
       {x43f00000 x44200000 1}
       {x43f20000 x441d0000 1}
       {x43f40000 x441a0000 1}
       {x43f60000 x44170000 1}
       {x43f80000 x44130000 1}
       {x43fa0000 x44110000 1}
       {x43fc0000 x440e0000 1}
       {x43fe0000 x440b0000 1}
       {x44000000 x44070000 1}
       {x44010000 x44040000 1}
       {x44030000 x44000000 1}
       {x44070000 x43f40000 1}
       {x44070000 x43f20000 1}
       {x44090000 x43f00000 1}
       {x440b0000 x43e80000 1}
       {x440d0000 x43e40000 1}
       {x440e0000 x43de0000 1}
       {x44100000 x43dc0000 1}
       {x44110000 x43d80000 1}
       {x44140000 x43d40000 1}
       {x44160000 x43ce0000 1}
       {x44180000 x43ca0000 1}
       {x441a0000 x43c60000 1}
       {x441e0000 x43be0000 1}
       {x441e0000 x43bc0000 1}
       {x44200000 x43b60000 1}
       {x44240000 x43b00000 1}
       {x44260000 x43ac0000 1}
       {x44280000 x43a80000 1}
       {x442b0000 x43a20000 1}
       {x442d0000 x439c0000 1}
       {x442f0000 x43980000 1}
       {x44310000 x43940000 1}
       {x44330000 x43920000 1}
       {x44360000 x438e0000 1}
       {x443b0000 x43860000 1}
       {x443c0000 x43860000 1}
       {x443d0000 x43820000 1}
       {x443f0000 x437c0000 1}
       {x44400000 x437c0000 1}
       {x44430000 x43700000 1}
       {x44440000 x436c0000 1}
       {x44450000 x43680000 1}
       {x44470000 x43600000 1}
       {x44490000 x435c0000 1}
       {x444c0000 x43540000 1}
       {x444f0000 x434c0000 1}
       {x44510000 x43480000 1}
       {x44550000 x433c0000 1}
       {x44570000 x43380000 1}
       {x44590000 x43340000 1}
       {x445b0000 x43300000 1}
       {x445d0000 x432c0000 1}
       {x44600000 x43240000 1}
       {x44620000 x43200000 1}
       {x44650000 x43180000 1}
       {x44680000 x43140000 1}
       {x446a0000 x43100000 1}
       {x446c0000 x430c0000 1}
       {x44700000 x43080000 1}
       {x44740000 x43080000 1}
       {x44750000 x43040000 1}
       {x44760000 x43040000 1}
       {x447a0000 x43040000 1}
       {x447e0000 x43040000 1}
       {x44810000 x43000000 1}
       {x44838000 x43000000 1}
       {x44858000 x42f80000 1}
       {x44870000 x42f80000 1}
       {x44880000 x42f80000 1}
       {x448a0000 x42f00000 1}
       {x448b8000 x42f00000 1}
       {x448f0000 x42f00000 1}
       {x448f8000 x42f00000 1}
       {x44918000 x42f00000 1}
       {x44948000 x42f80000 1}
       {x44960000 x42f80000 1}
       {x44978000 x42f80000 1}
       {x44990000 x42f80000 1}
       {x449a8000 x43000000 1}
       {x449d0000 x43040000 1}
       {x449d8000 x43040000 1}
       {x449f8000 x43080000 1}
       {x44a10000 x43080000 1}
       {x44a28000 x430c0000 1}
       {x44a50000 x43100000 1}
       {x44a58000 x43100000 1}
       {x44a78000 x43180000 1}
       {x44a90000 x431c0000 1}
       {x44aa8000 x43200000 1}
       {x44ac8000 x43280000 1}
       {x44ae0000 x43300000 1}
       {x44af0000 x43340000 1}
       {x44b08000 x433c0000 1}
       {x44b18000 x43400000 1}
       {x44b30000 x43480000 1}
       {x44b50000 x43500000 1}
       {x44b78000 x43600000 1}
       {x44b80000 x43640000 1}
       {x44b90000 x43680000 1}
       {x44bb0000 x43740000 1}
       {x44bc0000 x437c0000 1}
       {x44bd8000 x43820000 1}
       {x44be8000 x43860000 1}
       {x44c00000 x438a0000 1}
       {x44c08000 x438c0000 1}
       {x44c18000 x43900000 1}
       {x44c20000 x43920000 1}
       {x44c38000 x43960000 1}
       {x44c50000 x439c0000 1}
       {x44c60000 x43a00000 1}
       {x44c68000 x43a40000 1}
       {x44c70000 x43a60000 1}
       {x44c80000 x43a80000 1}
       {x44c90000 x43ae0000 1}
       {x44ca8000 x43b40000 1}
       {x44cb8000 x43ba0000 1}
       {x44cb8000 x43bc0000 1}
       {x44cc8000 x43c00000 1}
       {x44cd8000 x43c40000 1}
       {x44ce8000 x43ca0000 1}
       {x44cf8000 x43d00000 1}
       {x44d10000 x43dc0000 1}
       {x44d30000 x43e80000 1}
       {x44d38000 x43ea0000 1}
       {x44d40000 x43ee0000 1}
       {x44d48000 x43f40000 1}
       {x44d50000 x43fe0000 1}
       {x44d58000 x44040000 1}
       {x44d58000 x44080000 1}
       {x44d60000 x440b0000 1}
       {x44d68000 x440e0000 1}
       {x44d70000 x44110000 1}
       {x44d78000 x44140000 1}
       {x44d80000 x44170000 1}
       {x44d88000 x441c0000 1}
       {x44d98000 x44250000 1}
       {x44d98000 x44270000 1}
       {x44db0000 x442d0000 1}
       {x44db0000 x442e0000 1}
       {x44db8000 x44320000 1}
       {x44dc8000 x44360000 1}
       {x44dd0000 x44390000 1}
       {x44dd0000 x44400000 1}
       {x44dd8000 x44430000 1}
       {x44dd8000 x44460000 1}
       {x44dd8000 x444a0000 1}
       {x44dd8000 x444d0000 1}
       {x44dd0000 x44540000 1}
       {x44dd0000 x44550000 1}
       {x44dc0000 x44590000 1}
       {x44dc0000 x445c0000 1}
       {x44db8000 x44600000 1}
       {x44db8000 x44640000 1}
       {x44db8000 x44660000 1}
       {x44db8000 x44690000 1}
       {x44db0000 x446e0000 1}
       {x44da8000 x44710000 1}
       {x44da0000 x44740000 1}
       {x44d98000 x44770000 1}
       {x44d90000 x447b0000 1}
       {x44d80000 x44800000 1}
       {x44d80000 x44808000 1}
       {x44d78000 x44820000 1}
       {x44d78000 x44838000 1}
       {x44d70000 x44850000 1}
       {x44d60000 x44870000 1}
       {x44d58000 x44888000 1}
       {x44d48000 x44898000 1}
       {x44d38000 x448b8000 1}
       {x44d28000 x448d0000 1}
       {x44d18000 x448e8000 1}
       {x44d00000 x44908000 1}
       {x44cd0000 x44930000 1}
       {x44cc8000 x44938000 1}
       {x44ca8000 x44950000 1}
       {x44c88000 x44970000 1}
       {x44c70000 x44980000 1}
       {x44c60000 x44990000 1}
       {x44c48000 x449a0000 1}
       {x44c30000 x449b8000 1}
       {x44c18000 x449c8000 1}
       {x44bf8000 x449d8000 1}
       {x44bd8000 x449e8000 1}
       {x44bb0000 x449f8000 1}
       {x44b80000 x44a08000 1}
       {x44b78000 x44a08000 1}
       {x44b68000 x44a10000 1}
       {x44b50000 x44a18000 1}
       {x44b28000 x44a20000 1}
       {x44b00000 x44a20000 1}
       {x44ad8000 x44a28000 1}
       {x44ab0000 x44a28000 1}
       {x44a90000 x44a28000 1}
       {x44a60000 x44a30000 1}
       {x44a50000 x44a30000 1}
       {x44a10000 x44a30000 1}
       {x449b0000 x44a30000 1}
       {x449a0000 x44a30000 1}
       {x44948000 x44a30000 1}
       {x44938000 x44a30000 1}
       {x44908000 x44a28000 1}
       {x448e0000 x44a28000 1}
       {x448d8000 x44a28000 1}
       {x448a0000 x44a18000 1}
       {x44878000 x44a10000 1}
       {x44848000 x44a08000 1}
       {x44838000 x44a00000 1}
       {x44800000 x449f0000 1}
       {x44770000 x449d0000 1}
       {x44760000 x449d0000 1}
       {x44720000 x449c0000 1}
       {x446d0000 x449b0000 1}
       {x44690000 x449a0000 1}
       {x44620000 x44988000 1}
       {x445d0000 x44978000 1}
       {x44580000 x44960000 1}
       {x44550000 x44958000 1}
       {x44520000 x44948000 1}
       {x444f0000 x44930000 1}
       {x444c0000 x44910000 1}
       {x44470000 x448e8000 1}
       {x44450000 x448d8000 1}
       {x44410000 x448b0000 1}
       {x44410000 x448a8000 1}
       {x443e0000 x44888000 1}
       {x443c0000 x44868000 1}
       {x443a0000 x44848000 1}
       {x44380000 x44830000 1}
       {x44370000 x44810000 1}
       {x44340000 x447d0000 1}
       {x44330000 x447a0000 1}
       {x44320000 x44760000 1}
       {x44310000 x446f0000 1}
       {x44310000 x446c0000 1}
       {x44300000 x44690000 1}
       {x44300000 x44650000 1}
       {x44300000 x44610000 1}
       {x44300000 x445c0000 1}
       {x44300000 x44590000 1}
       {x44310000 x44550000 1}
       {x44320000 x44510000 1}
       {x44330000 x444e0000 1}
       {x44340000 x444b0000 1}
       {x44360000 x44480000 1}
       {x44380000 x44420000 1}
       {x44390000 x44410000 1}
       {x443a0000 x443e0000 1}
       {x443c0000 x443b0000 1}
       {x443d0000 x44380000 1}
       {x443e0000 x44370000 1}
       {x443f0000 x44340000 1}
       {x44410000 x44310000 1}
       {x44430000 x442e0000 1}
       {x44460000 x442b0000 1}
       {x44480000 x44280000 1}
       {x444b0000 x44240000 1}
       {x444c0000 x44210000 1}
       {x44580000 x44110000 1}
       {x44590000 x44100000 1}
       {x445d0000 x440c0000 1}
       {x44600000 x440a0000 1}
       {x44630000 x44080000 1}
       {x44640000 x44080000 1}
       {x44680000 x44040000 1}
       {x446a0000 x44020000 1}
       {x446d0000 x44000000 1}
       {x44700000 x43fc0000 1}
       {x44730000 x43f80000 1}
       {x44790000 x43f40000 1}
       {x447a0000 x43f20000 1}
       {x447b0000 x43f00000 1}
       {x447f0000 x43ee0000 1}
       {x44818000 x43ec0000 1}
       {x44830000 x43e80000 1}
       {x44848000 x43e60000 1}
       {x44860000 x43e40000 1}
       {x44880000 x43e20000 1}
       {x44898000 x43e20000 1}
       {x448b0000 x43e00000 1}
       {x448d0000 x43de0000 1}
       {x44918000 x43da0000 1}
       {x44930000 x43d80000 1}
       {x44948000 x43d60000 1}
       {x44960000 x43d60000 1}
       {x44988000 x43d60000 1}
       {x449a8000 x43d60000 1}
       {x449d0000 x43d60000 1}
       {x44a00000 x43d60000 1}
       {x44a20000 x43d60000 1}
       {x44a40000 x43d60000 1}
       {x44a68000 x43d60000 1}
       {x44a90000 x43d60000 1}
       {x44ae8000 x43d80000 1}
       {x44af8000 x43d80000 1}
       {x44b20000 x43da0000 1}
       {x44b40000 x43dc0000 1}
       {x44b78000 x43e00000 1}
       {x44ba0000 x43e20000 1}
       {x44bd0000 x43e80000 1}
       {x44bf0000 x43ec0000 1}
       {x44c10000 x43f20000 1}
       {x44c28000 x43f60000 1}
       {x44c30000 x43f80000 1}
       {x44c48000 x43fc0000 1}
       {x44c70000 x44030000 1}
       {x44c70000 x44040000 1}
       {x44c88000 x44060000 1}
       {x44c98000 x440a0000 1}
       {x44cb0000 x440d0000 1}
       {x44cc0000 x440f0000 1}
       {x44cd8000 x44150000 1}
       {x44ce0000 x44190000 1}
       {x44cf0000 x441e0000 1}
       {x44d00000 x44220000 1}
       {x44d00000 x44230000 1}
       {x44d10000 x44250000 1}
       {x44d18000 x44280000 1}
       {x44d30000 x44310000 1}
       {x44d30000 x44330000 1}
       {x44d38000 x44350000 1}
       {x44d48000 x443c0000 1}
       {x44d50000 x44400000 1}
       {x44d50000 x44430000 1}
       {x44d48000 x44460000 1}
       {x44d40000 x44490000 1}
       {x44d30000 x444f0000 1}
       {x44d20000 x44520000 1}
       {x44d18000 x44550000 1}
       {x44d08000 x44580000 1}
       {x44ce8000 x445d0000 1}
       {x44ce8000 x445e0000 1}
       {x44cc0000 x44620000 1}
       {x44ca8000 x44650000 1}
       {x44c98000 x44670000 1}
       {x44c88000 x446a0000 1}
       {x44c68000 x446c0000 1}
       {x44c50000 x446f0000 1}
       {x44c20000 x44720000 1}
       {x44c00000 x44740000 1}
       {x44be0000 x44760000 1}
       {x44bb8000 x44780000 1}
       {x44b80000 x447c0000 1}
       {x44b60000 x447d0000 1}
       {x44b38000 x447f0000 1}
       {x44b08000 x44808000 1}
       {x44ac8000 x44818000 1}
       {x44a98000 x44820000 1}
       {x44a70000 x44828000 1}
       {x44a48000 x44830000 1}
       {x44a18000 x44838000 1}
       {x449f0000 x44838000 1}
       {x449d8000 x44838000 1}
       {x44990000 x44838000 1}
       {x44948000 x44828000 1}
       {x44938000 x44828000 1}
       {x44910000 x44820000 1}
       {x448f0000 x44818000 1}
       {x448d8000 x44810000 1}
       {x448b0000 x44808000 1}
       {x44878000 x44800000 1}
       {x44850000 x447f0000 1}
       {x44820000 x447d0000 1}
       {x44810000 x447c0000 1}
       {x447c0000 x44790000 1}
       {x447a0000 x44770000 1}
       {x44750000 x44730000 1}
       {x44740000 x44720000 1}
       {x44710000 x44700000 1}
       {x44700000 x446e0000 1}
       {x446d0000 x446b0000 1}
       {x446b0000 x44670000 1}
       {x44680000 x44630000 1}
       {x44670000 x44600000 1}
       {x44660000 x445c0000 1}
       {x44650000 x44590000 1}
       {x44650000 x44560000 1}
       {x44660000 x44520000 1}
       {x44670000 x444b0000 1}
       {x44680000 x444a0000 1}
       {x44690000 x44470000 1}
       {x446b0000 x44440000 1}
       {x446d0000 x44400000 1}
       {x44710000 x443c0000 1}
       {x44740000 x44390000 1}
       {x44770000 x44350000 1}
       {x44790000 x44320000 1}
       {x447c0000 x44300000 1}
       {x44800000 x442d0000 1}
       {x44810000 x442b0000 1}
       {x44848000 x44270000 1}
       {x44850000 x44260000 1}
       {x44860000 x44250000 1}
       {x44890000 x44230000 1}
       {x448b0000 x44210000 1}
       {x448e0000 x441f0000 1}
       {x44908000 x441e0000 1}
       {x44930000 x441e0000 1}
       {x44948000 x441e0000 1}
       {x44968000 x441e0000 1}
       {x44998000 x441e0000 1}
       {x449e0000 x441e0000 1}
       {x449f0000 x441f0000 1}
       {x44a18000 x441f0000 1}
       {x44a40000 x44200000 1}
       {x44a70000 x44210000 1}
       {x44a88000 x44220000 1}
       {x44aa8000 x44240000 1}
       {x44ab8000 x44260000 1}
       {x44ad0000 x44280000 1}
       {x44ae8000 x442b0000 1}
       {x44b00000 x442e0000 1}
       {x44b10000 x44300000 1}
       {x44b30000 x44340000 1}
       {x44b30000 x44350000 1}
       {x44b38000 x44380000 1}
       {x44b40000 x443b0000 1}
       {x44b40000 x443f0000 1}
       {x44b40000 x44420000 1}
       {x44b40000 x44460000 1}
       {x44b38000 x44490000 1}
       {x44b20000 x444d0000 1}
       {x44b18000 x44500000 1}
       {x44b10000 x44540000 1}
       {x44b00000 x44580000 1}
       {x44af0000 x445b0000 1}
       {x44ae8000 x445b0000 1}
       {x44ae0000 x445c0000 1}
       {x44ac8000 x445d0000 1}
       {x44aa8000 x445f0000 1}
       {x44aa0000 x44600000 1}
       {x44a88000 x44600000 1}
       {x44a70000 x44610000 1}
       {x44a58000 x44610000 1}
       {x44a48000 x44620000 1}
       {x44a40000 x44620000 1}
       {x44a30000 x44620000 1}
       {x44a18000 x44630000 1}
       {x449f0000 x44630000 1}
       {x449e8000 x44630000 1}
       {x449d0000 x44620000 1}
       {x449b8000 x44620000 1}
       {x44990000 x44610000 1}
       {x44990000 x44600000 1}
       {x44980000 x44600000 1}
       {x44978000 x445f0000 1}
       {x44968000 x445e0000 1}
       {x44958000 x445d0000 1}
       {x44948000 x445c0000 1}
       {x44930000 x445a0000 1}
       {x44918000 x44570000 1}
       {x44910000 x44570000 1}
       {x448f8000 x44550000 1}
       {x448f0000 x44550000 1}
       {x448e8000 x44540000 1}
       {x448e0000 x44530000 1}
       {x448d0000 x44520000 1}
       {x448c0000 x44510000 1}
       {x448b0000 x44500000 1}
       {x448a8000 x444f0000 1}
       {x44898000 x444e0000 1}
       {x44890000 x444d0000 1}
       {x44890000 x444b0000 1}
       {x44890000 x444a0000 1}
       {x44898000 x44490000 1}
       {x448a0000 x44480000 1}
       {x448b0000 x44460000 1}
       {x448b8000 x44450000 1}
       {x448c0000 x44450000 1}
       {x448c8000 x44450000 1}
       {x448d0000 x44450000 1}
       {x448d0000 x44460000 1}
       {x448d8000 x44460000 1}
       {x448e0000 x44480000 1}
       {x448e8000 x444c0000 1}
       {x448e8000 x444d0000 1}
       {x448f0000 x444f0000 1}
       {x448f0000 x44500000 1}
       {x448f0000 x44510000 1}
       {x448e8000 x44510000 1}
       {x448e0000 x44520000 1}
       {x448d0000 x44520000 1}
       {x448c0000 x44530000 1}
       {x448b8000 x44530000 1}
       {x448a0000 x44530000 1}
       {x44890000 x44530000 1}
       {x44878000 x44540000 1}
       {x44878000 x44550000 1}}}
     {tx x45045000 x448f2dff x44393d54}
     {a vis 0 ro 0 go 0 bo 0 ao 0 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush1 512 catmullrom
     {cc
      {f 2080}
      {px x45045000
       {x44780000 x44a80000 1}
       {x44700000 x44a88000 1}
       {x446f0000 x44a88000 1}
       {x446e0000 x44a88000 1}
       {x446a0000 x44a80000 1}
       {x44660000 x44a78000 1}
       {x44610000 x44a70000 1}
       {x445c0000 x44a68000 1}
       {x44550000 x44a60000 1}
       {x44530000 x44a60000 1}
       {x444f0000 x44a58000 1}
       {x444b0000 x44a50000 1}
       {x44460000 x44a48000 1}
       {x443b0000 x44a28000 1}
       {x44390000 x44a20000 1}
       {x44360000 x44a10000 1}
       {x44310000 x44a00000 1}
       {x442d0000 x449e8000 1}
       {x442b0000 x449d8000 1}
       {x44290000 x449c8000 1}
       {x44250000 x449a8000 1}
       {x44220000 x44990000 1}
       {x441f0000 x44970000 1}
       {x441c0000 x44958000 1}
       {x441b0000 x44948000 1}
       {x44180000 x44918000 1}
       {x44180000 x44910000 1}
       {x44160000 x448f8000 1}
       {x44130000 x448d8000 1}
       {x44110000 x448c0000 1}
       {x44100000 x448b8000 1}
       {x440e0000 x44898000 1}
       {x440d0000 x44878000 1}
       {x440d0000 x44868000 1}
       {x440b0000 x44840000 1}
       {x440a0000 x44828000 1}
       {x44090000 x44810000 1}
       {x44080000 x447b0000 1}
       {x44080000 x44790000 1}
       {x44080000 x44760000 1}
       {x44070000 x44720000 1}
       {x44060000 x446e0000 1}
       {x44050000 x44680000 1}
       {x44050000 x44620000 1}
       {x44040000 x445e0000 1}
       {x44040000 x445a0000 1}
       {x44030000 x44550000 1}
       {x44030000 x444f0000 1}
       {x44020000 x44480000 1}
       {x44020000 x44400000 1}
       {x44020000 x443f0000 1}
       {x44030000 x443a0000 1}
       {x44040000 x44360000 1}
       {x44050000 x44310000 1}
       {x44060000 x442d0000 1}
       {x44070000 x44270000 1}
       {x44070000 x44230000 1}
       {x44080000 x441e0000 1}
       {x440a0000 x44190000 1}
       {x440c0000 x44150000 1}
       {x440d0000 x44130000 1}
       {x44100000 x440d0000 1}
       {x44100000 x440c0000 1}
       {x44120000 x44070000 1}
       {x44140000 x44030000 1}
       {x44150000 x44000000 1}
       {x44180000 x43fa0000 1}
       {x441a0000 x43f40000 1}
       {x441c0000 x43ec0000 1}
       {x441e0000 x43e60000 1}
       {x44200000 x43de0000 1}
       {x44220000 x43d80000 1}
       {x44240000 x43d40000 1}
       {x44280000 x43cc0000 1}
       {x44290000 x43ca0000 1}
       {x442b0000 x43c80000 1}
       {x442e0000 x43c20000 1}
       {x44310000 x43be0000 1}
       {x44340000 x43b80000 1}
       {x44370000 x43b20000 1}
       {x44390000 x43ae0000 1}
       {x443d0000 x43a80000 1}
       {x44400000 x43a20000 1}
       {x44430000 x439e0000 1}
       {x44460000 x439a0000 1}
       {x444b0000 x43940000 1}
       {x444d0000 x43920000 1}
       {x44520000 x438c0000 1}
       {x44530000 x438a0000 1}
       {x44560000 x43860000 1}
       {x44580000 x43840000 1}
       {x445b0000 x43800000 1}
       {x445e0000 x437c0000 1}
       {x44620000 x43740000 1}
       {x44640000 x43700000 1}
       {x44670000 x436c0000 1}
       {x446a0000 x43680000 1}
       {x44700000 x43640000 1}
       {x44730000 x43640000 1}
       {x44780000 x435c0000 1}
       {x447d0000 x43580000 1}
       {x44810000 x43540000 1}
       {x44830000 x43540000 1}
       {x44860000 x43500000 1}
       {x44880000 x434c0000 1}
       {x448a0000 x43480000 1}
       {x448c8000 x43480000 1}
       {x448e8000 x43480000 1}
       {x44910000 x43480000 1}
       {x44958000 x43440000 1}
       {x44960000 x43440000 1}
       {x44988000 x43440000 1}
       {x449a8000 x43440000 1}
       {x449c8000 x43440000 1}
       {x449f0000 x43440000 1}
       {x44a20000 x43480000 1}
       {x44a40000 x434c0000 1}
       {x44a68000 x43500000 1}
       {x44a70000 x43500000 1}
       {x44a88000 x43500000 1}
       {x44ab8000 x43540000 1}
       {x44ad0000 x43580000 1}
       {x44b10000 x43600000 1}
       {x44b20000 x43640000 1}
       {x44b48000 x43680000 1}
       {x44b68000 x436c0000 1}
       {x44b88000 x43700000 1}
       {x44bb0000 x437c0000 1}
       {x44bd8000 x43840000 1}
       {x44bf8000 x43880000 1}
       {x44c28000 x438e0000 1}
       {x44c48000 x43920000 1}
       {x44c70000 x43980000 1}
       {x44c80000 x439a0000 1}
       {x44cb8000 x43a60000 1}
       {x44cc8000 x43a80000 1}
       {x44cd8000 x43aa0000 1}
       {x44cf8000 x43b20000 1}
       {x44d10000 x43b60000 1}
       {x44d30000 x43be0000 1}
       {x44d48000 x43c60000 1}
       {x44d58000 x43cc0000 1}
       {x44d68000 x43d60000 1}
       {x44d78000 x43dc0000 1}
       {x44d88000 x43e20000 1}
       {x44da0000 x43e80000 1}
       {x44da8000 x43ec0000 1}
       {x44db0000 x43f60000 1}
       {x44db8000 x44030000 1}
       {x44dc8000 x44090000 1}
       {x44dc8000 x440b0000 1}
       {x44dd0000 x440d0000 1}
       {x44dd8000 x440f0000 1}
       {x44dd8000 x44110000 1}
       {x44dd8000 x44140000 1}
       {x44dd0000 x44180000 1}
       {x44dc0000 x441f0000 1}
       {x44db8000 x44280000 1}
       {x44db8000 x442a0000 1}
       {x44db8000 x44300000 1}
       {x44db8000 x44340000 1}
       {x44da8000 x443d0000 1}
       {x44da0000 x44410000 1}
       {x44d90000 x44450000 1}
       {x44d88000 x44480000 1}
       {x44d78000 x444c0000 1}
       {x44d68000 x44500000 1}
       {x44d60000 x44540000 1}
       {x44d48000 x445b0000 1}
       {x44d40000 x445c0000 1}
       {x44d38000 x445f0000 1}
       {x44d38000 x44600000 1}
       {x44d18000 x44660000 1}
       {x44d08000 x44690000 1}
       {x44cf0000 x446e0000 1}
       {x44ce0000 x44710000 1}
       {x44cd0000 x44740000 1}
       {x44cb8000 x44770000 1}
       {x44ca8000 x44790000 1}
       {x44c80000 x447e0000 1}
       {x44c78000 x447f0000 1}
       {x44c78000 x44800000 1}
       {x44c58000 x44828000 1}
       {x44c50000 x44830000 1}
       {x44c30000 x44850000 1}
       {x44c28000 x44858000 1}
       {x44c18000 x44868000 1}
       {x44bf8000 x44888000 1}
       {x44be0000 x448a0000 1}
       {x44bc8000 x448b0000 1}
       {x44ba0000 x448c8000 1}
       {x44b80000 x448d8000 1}
       {x44b48000 x448e8000 1}
       {x44b40000 x448f0000 1}
       {x44b20000 x448f8000 1}
       {x44b08000 x44900000 1}
       {x44ae8000 x44918000 1}
       {x44ad0000 x44928000 1}
       {x44ab0000 x44938000 1}
       {x44a88000 x44948000 1}
       {x44a68000 x44950000 1}
       {x44a30000 x44960000 1}
       {x44a10000 x44968000 1}
       {x449e0000 x44978000 1}
       {x449a0000 x44988000 1}
       {x44990000 x44990000 1}
       {x44948000 x449a0000 1}
       {x44920000 x449a0000 1}
       {x448e0000 x449a8000 1}
       {x448c0000 x449a8000 1}
       {x448a0000 x449a8000 1}
       {x44878000 x449a8000 1}
       {x44848000 x449a0000 1}
       {x44828000 x44998000 1}
       {x44808000 x44990000 1}
       {x44780000 x44970000 1}
       {x44770000 x44970000 1}
       {x44730000 x44960000 1}
       {x44700000 x44950000 1}
       {x446d0000 x44940000 1}
       {x446a0000 x44930000 1}
       {x44680000 x44920000 1}
       {x44640000 x44908000 1}
       {x44610000 x448e8000 1}
       {x445e0000 x448d0000 1}
       {x445c0000 x448b8000 1}
       {x44590000 x448a0000 1}
       {x44550000 x44878000 1}
       {x44540000 x44870000 1}
       {x44520000 x44858000 1}
       {x444f0000 x44830000 1}
       {x444e0000 x44818000 1}
       {x444c0000 x447f0000 1}
       {x444a0000 x44790000 1}
       {x44490000 x44750000 1}
       {x44480000 x44720000 1}
       {x44480000 x446e0000 1}
       {x44470000 x44690000 1}
       {x44470000 x44660000 1}
       {x44470000 x445f0000 1}
       {x44470000 x445e0000 1}
       {x44470000 x445b0000 1}
       {x44470000 x445a0000 1}
       {x44470000 x44570000 1}
       {x44470000 x44530000 1}
       {x44470000 x44500000 1}
       {x44480000 x444a0000 1}
       {x44490000 x44460000 1}
       {x444a0000 x44430000 1}
       {x444c0000 x443f0000 1}
       {x444f0000 x44390000 1}
       {x44520000 x44320000 1}
       {x44550000 x442c0000 1}
       {x44570000 x442a0000 1}
       {x445b0000 x44280000 1}
       {x445e0000 x44250000 1}
       {x44630000 x44210000 1}
       {x44650000 x441f0000 1}
       {x44680000 x441d0000 1}
       {x446b0000 x441a0000 1}
       {x446d0000 x44190000 1}
       {x44700000 x44170000 1}
       {x44730000 x44140000 1}
       {x44780000 x44110000 1}
       {x447d0000 x440f0000 1}
       {x44830000 x440a0000 1}
       {x44838000 x44090000 1}
       {x44860000 x44070000 1}
       {x44878000 x44060000 1}
       {x448a8000 x44050000 1}
       {x448c0000 x44040000 1}
       {x448f8000 x44030000 1}
       {x44928000 x44030000 1}
       {x44958000 x44020000 1}
       {x44970000 x44020000 1}
       {x449a0000 x44010000 1}
       {x449b8000 x44010000 1}
       {x44a10000 x44010000 1}
       {x44a20000 x44020000 1}
       {x44a40000 x44020000 1}
       {x44a68000 x44030000 1}
       {x44a90000 x44040000 1}
       {x44ac8000 x44060000 1}
       {x44af0000 x44080000 1}
       {x44b10000 x44090000 1}
       {x44b30000 x440b0000 1}
       {x44b58000 x440e0000 1}
       {x44b80000 x44120000 1}
       {x44b90000 x44130000 1}
       {x44bc8000 x44180000 1}
       {x44bd0000 x44190000 1}
       {x44bf8000 x441d0000 1}
       {x44c10000 x44200000 1}
       {x44c30000 x44260000 1}
       {x44c38000 x44280000 1}
       {x44c48000 x442c0000 1}
       {x44c50000 x442f0000 1}
       {x44c50000 x44330000 1}
       {x44c58000 x44380000 1}
       {x44c58000 x44400000 1}
       {x44c58000 x44440000 1}
       {x44c58000 x44480000 1}
       {x44c58000 x44490000 1}
       {x44c50000 x444b0000 1}
       {x44c48000 x444d0000 1}
       {x44c18000 x44610000 1}
       {x44c10000 x44620000 1}
       {x44c08000 x44640000 1}
       {x44bf0000 x44660000 1}
       {x44bd8000 x44690000 1}
       {x44bb0000 x446c0000 1}
       {x44ba8000 x446c0000 1}
       {x44b90000 x446d0000 1}
       {x44b70000 x446f0000 1}
       {x44b50000 x44700000 1}
       {x44b30000 x44710000 1}
       {x44b18000 x44720000 1}
       {x44af8000 x44730000 1}
       {x44ae0000 x44740000 1}
       {x44ac8000 x44750000 1}
       {x44ab0000 x44760000 1}
       {x44a88000 x44770000 1}
       {x44a40000 x44790000 1}
       {x44a30000 x44790000 1}
       {x44a00000 x44790000 1}
       {x449e8000 x447a0000 1}
       {x449c0000 x447a0000 1}
       {x449b0000 x447a0000 1}
       {x44988000 x447a0000 1}
       {x44968000 x44790000 1}
       {x44948000 x44780000 1}
       {x44928000 x44780000 1}
       {x448f8000 x44760000 1}
       {x448c8000 x44740000 1}
       {x448b8000 x44740000 1}
       {x44898000 x44710000 1}
       {x44890000 x44710000 1}
       {x44868000 x446e0000 1}
       {x44840000 x446b0000 1}
       {x44830000 x44690000 1}
       {x44818000 x44660000 1}
       {x44800000 x44640000 1}
       {x447e0000 x44610000 1}
       {x447d0000 x445f0000 1}
       {x447b0000 x445a0000 1}
       {x447b0000 x44580000 1}
       {x447b0000 x44550000 1}
       {x447c0000 x44520000 1}
       {x447d0000 x444f0000 1}
       {x447f0000 x444c0000 1}
       {x44800000 x44480000 1}
       {x44810000 x44460000 1}
       {x44818000 x44450000 1}
       {x44828000 x44420000 1}
       {x44838000 x44400000 1}
       {x44850000 x443d0000 1}
       {x44880000 x44390000 1}
       {x44888000 x44380000 1}
       {x448a0000 x44370000 1}
       {x448c0000 x44350000 1}
       {x448d8000 x44350000 1}
       {x44900000 x44350000 1}
       {x44938000 x44370000 1}
       {x44940000 x44370000 1}
       {x44958000 x44380000 1}
       {x44968000 x44390000 1}
       {x44978000 x443a0000 1}
       {x44988000 x443b0000 1}
       {x449a8000 x443d0000 1}
       {x449b0000 x443e0000 1}
       {x449c8000 x44400000 1}
       {x449d0000 x44410000 1}
       {x449d8000 x44420000 1}
       {x449e0000 x44430000 1}
       {x449e8000 x44450000 1}
       {x449f0000 x44480000 1}
       {x449f0000 x44490000 1}
       {x449f0000 x444b0000 1}
       {x449f0000 x444c0000 1}
       {x449f0000 x444d0000 1}
       {x449d8000 x44500000 1}
       {x449d8000 x44510000 1}
       {x449c8000 x44540000 1}
       {x449c0000 x44540000 1}
       {x449c0000 x44550000 1}
       {x449b0000 x44550000 1}
       {x44998000 x44550000 1}
       {x44988000 x44550000 1}
       {x44978000 x44550000 1}
       {x44970000 x44550000 1}
       {x44960000 x44550000 1}
       {x44948000 x44540000 1}}}
     {tx x45045000 x448dc925 x4440cfac}
     {a vis 0 ro 0 go 0 bo 0 ao 0 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x45045000 ltm x45045000 ltt x40000000 tt x41880000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createOpenSpline str 1 ssx 1 ssy 1 sf 1 tt 10 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 2117 ltm 2117 tt 17 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {320 240}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 2117
 lifetime_end 2117
 motionblur_shutter_offset_type centred
 brush_spacing 0.05000000075
 brush_hardness 0.200000003
 name RotoPaint3
 selected true
 xpos -296
 ypos 3265
}
Merge2 {
 inputs 2
 operation plus
 name Plus
 selected true
 xpos -296
 ypos 3368
}
push $N4cc000b0
Group {
 inputs 2
 name Huemask1
 tile_color 0xb2d6ff
 selected true
 xpos -433
 ypos 3368
 addUserKnob {20 Controller}
 addUserKnob {26 instructions l " " +INVISIBLE T "Connect a roto\nCreate a mask on the scope \nHit \"m\" to see your matte \n"}
 addUserKnob {26 ""}
 addUserKnob {6 keepmyalpha l "Keep Previous Alpha" t "This should be on, in case you want only the vector scope as preview or as an Input Process " +INVISIBLE +STARTLINE}
 addUserKnob {4 pulldown l "Display mode" M {"Scope on plate" "Scope only" "" "" ""}}
 pulldown "Scope only"
 addUserKnob {26 ""}
 addUserKnob {20 group_4 l General n 1}
 addUserKnob {6 alpha l "Premult alpha on scope" t "This is usefull if you just want to see what is on your alpha. so it takes out all the extra color you don't want to see without premulting the plate \n\nWith this on, you will preview only what you had in your the input alpha and the roto mask will apply only on that part as well. \n\nBasically it does a premult based on the alpha so you can work only on that color, " +STARTLINE}
 alpha true
 addUserKnob {6 boolean_5 l "Alpha BBox" -STARTLINE}
 addUserKnob {6 darkmode l "Transparent mode" +STARTLINE}
 addUserKnob {41 scale l "Overall Scale" t "this scale is only the UI scaling doesn't affect the quality data. \n\nif you want to increase the detail of the data go to settings and activate the checkbox for 1k  data " T Reformat_final_Scale_12.scale}
 addUserKnob {7 zoom2 l Zoom t "This will increase the color data into the darkest pixel or into the brightest colors. \n\nThis is usefull when your plate is too dark or is too bright to spot colors.\n\n" R -1 1}
 addUserKnob {20 endGroup_9 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 group_3 l "Use alpha as a Color Matte " n 1}
 group_3 0
 addUserKnob {6 boolean_4 l "Activate Alpha input as matte" t "Use alpha for Matte\n\nThis is useful if you want to paint directly the color that you want to have the matte" +STARTLINE}
 addUserKnob {41 first_frame_dup l Reference T FrameHold1.first_frame_dup}
 addUserKnob {41 filter T Reformat4.filter}
 addUserKnob {41 size_1 l Erode T Dilate3.size}
 addUserKnob {20 endGroup_5 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 group_1 l "Use with luminance" n 1}
 group_1 0
 addUserKnob {6 boolean_2 l "Use luminance keyer" +STARTLINE}
 addUserKnob {41 invert -STARTLINE T Keyer_highlights_2134.invert}
 addUserKnob {41 range l HighLights T Keyer_highlights_2134.range}
 addUserKnob {20 endGroup_7 l endGroup n -1}
 addUserKnob {26 xxxxx l "" +STARTLINE}
 addUserKnob {20 ColorSamplergroup l "Pixel Sampler" n 1}
 ColorSamplergroup 0
 addUserKnob {6 activatesampler l "On/Off " +STARTLINE}
 addUserKnob {6 useaskeylight l "Use as a Keylight" -STARTLINE}
 addUserKnob {7 double l Opacity t "Opacity of the sampler"}
 double 0.1
 addUserKnob {41 color l Color t "(don't pick over the scope!)" T Constant_to_pick_1.color}
 addUserKnob {26 xxxxxxxx l "" +STARTLINE}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 xxxxxxxxx_1 l "" +STARTLINE}
 addUserKnob {20 Referencegroup l Reference n 1}
 Referencegroup 0
 addUserKnob {6 Reference l "Show Reference" t "it's a more convinience buttom to deactivate the reference input instead of unplugging the node. " +STARTLINE}
 Reference true
 addUserKnob {6 offplate l "Show Plate" -STARTLINE}
 offplate true
 addUserKnob {41 operation l "Merge Operation" T Merge_reference.operation}
 addUserKnob {26 text_2 l "Show outline "}
 addUserKnob {6 disablered l "Reference (Red)" +STARTLINE}
 disablered true
 addUserKnob {6 boolean_6 l "Plate (Blue)" -STARTLINE}
 addUserKnob {6 diableGreen l "2nd Reference (Green)" -STARTLINE}
 diableGreen true
 addUserKnob {6 compare l "Highlight Original previous color and alpha" t "this will highlight what ever you had in your alpha previous the node. \nThis is usefull if you have a CG and want to see how your colors are blending with the plate overall \n" +STARTLINE}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 Grading n 1}
 Grading 0
 addUserKnob {6 enablegrading l Enable +STARTLINE}
 addUserKnob {6 boolean_3 l "Preview Original" t "This is usefull if you want to see how it was before you grading the color matte." -STARTLINE}
 addUserKnob {41 saturation_1 l Saturation T Saturation_FOR_PREVIEW_1234.saturation}
 addUserKnob {7 Contrast R 0.5 1.5}
 Contrast 1
 addUserKnob {7 Tint l "Magenta/Green <font color=#FF00FF><sup>◄</sup></font><font color=#00FF00><sub>►</sub></font>" R -1 4}
 Tint 1
 addUserKnob {7 Temperature l "Temperature <font color=#0400FF><sup>◄</sup></font><font color=#FF9E00><sub>►</sub></font>" R -1 4}
 Temperature 1
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {26 xxxxxxxxxxxxxxxxxx l "" +STARTLINE}
 addUserKnob {20 group l "Matte Adjusments (beta)" n 1}
 group 0
 addUserKnob {6 blurmatte l "Blur Matte" +STARTLINE}
 addUserKnob {41 size l Amount -STARTLINE T Blur_colodata_1.size}
 addUserKnob {6 boolean l "Time Echo " +STARTLINE}
 addUserKnob {41 framesbehind l "Frames to look at" -STARTLINE T TimeEcho1.framesbehind}
 addUserKnob {20 endGroup_6 l endGroup n -1}
 addUserKnob {26 xxxxxxxxxxx_1 l "" +STARTLINE}
 addUserKnob {1 string l "" +STARTLINE}
 string VIEWER_INPUT
 addUserKnob {26 credits l "" +STARTLINE T "HueMask v1.0   -   Jorge Miranda Cherem"}
 addUserKnob {26 link l "" +STARTLINE +INVISIBLE T "<a href=\"https://www.linkedin.com/in/jorge-miranda-8b4a4417/\"><span style=\"color:#C8C8C8;\">Linkedin</span></a>"}
 addUserKnob {20 settings l Settings}
 addUserKnob {26 text l "Format Issues"}
 addUserKnob {6 crop l "Crop to Bbox" t "Uncheck this if the BBbox is smaller than your comp that can't see the scope anymore." -STARTLINE}
 crop true
 addUserKnob {26 xxxxxxxxx l "" +STARTLINE}
 addUserKnob {20 dropdown l "Preview settings" n 1}
 addUserKnob {6 activate l "Scope On" t "Manual check box to desactivate the Scope. However desactivated by default when send to render." +STARTLINE}
 activate true
 addUserKnob {26 colordatapreview l "Color Data Preview"}
 addUserKnob {41 value l Brightness T Grade_brightness_1.value}
 addUserKnob {41 value_2 l Gamma T Gamma_overall.value}
 addUserKnob {26 mask_separate l Mask}
 addUserKnob {41 value_3 l Opacity T Multiply_maskopacity.value}
 addUserKnob {6 boolean_1 l Glow +STARTLINE}
 boolean_1 true
 addUserKnob {26 xxxxxxx l "" +STARTLINE}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 xxxxxxx_1 l "" +STARTLINE}
 addUserKnob {20 group_2 l "Colorwheel Look" n 1}
 addUserKnob {6 colorless l "Show Color Guides" +STARTLINE}
 addUserKnob {6 showtargets l "Show Color Targets" -STARTLINE}
 addUserKnob {41 saturation l Saturation T Saturation_colorwheel.saturation}
 addUserKnob {41 value_1 l Brightness T Colorwheel_Brightess_1.value}
 addUserKnob {7 opacity l Opacity}
 addUserKnob {6 opaque l Opaque +STARTLINE}
 opaque true
 addUserKnob {41 color_1 l "Fill Empty Color" -STARTLINE T Constant_to_fill_space_23.color}
 addUserKnob {20 endGroup_8 l endGroup n -1}
 addUserKnob {26 xxxxxxxxxx_1 l "" +STARTLINE}
 addUserKnob {20 opaque_1 l "Color Data" n 1}
 opaque_1 0
 addUserKnob {6 resolution5 l "1k for more detail  " +STARTLINE}
 addUserKnob {6 noclampvalues l "No Clamp Values" +STARTLINE}
 addUserKnob {41 numpixels l "Add Pixels" T AdjBBox_Color_Data_1.numpixels}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x388e8e00
  label "Color picker "
  note_font_size 42
  xpos -2031
  ypos 1737
  bdwidth 1302
  bdheight 1328
 }
 BackdropNode {
  inputs 0
  name BackdropNode10
  tile_color 0x397b90ff
  label "Color Targets"
  note_font_size 42
  xpos -2467
  ypos 3478
  bdwidth 323
  bdheight 517
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x337f7eff
  label "reformat for more detail"
  note_font_size 42
  xpos -506
  ypos 18
  bdwidth 550
  bdheight 201
 }
 BackdropNode {
  inputs 0
  name BackdropNode12
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos -489
  ypos 436
  bdwidth 455
  bdheight 396
 }
 BackdropNode {
  inputs 0
  name BackdropNode15
  tile_color 0x7171c600
  label "only premulted"
  note_font_size 42
  xpos -389
  ypos 1467
  bdwidth 210
  bdheight 147
 }
 BackdropNode {
  inputs 0
  name BackdropNode18
  tile_color 0x283f5eff
  label "show reference and off plate"
  note_font_size 42
  xpos -394
  ypos 1958
  bdwidth 538
  bdheight 327
 }
 BackdropNode {
  inputs 0
  name BackdropNode19
  tile_color 0x397b90ff
  label CC
  note_font_size 42
  xpos -578
  ypos 3069
  bdwidth 490
  bdheight 192
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x8e388e00
  label "premulted area"
  note_font_size 42
  xpos 1795
  ypos -79
  bdwidth 427
  bdheight 1454
 }
 BackdropNode {
  inputs 0
  name BackdropNode20
  tile_color 0x5b7d56ff
  label "preview mask"
  note_font_size 42
  xpos -577
  ypos 3495
  bdwidth 1362
  bdheight 509
 }
 BackdropNode {
  inputs 0
  name BackdropNode22
  tile_color 0x797979ff
  label "alpha from rgb\n(r+g+b) > 0 ? 1 : a"
  note_font_size 42
  xpos -401
  ypos 864
  bdwidth 413
  bdheight 149
 }
 BackdropNode {
  inputs 0
  name BackdropNode26
  tile_color 0x397b90ff
  label "color grading "
  note_font_size 42
  xpos -3929
  ypos 5428
  bdwidth 1189
  bdheight 1681
 }
 BackdropNode {
  inputs 0
  name BackdropNode27
  tile_color 0x337f7eff
  label REFORMAT
  note_font_size 42
  xpos -285
  ypos -1031
  bdwidth 258
  bdheight 199
 }
 BackdropNode {
  inputs 0
  name BackdropNode28
  tile_color 0x337f7eff
  label "overall Scale"
  note_font_size 42
  xpos -3252
  ypos 6741
  bdwidth 413
  bdheight 167
 }
 BackdropNode {
  inputs 0
  name BackdropNode29
  tile_color 0x8e8e3800
  label "time echo"
  note_font_size 42
  xpos -501
  ypos 245
  bdwidth 546
  bdheight 168
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x797979ff
  label "affect alpha only "
  note_font_size 42
  xpos 2074
  ypos -359
  bdheight 221
 }
 BackdropNode {
  inputs 0
  name BackdropNode30
  tile_color 0x3a833bff
  label "keyer luminance"
  note_font_size 42
  xpos -596
  ypos -798
  bdwidth 247
  bdheight 211
 }
 BackdropNode {
  inputs 0
  name BackdropNode31
  tile_color 0xaf8508ff
  label "glow stuff"
  note_font_size 42
  xpos -547
  ypos 1657
  bdwidth 359
  bdheight 295
 }
 BackdropNode {
  inputs 0
  name BackdropNode32
  tile_color 0x397b90ff
  label "ColorWheel look"
  note_font_size 42
  xpos -3398
  ypos 4234
  bdwidth 903
  bdheight 664
 }
 BackdropNode {
  inputs 0
  name BackdropNode33
  tile_color 0x8e8e3800
  label "grading mode"
  note_font_size 42
  xpos -394
  ypos 4019
  bdwidth 453
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode35
  tile_color 0x337f7eff
  label "master Reformat "
  note_font_size 42
  xpos -3144
  ypos 1863
  bdwidth 453
  bdheight 242
 }
 BackdropNode {
  inputs 0
  name BackdropNode36
  tile_color 0x3a833bff
  label "keylightStuff "
  note_font_size 42
  xpos 762
  ypos 4731
  bdwidth 410
  bdheight 416
 }
 BackdropNode {
  inputs 0
  name BackdropNode37
  tile_color 0x32415e00
  label reference
  note_font_size 42
  xpos 3742
  ypos 326
  bdwidth 334
  bdheight 2283
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x397b90ff
  label "simple remap of color"
  note_font_size 42
  xpos 1067
  ypos 115
  bdwidth 132
  bdheight 2592
 }
 BackdropNode {
  inputs 0
  name BackdropNode40
  tile_color 0x283f5eff
  label "show reference and off plate"
  note_font_size 42
  xpos -291
  ypos 2321
  bdwidth 538
  bdheight 327
 }
 BackdropNode {
  inputs 0
  name BackdropNode41
  tile_color 0x7171c600
  label "reference input"
  note_font_size 42
  xpos 2789
  ypos -1266
  bdwidth 1283
  bdheight 223
 }
 BackdropNode {
  inputs 0
  name BackdropNode43
  tile_color 0x3a833bff
  label "keyer luminance"
  note_font_size 42
  xpos -138
  ypos -798
  bdwidth 247
  bdheight 211
 }
 BackdropNode {
  inputs 0
  name BackdropNode44
  tile_color 0x7171c600
  label "Scope view mode "
  note_font_size 42
  xpos -3963
  ypos 8375
  bdwidth 243
  bdheight 200
 }
 BackdropNode {
  inputs 0
  name BackdropNode45
  tile_color 0x797979ff
  label "Alpha only or different plate reference"
  note_font_size 42
  xpos 2787
  ypos -1604
  bdwidth 1284
  bdheight 317
 }
 BackdropNode {
  inputs 0
  name BackdropNode46
  tile_color 0x797979ff
  label "alpha input"
  note_font_size 42
  xpos -230
  ypos -1411
  bdwidth 346
  bdheight 275
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x337f7eff
  label "overall Scale"
  note_font_size 42
  xpos -3027
  ypos 4977
  bdwidth 413
  bdheight 167
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x397b90ff
  label "preview Color Wheel"
  note_font_size 42
  xpos -3398
  ypos 3068
  bdwidth 892
  bdheight 1100
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x797979ff
  label "roto input"
  note_font_size 42
  xpos 538
  ypos 2756
  bdwidth 237
  bdheight 531
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x32415e00
  label reference
  note_font_size 42
  xpos 2904
  ypos 126
  bdwidth 334
  bdheight 2283
 }
 BackdropNode {
  inputs 0
  name BackdropNode13
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos 1954
  ypos 410
  bdwidth 373
  bdheight 379
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode14
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos 2949
  ypos 633
  bdwidth 393
  bdheight 324
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode16
  tile_color 0x337f7eff
  label "reformat for more detail "
  note_font_size 42
  xpos 1781
  ypos 5
  bdwidth 594
  bdheight 212
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode17
  tile_color 0x337f7eff
  label "reformat for more detail "
  note_font_size 42
  xpos 2745
  ypos 408
  bdwidth 594
  bdheight 212
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode21
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos 1648
  ypos 1036
  bdwidth 210
  bdheight 325
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode23
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos -3171
  ypos 6103
  bdwidth 373
  bdheight 379
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode24
  tile_color 0x337f7eff
  label "reformat for more detail "
  note_font_size 42
  xpos -3344
  ypos 5838
  bdwidth 594
  bdheight 212
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode25
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos -3393
  ypos 6449
  bdwidth 210
  bdheight 325
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode34
  tile_color 0x797979ff
  label "grading with no Roto"
  note_font_size 42
  xpos -3979
  ypos 5541
  bdwidth 219
  bdheight 197
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode38
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos 3768
  ypos 1472
  bdwidth 264
  bdheight 415
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode39
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos 3787
  ypos 833
  bdwidth 393
  bdheight 324
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode42
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos -732
  ypos 1057
  bdwidth 210
  bdheight 325
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos 2930
  ypos 1272
  bdwidth 264
  bdheight 415
  z_order 1
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0x101010ff
  label "   POINTER   "
  note_font_size 19.25
  xpos -284
  ypos 2953
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0x101010ff
  label REFERENCE
  note_font_size 19.25
  xpos -315
  ypos 2176
 }
 Input {
  inputs 0
  name InputPlate
  xpos -223
  ypos -1862
 }
 Dot {
  name Dot144
  xpos -189
  ypos -1445
 }
set N7a80090 [stack 0]
 Dot {
  name Dot212
  xpos -186
  ypos -1218
 }
set N5540a00 [stack 0]
 Input {
  inputs 0
  name Alpha
  label "\[value number]"
  xpos 26
  ypos -1331
  number 1
 }
 Dot {
  name Dot188
  xpos 60
  ypos -1254
 }
 Dot {
  name Dot211
  xpos 60
  ypos -1218
 }
set N66900a0 [stack 0]
 Dot {
  name Dot213
  xpos 60
  ypos -1161
 }
push $N66900a0
push $N5540a00
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy9
  xpos -70
  ypos -1227
 }
 CopyBBox {
  inputs 2
  name CopyBBox3
  xpos -70
  ypos -1164
  disable {{!parent.boolean_5}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input1]"}}
  name Switch_InputAlpha
  xpos -220
  ypos -1164
 }
 Dot {
  name Dot36
  xpos -186
  ypos -1100
 }
set N9f0b0300 [stack 0]
 Dot {
  name Dot53
  xpos -186
  ypos -983
 }
set Nb2a14140 [stack 0]
 Crop {
  box {{input.bbox.x-bbox_padding} {input.bbox.y-bbox_padding} {input.bbox.r+bbox_padding} {input.bbox.t+bbox_padding}}
  name Crop_To_BBox
  xpos -170
  ypos -946
  addUserKnob {20 padding_tab l Padding}
  addUserKnob {7 bbox_padding l "bbox padding" t "Add or subtract from bounding box" R -100 100}
 }
push $Nb2a14140
 Crop {
  box {0 0 {width} {height}}
  name Crop2
  xpos -276
  ypos -943
 }
 set C43f8280 [stack 0]
 Switch {
  inputs 2
  which {{parent.crop}}
  name Switch_crop_223
  xpos -219
  ypos -885
 }
 set C182e8610 [stack 0]
set N182e8610 [stack 0]
 Dot {
  name Dot159
  xpos -405
  ypos -703
 }
set N1aafdf60 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace10
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -586
  ypos -718
 }
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle18
  xpos -586
  ypos -670
 }
 Keyer {
  operation "luminance key"
  name Keyer_highlights_2134
  xpos -586
  ypos -627
  disable {{!parent.boolean_2}}
 }
set N58bfba60 [stack 0]
push $N1aafdf60
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy7
  xpos -439
  ypos -627
  disable {{!parent.boolean_2}}
 }
set N175c1600 [stack 0]
push $N58bfba60
push $N182e8610
 Dot {
  name Dot185
  xpos 52
  ypos -703
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge4
  xpos 18
  ypos -633
  disable {{!parent.boolean_2}}
 }
set N11bed780 [stack 0]
 Switch {
  inputs 2
  which {{!parent.alpha}}
  name Switch18_to_merge_with_alpha_2
  xpos -343
  ypos -527
 }
push $N11bed780
 Switch {
  inputs 2
  which {{-(pulldown)+1}}
  name Switch17
  xpos -222
  ypos -456
 }
 Dot {
  name Dot89
  xpos -188
  ypos -390
 }
set Na71e4930 [stack 0]
 Dot {
  name Dot5
  xpos -188
  ypos -279
 }
set Neefec80 [stack 0]
 Dot {
  name Dot6
  xpos 2118
  ypos -279
 }
 Premult {
  name Premult_alpha_to_isolate_1
  xpos 2084
  ypos -217
 }
 Dot {
  name Dot4
  xpos 2118
  ypos -157
 }
set N85342d10 [stack 0]
 Dot {
  name Dot110
  xpos 2118
  ypos 97
 }
set N20234bf0 [stack 0]
 Dot {
  name Dot124
  xpos 2010
  ypos 97
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_16
  xpos 1976
  ypos 123
 }
 Dot {
  name Dot125
  xpos 2010
  ypos 192
 }
push $N20234bf0
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_20
  xpos 2084
  ypos 126
 }
 Switch {
  inputs 2
  which {{!parent.resolution5}}
  name Switch_reformat
  xpos 2084
  ypos 189
 }
 set Cd71e7240 [stack 0]
 Dot {
  name Dot8
  xpos 2118
  ypos 490
 }
set Nf6fe460 [stack 0]
 Blur {
  size 50
  name Blur_colodata_1
  label "size \[value size]"
  xpos 2084
  ypos 523
  disable {{!parent.blurmatte}}
 }
 set Cb0f73200 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 2084
  ypos 579
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle2
  xpos 2084
  ypos 627
 }
 Grade {
  blackpoint {{parent.zoom2}}
  whitepoint {{1-blackpoint}}
  black_clamp false
  name Grade_Uniform_Scale_1
  xpos 2084
  ypos 701
 }
 set Cc94e8e70 [stack 0]
set Nc94e8e70 [stack 0]
 AdjBBox {
  numpixels {{parent.AdjBBox_Color_Data_1.numpixels}}
  name AdjBBox2
  xpos 2084
  ypos 725
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $Nf6fe460
 Dot {
  name Dot12
  xpos 1969
  ypos 490
 }
 Dot {
  name Dot21
  xpos 1969
  ypos 758
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap4
  xpos 2084
  ypos 749
 }
 Premult {
  name Premult4
  xpos 2084
  ypos 820
  disable true
 }
 Dot {
  name Dot28
  xpos 2118
  ypos 1140
 }
set N8ebf8a30 [stack 0]
 Dot {
  name Dot23
  xpos 1917
  ypos 1140
 }
set N100fd5e0 [stack 0]
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode6
  xpos 1723
  ypos 1131
 }
push $Neefec80
 Premult {
  name Premult3
  xpos -222
  ypos -261
  disable true
 }
 Premult {
  name Premult_for_keyer_23
  xpos -222
  ypos -224
  disable {{parent.Copy7.disable}}
 }
 Dot {
  name Dot123
  xpos -188
  ypos -200
 }
set N3f60dd90 [stack 0]
 Dot {
  name Dot199
  xpos 48
  ypos -200
 }
push $N3f60dd90
push $N85342d10
push $N3f60dd90
 Switch {
  inputs 3
  which {{"parent.compare ==1? 2 : parent.alpha"}}
  name Switch_method
  xpos -222
  ypos -161
 }
 set Cb3619700 [stack 0]
 Dot {
  name Dot9
  xpos -188
  ypos -137
 }
 Dot {
  name Dot10
  tile_color 0xcc804e00
  label plate
  note_font_size 30
  xpos -188
  ypos -106
 }
set Nd4cd8240 [stack 0]
 Switch {
  inputs 2
  which {{parent.boolean_4}}
  name Switch20
  xpos 14
  ypos -109
 }
 Dot {
  name Dot24
  xpos 1113
  ypos -106
 }
clone $Cb0f73200 {
  xpos 1079
  ypos 539
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace5
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 1079
  ypos 587
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 1079
  ypos 635
 }
clone $Cc94e8e70 {
  xpos 1082
  ypos 683
  selected false
 }
 Dot {
  name Dot112
  xpos 1116
  ypos 3153
 }
set Nf6e952c0 [stack 0]
 Dot {
  name Dot113
  xpos 981
  ypos 3153
 }
 Dot {
  inputs 0
  name Dot178
  xpos 41
  ypos 2401
 }
set N10ffe900 [stack 0]
 Dot {
  name Dot179
  xpos -67
  ypos 2401
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_12
  xpos -101
  ypos 2422
 }
 Dot {
  name Dot180
  xpos -67
  ypos 2458
 }
push $N10ffe900
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_13
  xpos 7
  ypos 2419
 }
clone $Cd71e7240 {
  inputs 2
  xpos 7
  ypos 2455
  selected false
 }
 Dot {
  name Dot181
  xpos 41
  ypos 2500
 }
set N13efc410 [stack 0]
 Input {
  inputs 0
  name InputReference_2dn
  label "\[value number]"
  xpos 3876
  ypos -1732
  number 4
 }
 Dot {
  name Dot207
  xpos 3910
  ypos -1525
 }
set N1b6a1ac0 [stack 0]
 Dot {
  name Dot209
  xpos 3851
  ypos -1525
 }
set N1bb51ec0 [stack 0]
 Dot {
  name Dot208
  xpos 3851
  ypos -1403
 }
push $N7a80090
push $N1bb51ec0
 Dot {
  name Dot210
  xpos 3787
  ypos -1525
 }
set N116fcc60 [stack 0]
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  alpha alpha2
  name ShuffleCopy2
  xpos 3753
  ypos -1454
 }
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 3753
  ypos -1406
 }
 Premult {
  name Premult8
  xpos 3753
  ypos -1355
 }
push $N1b6a1ac0
 Switch {
  inputs 2
  which {{!parent.NoOp2.boolean}}
  name Switch22
  xpos 3876
  ypos -1355
 }
 Dot {
  name Dot83
  xpos 3910
  ypos -1199
 }
set Nf7d92060 [stack 0]
clone $C43f8280 {
  xpos 3784
  ypos -1157
  selected false
 }
push $Nf7d92060
 Crop {
  box {{input.bbox.x-bbox_padding} {input.bbox.y-bbox_padding} {input.bbox.r+bbox_padding} {input.bbox.t+bbox_padding}}
  name Crop_To_BBox2
  xpos 3969
  ypos -1164
  addUserKnob {20 padding_tab l Padding}
  addUserKnob {7 bbox_padding l "bbox padding" t "Add or subtract from bounding box" R -100 100}
 }
clone $C182e8610 {
  inputs 2
  xpos 3886
  ypos -1090
  selected false
 }
 Remove {
  operation keep
  channels rgba
  name Keep1
  xpos 3886
  ypos 429
 }
 Shuffle {
  alpha white
  name Shuffle21
  xpos 3886
  ypos 453
 }
 Dot {
  name Dot84
  xpos 3920
  ypos 700
 }
set Neb388400 [stack 0]
 Dot {
  name Dot172
  xpos 3812
  ypos 700
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_7
  xpos 3778
  ypos 726
 }
 Dot {
  name Dot175
  xpos 3812
  ypos 795
 }
push $Neb388400
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_9
  xpos 3886
  ypos 729
 }
clone $Cd71e7240 {
  inputs 2
  xpos 3886
  ypos 792
  selected false
 }
 Dot {
  name Dot176
  xpos 3920
  ypos 913
 }
set N3ea0bf20 [stack 0]
clone $Cb0f73200 {
  xpos 3886
  ypos 931
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace11
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 3886
  ypos 979
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle15
  xpos 3886
  ypos 1027
 }
clone $Cc94e8e70 {
  xpos 3886
  ypos 1063
  selected false
 }
 AdjBBox {
  numpixels 800
  name AdjBBox_Color_Data_3
  xpos 3886
  ypos 1087
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $N3ea0bf20
 Dot {
  name Dot177
  tile_color 0xcc804e00
  xpos 3797
  ypos 913
 }
 Dot {
  name Dot82
  xpos 3797
  ypos 1120
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap3
  xpos 3886
  ypos 1111
 }
 Dot {
  name Dot75
  xpos 3920
  ypos 1550
 }
set Nf98a73f0 [stack 0]
 Dot {
  name Dot77
  xpos 3810
  ypos 1550
 }
set Nfe1dcd10 [stack 0]
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode8
  xpos 3646
  ypos 1614
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle6
  xpos 3776
  ypos 1680
 }
 Grade {
  white 4
  multiply {0 1 0 0}
  multiply_panelDropped true
  name Grade6
  xpos 3776
  ypos 1735
 }
 Glow2 {
  brightness 0.02
  size 21
  name Glow4
  xpos 3776
  ypos 1769
 }
 Dot {
  name Dot74
  xpos 3810
  ypos 1823
 }
push $Nf98a73f0
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge1
  xpos 3886
  ypos 1820
  disable {{!parent.diableGreen}}
 }
 Dot {
  name Dot73
  xpos 3920
  ypos 2577
 }
 Switch {
  inputs 2
  which {{!parent.Reference}}
  name Switch_to_show_reference1
  xpos 7
  ypos 2574
 }
 Dot {
  inputs 0
  name Dot119
  xpos -62
  ypos 2038
 }
set N1a580090 [stack 0]
 Dot {
  name Dot120
  xpos -170
  ypos 2038
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_18
  xpos -204
  ypos 2059
 }
 Dot {
  name Dot121
  xpos -170
  ypos 2095
 }
push $N1a580090
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_3
  xpos -96
  ypos 2056
 }
clone $Cd71e7240 {
  inputs 2
  xpos -96
  ypos 2092
  selected false
 }
 Dot {
  name Dot122
  xpos -62
  ypos 2137
 }
set N9e590eb0 [stack 0]
 Input {
  inputs 0
  name InputReference
  label "\[value number]"
  xpos 3038
  ypos -1718
  number 3
 }
 Dot {
  name Dot203
  xpos 3072
  ypos -1525
 }
set Nfb5bb6c0 [stack 0]
 Dot {
  name Dot205
  xpos 3029
  ypos -1525
 }
set N8cfc6b70 [stack 0]
 Dot {
  name Dot206
  xpos 3029
  ypos -1403
 }
push $N7a80090
push $N8cfc6b70
 Dot {
  name Dot204
  xpos 2942
  ypos -1525
 }
set N1a1261e0 [stack 0]
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  alpha alpha2
  name ShuffleCopy1
  xpos 2908
  ypos -1454
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 2908
  ypos -1406
 }
 Premult {
  name Premult5
  xpos 2908
  ypos -1355
 }
push $Nfb5bb6c0
 Switch {
  inputs 2
  which {{!parent.NoOp1.boolean}}
  name Switch21
  xpos 3038
  ypos -1355
 }
 Dot {
  name Dot78
  xpos 3072
  ypos -1183
 }
set N186fe960 [stack 0]
clone $C43f8280 {
  xpos 2946
  ypos -1141
  selected false
 }
push $N186fe960
 Crop {
  box {{input.bbox.x-bbox_padding} {input.bbox.y-bbox_padding} {input.bbox.r+bbox_padding} {input.bbox.t+bbox_padding}}
  name Crop_To_BBox1
  xpos 3147
  ypos -1147
  addUserKnob {20 padding_tab l Padding}
  addUserKnob {7 bbox_padding l "bbox padding" t "Add or subtract from bounding box" R -100 100}
 }
clone $C182e8610 {
  inputs 2
  xpos 3048
  ypos -1074
  selected false
 }
 Remove {
  operation keep
  channels rgba
  name Keep
  xpos 3048
  ypos 229
 }
 Shuffle {
  alpha white
  name Shuffle14
  xpos 3048
  ypos 253
 }
 Dot {
  name Dot126
  xpos 3082
  ypos 500
 }
set Nf524a1d0 [stack 0]
 Dot {
  name Dot127
  xpos 2974
  ypos 500
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_22
  xpos 2940
  ypos 526
 }
 Dot {
  name Dot128
  xpos 2974
  ypos 595
 }
push $Nf524a1d0
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_23
  xpos 3048
  ypos 529
 }
clone $Cd71e7240 {
  inputs 2
  xpos 3048
  ypos 592
  selected false
 }
 Dot {
  name Dot79
  xpos 3082
  ypos 713
 }
set N187fb4a0 [stack 0]
clone $Cb0f73200 {
  xpos 3048
  ypos 731
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace3
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 3048
  ypos 779
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle10
  xpos 3048
  ypos 827
 }
clone $Cc94e8e70 {
  xpos 3048
  ypos 863
  selected false
 }
 AdjBBox {
  numpixels 800
  name AdjBBox_Color_Data_2
  xpos 3048
  ypos 887
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $N187fb4a0
 Dot {
  name Dot80
  tile_color 0xcc804e00
  xpos 2959
  ypos 713
 }
 Dot {
  name Dot81
  xpos 2959
  ypos 920
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap5
  xpos 3048
  ypos 911
 }
 Dot {
  name Dot87
  xpos 3082
  ypos 1350
 }
set N20490df0 [stack 0]
 Dot {
  name Dot88
  xpos 2972
  ypos 1350
 }
set N5abf1de0 [stack 0]
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode7
  xpos 2831
  ypos 1425
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle11
  xpos 2938
  ypos 1480
 }
 Grade {
  white 4
  multiply {1 0 0 0}
  multiply_panelDropped true
  name Grade13
  xpos 2938
  ypos 1536
 }
 Glow2 {
  brightness 0.02
  size 21
  name Glow1
  xpos 2938
  ypos 1569
 }
 Dot {
  name Dot105
  xpos 2972
  ypos 1623
 }
push $N20490df0
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge8
  xpos 3048
  ypos 1620
  disable {{!parent.disablered}}
 }
 Dot {
  name Dot85
  xpos 3082
  ypos 2214
 }
 Dot {
  name Dot130
  xpos 1028
  ypos 2214
 }
 Switch {
  inputs 2
  which {{!parent.Reference}}
  name Switch_to_show_reference
  xpos -96
  ypos 2211
 }
push $N100fd5e0
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode5
  xpos 1769
  ypos 1188
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle16
  xpos 1723
  ypos 1236
 }
 Grade {
  white 4
  multiply {1 0 0 0}
  multiply_panelDropped true
  name Grade15
  xpos 1723
  ypos 1272
 }
 Dot {
  name Dot72
  xpos 1757
  ypos 1291
 }
push $N8ebf8a30
 Merge2 {
  inputs 2
  operation under
  name Merge3
  xpos 2084
  ypos 1288
 }
 Dot {
  name Dot42
  xpos 2121
  ypos 1590
 }
push $Nd4cd8240
 Dot {
  name Dot11
  xpos -354
  ypos -106
 }
 Dot {
  name Dot106
  xpos -354
  ypos 98
 }
set Nfcb5d430 [stack 0]
 Dot {
  name Dot116
  xpos -462
  ypos 98
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_17
  xpos -496
  ypos 124
 }
 Dot {
  name Dot117
  xpos -462
  ypos 193
 }
push $Nfcb5d430
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_21
  xpos -388
  ypos 127
 }
clone $Cd71e7240 {
  inputs 2
  xpos -388
  ypos 190
  selected false
 }
 TimeEcho {
  framesbehind 10
  frmaesfade 0
  name TimeEcho1
  xpos -388
  ypos 328
  disable {{!parent.boolean}}
 }
 Dot {
  name Dot16
  xpos -353
  ypos 516
 }
set Naefc5f0 [stack 0]
clone $Cb0f73200 {
  xpos -387
  ypos 556
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace6
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -387
  ypos 604
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle7
  xpos -387
  ypos 652
 }
clone $Cc94e8e70 {
  xpos -387
  ypos 688
  selected false
 }
 AdjBBox {
  numpixels 800
  name AdjBBox_Color_Data_1
  xpos -387
  ypos 712
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
 Dot {
  name Dot109
  xpos -353
  ypos 736
 }
push $Naefc5f0
 Dot {
  name Dot17
  tile_color 0xcc804e00
  xpos -476
  ypos 516
 }
 Dot {
  name Dot18
  xpos -476
  ypos 788
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap
  xpos -387
  ypos 779
 }
 Expression {
  channel3 alpha
  expr3 "(r+g+b) > 0 ? 1 : a"
  name alphafromrgb_21
  label "\[value expr3]"
  xpos -387
  ypos 967
 }
 Dot {
  name Dot71
  xpos -353
  ypos 1122
 }
set Naea72f0 [stack 0]
 Dot {
  name Dot183
  xpos -353
  ypos 1161
 }
set N86458ef0 [stack 0]
 Dot {
  name Dot186
  xpos -463
  ypos 1161
 }
set N190f96d0 [stack 0]
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode2
  selected true
  xpos -657
  ypos 1197
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle22
  xpos -657
  ypos 1257
 }
 Grade {
  white 4
  multiply {0 0 1 0}
  multiply_panelDropped true
  name Grade11
  xpos -657
  ypos 1293
 }
 Dot {
  name Dot187
  xpos -623
  ypos 1312
 }
push $N86458ef0
 Merge2 {
  inputs 2
  operation under
  name Merge4
  xpos -387
  ypos 1309
  disable {{!parent.boolean_6}}
 }
 Dot {
  name Dot30
  xpos -350
  ypos 1547
 }
set Nee47e970 [stack 0]
 Dot {
  name Dot29
  xpos -235
  ypos 1547
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos -269
  ypos 1586
 }
push $Nee47e970
push $Nee47e970
clone $Cb3619700 {
  inputs 3
  xpos -384
  ypos 1586
  selected false
 }
 Dot {
  name Dot168
  xpos -350
  ypos 1739
 }
set N19cfd820 [stack 0]
 Dot {
  name Dot169
  xpos -505
  ypos 1739
 }
 Clamp {
  name Clamp6
  xpos -539
  ypos 1775
 }
 Blur {
  size 44
  filter box
  name Blur7
  xpos -539
  ypos 1811
 }
 Multiply {
  value 0.28
  name Multiply8
  xpos -539
  ypos 1866
 }
push $N19cfd820
 Merge2 {
  inputs 2
  operation plus
  mix 0.25
  name Plus_for_glow_12
  xpos -384
  ypos 1872
  disable {{!parent.boolean_1}}
 }
 Dot {
  name Dot129
  xpos -350
  ypos 2097
 }
push $N9e590eb0
 Switch {
  inputs 2
  which {{parent.offplate}}
  name Switch_to_nothing_234
  xpos -384
  ypos 2133
 }
 Merge2 {
  inputs 2
  operation under
  name Merge_reference
  xpos -384
  ypos 2211
  disable {{"!\[exists parent.input3]"}}
 }
 Dot {
  name Dot182
  xpos -350
  ypos 2460
 }
set N275f86a0 [stack 0]
 Merge2 {
  inputs 2
  operation under
  name Merge_reference1
  xpos -384
  ypos 2574
  disable {{"!\[exists parent.input4]"}}
 }
 Dot {
  name Dot86
  xpos -350
  ypos 2727
 }
set Nedcbf2a0 [stack 0]
 Dot {
  name Dot111
  xpos 868
  ypos 2727
 }
 OFXuk.co.thefoundry.keylight.keylight_v201 {
  show "Final Result"
  unPreMultiply false
  screenColour {{parent.Constant_to_pick_1.color x1009 0.08577041328} {parent.Constant_to_pick_1.color x1009 0.0464130193} {parent.Constant_to_pick_1.color x1009 0.02878418192}}
  screenGain 1
  screenBalance 0.5
  alphaBias {0.5 0.5 0.5}
  despillBias {0.5 0.5 0.5}
  gangBiases true
  preBlur 0
  "Screen Matte" 0
  screenClipMin 0
  screenClipMax 1
  screenClipRollback 0
  screenGrowShrink 0
  screenSoftness 0
  screenDespotBlack 0
  screenDespotWhite 0
  screenReplaceMethod "Soft Colour"
  screenReplaceColour {0.5 0.5 0.5}
  Tuning 0
  midPoint 0.5
  lowGain 1
  midGain 1
  highGain 1
  "Inside Mask" 0
  sourceAlphaHandling Ignore
  insideReplaceMethod "Soft Colour"
  insideReplaceColour {0.5 0.5 0.5}
  Crops 0
  SourceXMethod Colour
  SourceYMethod Colour
  SourceEdgeColour 0
  SourceCropL 0
  SourceCropR 1
  SourceCropB 0
  SourceCropT 1
  balanceSet true
  insideComponent None
  outsideComponent None
  cacheBreaker true
  name Keylight1
  xpos 837
  ypos 4811
 }
 Erode {
  size 2.5
  name Erode1
  xpos 837
  ypos 4835
 }
 Invert {
  name Invert3
  xpos 837
  ypos 4871
 }
 Reformat {
  resize distort
  filter Impulse
  pbb true
  name Reformat1
  xpos 837
  ypos 4907
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle13
  label "in \[value in]-->out \[value out]"
  xpos 837
  ypos 4931
 }
 STMap {
  inputs 2
  uv rgb
  name STMap1
  xpos 947
  ypos 4937
 }
push $Nf6e952c0
 Input {
  inputs 0
  name InputRoto
  label "\[value number]"
  xpos 685
  ypos 2830
  number 2
 }
 Dot {
  name Dot52
  xpos 719
  ypos 2900
 }
set N7e6c9d60 [stack 0]
 Reformat {
  type scale
  scale 0.5
  filter Impulse
  pbb true
  name Reformat_final_Scale_1adfadsf1
  xpos 548
  ypos 2897
 }
 Dot {
  name Dot58
  xpos 582
  ypos 2927
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_10
  xpos 548
  ypos 2964
 }
set Nf4d94290 [stack 0]
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_1
  xpos 548
  ypos 3000
 }
set N77e5930 [stack 0]
 Dot {
  name Dot160
  xpos 582
  ypos 3050
 }
push $N7e6c9d60
 Dot {
  name Dot57
  xpos 719
  ypos 2927
 }
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_11
  xpos 685
  ypos 2962
 }
set N8cf9f370 [stack 0]
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_1k
  xpos 685
  ypos 3012
 }
clone $Cd71e7240 {
  inputs 2
  xpos 685
  ypos 3047
  selected false
 }
set N7d331a20 [stack 0]
push $Nf4d94290
 Dot {
  name Dot156
  xpos 514
  ypos 2973
 }
 Dot {
  name Dot59
  xpos 514
  ypos 3079
 }
push $N8cf9f370
 Dot {
  name Dot157
  xpos 651
  ypos 2971
 }
 Dot {
  name Dot158
  xpos 651
  ypos 3086
 }
clone $Cd71e7240 {
  inputs 2
  xpos 545
  ypos 3083
  selected false
 }
 Dot {
  name Dot1
  xpos 579
  ypos 3148
 }
set N84904870 [stack 0]
push $Naea72f0
 Dot {
  name Dot198
  xpos 288
  ypos 1122
 }
 Dot {
  name Dot191
  xpos 288
  ypos 2787
 }
set N8def0dd0 [stack 0]
 FrameHold {
  first_frame 1001
  name FrameHold1
  xpos 254
  ypos 2958
  disable {{!parent.boolean_4}}
  addUserKnob {20 dneg l DNeg}
  addUserKnob {26 _version l "" +STARTLINE +INVISIBLE T 1.1}
  addUserKnob {22 documentation l Documentation -STARTLINE T nukescripts.start('http://dnet/x/PwBDBg')}
  addUserKnob {26 ""}
  addUserKnob {3 first_frame_dup l "first frame" t "The first frame to use. If increment is set to 0, first frame is used at every frame of the input clip.\n\n<b>NOTE:</b> This is a duplicate of the knob on the first tab, here for convenience. Any change here will set the knob on the first tab."}
  first_frame_dup 1001
  addUserKnob {3 increment_dup l increment t "The increment to use when rendering every certain number of frames from the input clip. For example, if this is set to 5 and first frame is set to 1, Nuke only uses frames 1, 6, 11, 16, and so on from the input.\n\n<b>NOTE:</b> This is a duplicate of the knob on the first tab, here for convenience. Any change here will set the knob on the first tab."}
  addUserKnob {26 ""}
  addUserKnob {22 comp_first l "comp first" t "Set the hold frame to the comp first frame, a.k.a. in Nuke parlance, root.first_frame, or in Shotgun parlance, 'sg_head_in'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"compFirstButton\"]).compFirstButton()"}
  addUserKnob {22 cut_in l "cut in" t "Set the hold frame to the cut in frame, which is the comp first frame plus head handles, or in Shotgun parlance, 'sg_cut_in'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"cutInButton\"]).cutInButton()"}
  addUserKnob {22 cut_out l "cut out" t "Set the hold frame to the cut out frame, which is the comp last frame minus tail handles, or in Shotgun parlance, 'sg_cut_out'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"cutOutButton\"]).cutOutButton()"}
  addUserKnob {22 comp_last l "comp last" t "Set the hold frame to the comp last frame, a.k.a. in Nuke parlance, root.last_frame, or in Shotgun parlance, 'sg_tail_out'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"compLastButton\"]).compLastButton()"}
  addUserKnob {26 "" -STARTLINE T " "}
  addUserKnob {22 hero_frame l "hero frame" t "Set the hold frame to the hero frame from Shotgun, a.k.a. 'sg_hero_frame'. Beware that this may not always be set by the sequence supervisor. If not, go bug him or her!" T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"getHeroFrameButton\"]).getHeroFrameButton()" +STARTLINE}
  addUserKnob {22 middle_frame l "middle frame" t "Set the hold frame to the frame between the cut in and cut out." -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"middleFrameButton\"]).middleFrameButton()"}
  addUserKnob {22 current_frame l "current frame" t "Set the hold frame to the current frame as in the active viewer's timeline, a.k.a. nuke.frame()." -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"currentFrameButton\"]).currentFrameButton()"}
  addUserKnob {26 ""}
  addUserKnob {4 get_show_shot_from l "get show/shot from" t "Which should be used to retrieve info from the database? Default is <b>environment</b>, which uses \$SHOW and \$SHOT. If you want to use this node's input, use <b>metadata</b>, which will grab the input/filename value. Or, you can type it in manually with <b>specify</b>.," M {environment metadata specify}}
  addUserKnob {6 always_refresh l "always refresh" t "If unchecked, use locally-cached frame range information if available. If checked, always refresh from the database no matter what. Certain actions will cause locally-cached frame range info to become stale and override this preference, such as changing the <i>get show/shot from</i> value." -STARTLINE}
  addUserKnob {1 hidden_foce_startline +HIDDEN}
  addUserKnob {26 show -STARTLINE +HIDDEN T " "}
  addUserKnob {26 shot -STARTLINE +HIDDEN T " "}
  addUserKnob {1 show_specify l show +HIDDEN}
  show_specify " "
  addUserKnob {1 shot_specify l shot +HIDDEN}
  shot_specify " "
  addUserKnob {26 cut_range l "cut range" +HIDDEN T " "}
  addUserKnob {26 comp_range l "comp range" +HIDDEN T " "}
  addUserKnob {26 hero_frame_value l "hero frame" +HIDDEN T " "}
  addUserKnob {6 hidden_is_stale l "" -STARTLINE +HIDDEN}
  addUserKnob {1 cut_in_specify +HIDDEN}
  addUserKnob {1 cut_out_specify +HIDDEN}
  addUserKnob {1 comp_first_specify +HIDDEN}
  addUserKnob {1 comp_last_specify +HIDDEN}
  addUserKnob {1 hero_frame_specify +HIDDEN}
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge5
  xpos 254
  ypos 3145
  disable true
 }
 Crop {
  box {0 0 512 512}
  name Crop6
  xpos 254
  ypos 3202
 }
set Nfe508670 [stack 0]
 Reformat {
  resize none
  pbb true
  name Reformat4
  xpos 254
  ypos 3226
 }
 Dilate {
  size 100
  name Dilate3
  xpos 254
  ypos 3250
 }
 Invert {
  channels alpha
  name Invert2
  xpos 254
  ypos 3286
 }
 Clamp {
  name Clamp2
  xpos 254
  ypos 3322
 }
 Dot {
  name Dot189
  xpos 288
  ypos 3382
 }
push $N7d331a20
 Switch {
  inputs 3
  which {{parent.boolean_4}}
  name Switch19
  xpos 685
  ypos 3379
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  label "in \[value in]-->out \[value out]"
  xpos 685
  ypos 3422
 }
 STMap {
  inputs 2
  uv rgb
  name STMap_apply1
  xpos 1082
  ypos 3428
 }
 Switch {
  inputs 2
  which {{parent.useaskeylight}}
  name Switch_keylight_method_321
  xpos 1082
  ypos 4943
 }
 Dot {
  name Dot76
  xpos 1116
  ypos 5011
 }
 Dot {
  name Dot35
  xpos 1116
  ypos 5057
 }
 Dot {
  name Dot41
  xpos 1116
  ypos 5724
 }
set N1b2f9560 [stack 0]
 Dot {
  name Dot146
  xpos 1116
  ypos 7470
 }
set N1b2fe130 [stack 0]
 Dot {
  name Dot2
  xpos 1116
  ypos 7545
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xff
  label "   GRADING WHEEL INSERT   "
  xpos -2614
  ypos 6850
 }
push $Nc94e8e70
 Dot {
  name Dot32
  xpos 2305
  ypos 704
 }
 Reformat {
  inputs 0
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_1
  xpos -3134
  ypos 1943
 }
 StickyNote {
  inputs 0
  name StickyNote5
  tile_color 0xff
  label "   GRADING WHEEL INSERT   "
  xpos -3861
  ypos 7284
 }
 StickyNote {
  inputs 0
  name StickyNote6
  tile_color 0x101010ff
  label "REFERENCE 2th"
  note_font_size 19.25
  xpos -290
  ypos 2530
 }
push $N175c1600
push $N11bed780
 Switch {
  inputs 2
  which {{"!\[exists parent.input4]"}}
  name Switch18_to_merge_with_alpha_1
  xpos -529
  ypos -516
 }
push $N13efc410
push $N275f86a0
 Switch {
  inputs 2
  which {{parent.offplate}}
  name Switch_to_nothing_1
  xpos -249
  ypos 2496
 }
push $N8def0dd0
 Dot {
  name Dot192
  xpos 138
  ypos 2787
 }
set N683249b0 [stack 0]
 Reformat {
  type scale
  scale 0.5
  filter Impulse
  pbb true
  name Reformat_final_Scale_1adfadsf2
  xpos -33
  ypos 2784
 }
 Dot {
  name Dot193
  xpos 1
  ypos 2814
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_14
  xpos -33
  ypos 2851
 }
set N129a2bb0 [stack 0]
 Dot {
  name Dot194
  xpos -139
  ypos 2860
 }
push $N683249b0
 Dot {
  name Dot195
  xpos 138
  ypos 2814
 }
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_19
  xpos 104
  ypos 2849
 }
set N7f59b8b0 [stack 0]
 Dot {
  name Dot196
  xpos 70
  ypos 2858
 }
push $N129a2bb0
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_2
  xpos -33
  ypos 2887
 }
 Dot {
  name Dot197
  xpos 1
  ypos 2937
 }
push $N7f59b8b0
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_1k2
  xpos 104
  ypos 2885
 }
clone $Cd71e7240 {
  inputs 2
  xpos 51
  ypos 2934
  selected false
 }
push $Nfe508670
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_25
  xpos 32
  ypos 3197
 }
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_3
  xpos 32
  ypos 3233
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xff
  label "VectorScope INSERT   "
  xpos -3869
  ypos 7001
 }
push $N9f0b0300
 Dot {
  name Dot115
  xpos -4435
  ypos -1100
 }
 Dot {
  name Dot118
  xpos -4435
  ypos -911
 }
 Dot {
  name Dot154
  xpos -4435
  ypos 8153
 }
push $N1b2fe130
 Dot {
  name Dot201
  xpos -3783
  ypos 7470
 }
set Nf82760f0 [stack 0]
 Dot {
  name Dot202
  xpos -3783
  ypos 7564
 }
push $Nf82760f0
push $N1b2f9560
push $Na71e4930
 Dot {
  name Dot56
  xpos -3926
  ypos -390
 }
 Dot {
  name Dot114
  xpos -3926
  ypos -123
 }
 Dot {
  name Dot139
  xpos -3919
  ypos 5385
 }
set Nca124fd0 [stack 0]
 Dot {
  name Dot145
  xpos -3495
  ypos 5385
 }
 Saturation {
  name Saturation_FOR_PREVIEW_1234
  xpos -3529
  ypos 5454
  disable {{!parent.enablegrading}}
 }
 Colorspace {
  colorspace_out CIE-XYZ
  name Colorspace7
  xpos -3529
  ypos 5491
  disable {{!parent.enablegrading}}
 }
 Grade {
  white {1 {parent.Tint*0.1+0.9} {parent.Temperature*0.5+0.5} 1}
  black_clamp false
  name Grade5_temp_and_tint_12
  xpos -3529
  ypos 5515
  disable {{parent.Colorspace7.disable}}
 }
 Colorspace {
  colorspace_in CIE-XYZ
  name Colorspace8
  xpos -3529
  ypos 5545
  disable {{!parent.enablegrading}}
 }
 Expression {
  temp_name0 Gamma
  temp_expr0 parent.Contrast
  expr0 "r<1&&r>0?r<0.5?pow(r,Gamma)*pow(0.5, 1-Gamma):1-pow(1-r,Gamma)*pow(0.5, 1-Gamma):r"
  expr1 "g<1&&g>0?g<0.5?pow(g,Gamma)*pow(0.5, 1-Gamma):1-pow(1-g,Gamma)*pow(0.5, 1-Gamma):g"
  expr2 "b<1&&b>0?b<0.5?pow(b,Gamma)*pow(0.5, 1-Gamma):1-pow(1-b,Gamma)*pow(0.5, 1-Gamma):b"
  name Expression9
  xpos -3529
  ypos 5569
  disable {{parent.Contrast==1?1:1-parent.enablegrading}}
 }
 Shuffle {
  alpha white
  name Shuffle20
  xpos -3529
  ypos 5593
 }
 Dot {
  name Dot19
  xpos -3495
  ypos 5697
 }
set Nd4c43200 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos -3529
  ypos 5715
  disable {{"!\[exists parent.input1]"}}
 }
 Premult {
  name Premult7
  xpos -3529
  ypos 5768
 }
 Dot {
  name Dot43
  xpos -3495
  ypos 5815
 }
set N7f0656d0 [stack 0]
 Dot {
  name Dot147
  xpos -3495
  ypos 6826
 }
 Dot {
  name Dot3
  xpos -3495
  ypos 7311
 }
push $Nca124fd0
 Dot {
  name Dot27
  xpos -3919
  ypos 5605
 }
set Nbdfc2e80 [stack 0]
 Dot {
  name Dot40
  xpos -3800
  ypos 5605
 }
push $Nd4c43200
 Switch {
  inputs 2
  which {{"\[exists parent.input1]"}}
  name no_grading_if_there_is_Roto_123
  xpos -3834
  ypos 5694
 }
push $Nbdfc2e80
 Switch {
  inputs 2
  which 1
  name Switch_Enable_Grading_with_no_Roto_212
  xpos -3953
  ypos 5694
  disable {{!parent.enablegrading}}
 }
 Dot {
  name Dot148
  xpos -3919
  ypos 6986
 }
set N4691c50 [stack 0]
 Dot {
  name Dot152
  xpos -4007
  ypos 6986
 }
set N4696760 [stack 0]
 Dot {
  name Dot153
  xpos -4007
  ypos 7127
 }
push $N7f0656d0
 Dot {
  name Dot151
  xpos -3007
  ypos 5815
 }
 Premult {
  name Premult2
  xpos -3041
  ypos 5906
 }
 Dot {
  name Dot45
  xpos -3007
  ypos 5930
 }
set Ncb8984b0 [stack 0]
 Dot {
  name Dot132
  xpos -3115
  ypos 5930
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_24
  xpos -3149
  ypos 5956
 }
 Dot {
  name Dot133
  xpos -3115
  ypos 6025
 }
push $Ncb8984b0
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_26
  xpos -3041
  ypos 5959
 }
clone $Cd71e7240 {
  inputs 2
  xpos -3041
  ypos 6022
  selected false
 }
 Dot {
  name Dot134
  xpos -3007
  ypos 6183
 }
set N7c80d4b0 [stack 0]
clone $Cb0f73200 {
  xpos -3041
  ypos 6216
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace9
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -3041
  ypos 6272
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle4
  xpos -3041
  ypos 6320
 }
clone $Cc94e8e70 {
  xpos -3041
  ypos 6394
  selected false
 }
 AdjBBox {
  numpixels {{parent.AdjBBox_Color_Data_1.numpixels}}
  name AdjBBox1
  xpos -3041
  ypos 6418
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $N7c80d4b0
 Dot {
  name Dot135
  xpos -3156
  ypos 6183
 }
 Dot {
  name Dot136
  xpos -3156
  ypos 6451
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap1
  xpos -3041
  ypos 6442
 }
 Premult {
  name Premult10
  xpos -3041
  ypos 6515
  disable true
 }
 Dot {
  name Dot137
  xpos -3007
  ypos 6553
 }
set N118b0da0 [stack 0]
 Dot {
  name Dot138
  xpos -3284
  ypos 6553
 }
 Dilate {
  size 1.5
  name Dilate4
  xpos -3318
  ypos 6590
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle17
  xpos -3318
  ypos 6626
 }
push $N118b0da0
 Merge2 {
  inputs 2
  operation under
  mix 0.215
  name Merge10
  xpos -3041
  ypos 6632
  disable true
 }
 Grade {
  multiply {4 0 0 1}
  multiply_panelDropped true
  name Grade19
  xpos -3041
  ypos 6656
  disable true
 }
 Reformat {
  type scale
  black_outside true
  pbb true
  name Reformat_final_Scale_12
  xpos -3041
  ypos 6833
 }
 set C9e91aaf0 [stack 0]
 Dot {
  name Dot140
  xpos -3007
  ypos 6857
 }
 ColorWheel {
  inputs 0
  format {{{parent.ReformatScope_1.format}}}
  gamma 0.45
  rotate -110.12
  name ColorWheel2
  xpos -2748
  ypos 3123
 }
 Saturation {
  mode Maximum
  name Saturation_colorwheel
  xpos -2748
  ypos 3199
 }
 Mirror2 {
  flip true
  name Mirror2_2
  xpos -2748
  ypos 3223
 }
 Unpremult {
  name Unpremult1
  xpos -2748
  ypos 3247
 }
 Dot {
  name Dot33
  xpos -2714
  ypos 3287
 }
set Nbf9357b0 [stack 0]
 Dilate {
  channels alpha
  size -1.6
  name Dilate8
  xpos -2981
  ypos 3278
 }
 Blur {
  channels alpha
  size 2
  name Blur6
  xpos -2977
  ypos 3314
 }
set N11328c40 [stack 0]
 Invert {
  channels alpha
  name Invert1
  xpos -2977
  ypos 3397
 }
set Nf72efcb0 [stack 0]
 Dot {
  name Dot161
  xpos -2943
  ypos 3704
 }
 Dot {
  name Dot165
  xpos -2943
  ypos 3986
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0 0 0}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_212
  xpos -2362
  ypos 3631
 }
 Constant {
  inputs 0
  channels rgb
  color {0 1 0 0}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_1
  xpos -2255
  ypos 3625
 }
 Constant {
  inputs 0
  color {1 1 0 1}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_4
  xpos -2457
  ypos 3629
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0 1 0}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_5
  xpos -2255
  ypos 3558
 }
 Constant {
  inputs 0
  color {0 0 1 1}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_2
  xpos -2362
  ypos 3565
 }
 Constant {
  inputs 0
  color {0 1 1 1}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_3
  xpos -2456
  ypos 3559
 }
 ContactSheet {
  inputs 6
  width 30
  height 30
  rows 2
  columns 3
  gap -2
  startframe 1
  endframe 1
  name ContactSheet1
  xpos -2373
  ypos 3737
 }
 Multiply {
  value 0.5
  name Multiply5
  xpos -2373
  ypos 3771
 }
 Dot {
  name Dot107
  xpos -2339
  ypos 3815
 }
set Nc9ae3ea0 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace4
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -2263
  ypos 3800
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle12
  xpos -2263
  ypos 3848
 }
push $Nc9ae3ea0
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap6
  xpos -2373
  ypos 3848
 }
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  scale 0.5
  resize distort
  center false
  filter Impulse
  pbb true
  name Reformat4_512_2
  xpos -2373
  ypos 3884
 }
 Dilate {
  size -5
  name Dilate2
  xpos -2373
  ypos 3920
 }
 Multiply {
  value 0
  name Colorwheel_Brightess_1
  xpos -2587
  ypos 3920
 }
 set C9d423510 [stack 0]
 Reformat {
  inputs 0
  format {{{parent.ReformatScope_1.format}}}
  pbb true
  name Reformat_for_wheel_1
  xpos -3170
  ypos 3479
 }
 Dot {
  name Dot13
  xpos -3136
  ypos 3515
 }
set N8d9b7aa0 [stack 0]
 Transform {
  center {512 512}
  shutteroffset centred
  name Transform9
  xpos -3170
  ypos 3563
 }
 Expression {
  expr0 "sin(hypot(x-center.x, y-center.y) / size)"
  name Ringing1
  tile_color 0xffffff
  label "\[value expr3]"
  xpos -3170
  ypos 3587
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {512 512}
  addUserKnob {7 size R 0.1 20}
  size 15.0648
 }
 Clamp {
  maximum 0
  MaxClampTo_enable true
  name Clamp1
  xpos -3170
  ypos 3611
 }
 Dot {
  name Dot14
  xpos -3136
  ypos 3901
 }
push $N8d9b7aa0
 Dot {
  name Dot15
  xpos -3037
  ypos 3515
 }
 Rectangle {
  area {3.819999933 509.9 1020.080017 514}
  name Rectangle3
  xpos -3071
  ypos 3533
 }
 Rectangle {
  area {513.8400269 4 510.922 1020.840027}
  name Rectangle4
  xpos -3071
  ypos 3557
 }
 Transform {
  center {512 512}
  shutteroffset centred
  name Transform10
  xpos -3071
  ypos 3581
 }
 Dot {
  name Dot22
  xpos -3037
  ypos 3605
 }
set Nfce51030 [stack 0]
push $Nbf9357b0
 Dilate {
  channels alpha
  size -0.6
  name Dilate5
  xpos -2748
  ypos 3311
 }
 Blur {
  channels alpha
  size 2
  name Blur8
  xpos -2748
  ypos 3347
 }
push $Nf72efcb0
 ChannelMerge {
  inputs 2
  operation in
  name ChannelMerge1
  xpos -2748
  ypos 3391
 }
 Grade {
  multiply 0.52
  name Grade8
  xpos -2748
  ypos 3460
 }
set Nb3ecbf40 [stack 0]
 Grade {
  inputs 1+1
  channels rgba
  add {0 0 0 0.13}
  add_panelDropped true
  maskChannelMask rgba.red
  name Grade9
  xpos -2748
  ypos 3602
 }
push $Nfce51030
push $Nb3ecbf40
 Dot {
  name Dot69
  xpos -2555
  ypos 3463
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle9
  xpos -2589
  ypos 3481
 }
 Multiply {
  value 0.3
  name Multiply3
  xpos -2589
  ypos 3566
 }
 Grade {
  inputs 1+1
  channels rgba
  add {0.5 0.5 0.5 0.13}
  add_panelDropped true
  maskChannelMask rgba.red
  name Grade12
  xpos -2589
  ypos 3602
 }
 Dot {
  name Dot108
  xpos -2555
  ypos 3669
 }
 Switch {
  inputs 2
  which {{parent.colorless}}
  name Switch_colorless
  xpos -2748
  ypos 3666
 }
clone $C9d423510 {
  xpos -2748
  ypos 3827
  selected false
 }
 Premult {
  name Premult1
  xpos -2748
  ypos 3874
 }
 Grade {
  inputs 1+1
  add {0.016664 0.016664 0.016664 0}
  add_panelDropped true
  maskChannelMask rgba.red
  name Grade14
  xpos -2748
  ypos 3898
  disable true
 }
 Merge2 {
  inputs 2
  bbox A
  name Merge_targets_31
  xpos -2748
  ypos 3926
  disable {{!parent.showtargets}}
 }
 Grade {
  inputs 1+1
  white 4
  multiply 4
  name Grade21
  xpos -2748
  ypos 3983
 }
 Glow2 {
  tint 0.37
  tolerance 0.27
  brightness 0.75
  size 7.5
  name Glow3
  xpos -2748
  ypos 4020
  disable {{!parent.boolean_1}}
 }
 Glow2 {
  tint 0.37
  brightness 0.75
  size 20.5
  name Glow2
  xpos -2748
  ypos 4044
  disable {{!parent.boolean_1}}
 }
 Dot {
  name Dot47
  xpos -2714
  ypos 4088
 }
set N304f8b80 [stack 0]
 Dot {
  name Dot48
  xpos -2824
  ypos 4088
 }
 Reformat {
  type scale
  scale 0.5
  pbb true
  name Reformat4_512_1
  xpos -2858
  ypos 4125
 }
push $N304f8b80
clone $Cd71e7240 {
  inputs 2
  xpos -2748
  ypos 4125
  selected false
 }
 Constant {
  inputs 0
  channels rgb
  color {0 0 0 0}
  format "256 256 0 0 256 256 1 square_256"
  name Constant_to_pick_1
  xpos -1604
  ypos 1816
 }
 Dot {
  name Dot60
  xpos -1570
  ypos 1994
 }
set Nb0549290 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -1604
  ypos 2012
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle8
  xpos -1604
  ypos 2060
 }
clone $Cc94e8e70 {
  xpos -1604
  ypos 2096
  selected false
 }
push $Nb0549290
 Dot {
  name Dot61
  xpos -1796
  ypos 1994
 }
 Dot {
  name Dot62
  xpos -1796
  ypos 2129
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap2
  xpos -1604
  ypos 2120
 }
 Dot {
  name Dot63
  xpos -1570
  ypos 2196
 }
 Dot {
  name Dot167
  xpos -1570
  ypos 2274
 }
set Neb15eff0 [stack 0]
 Dilate {
  size 0.6
  name Dilate18
  xpos -1604
  ypos 2629
 }
push $Neb15eff0
 Dot {
  name Dot166
  xpos -1663
  ypos 2274
 }
 Dilate {
  size 12
  name Dilate10
  xpos -1697
  ypos 2315
 }
set N34deda0 [stack 0]
 EdgeDetectWrapper {
  blursize 3
  name EdgeDetect3
  xpos -1869
  ypos 2315
 }
 Dilate {
  size -3
  name Dilate16
  xpos -1869
  ypos 2357
 }
 Grade {
  channels alpha
  multiply 2.55
  name Grade23
  xpos -1869
  ypos 2404
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle19
  xpos -1869
  ypos 2453
 }
 Grade {
  multiply {4 1 -1 1}
  multiply_panelDropped true
  name Grade27
  xpos -1869
  ypos 2504
 }
 Premult {
  name Premult12
  xpos -1869
  ypos 2573
 }
push $N34deda0
 Grade {
  channels rgba
  multiply {0.5 0.5 0.5 0.002}
  multiply_panelDropped true
  name Grade24
  xpos -1698
  ypos 2465
 }
 Merge2 {
  inputs 2
  name Merge17
  xpos -1698
  ypos 2573
 }
 Merge2 {
  inputs 2
  name Merge18
  xpos -1698
  ypos 2635
 }
 Crop {
  box {0 0 256 256}
  name Crop4
  xpos -1698
  ypos 2684
 }
 Clamp {
  channels rgba
  name Clamp5
  xpos -1698
  ypos 2830
 }
 Dot {
  name Dot64
  xpos -1664
  ypos 2860
 }
set N30cfbb20 [stack 0]
 Dot {
  name Dot65
  xpos -1782
  ypos 2860
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_5
  xpos -1816
  ypos 2883
 }
 Dot {
  name Dot66
  xpos -1782
  ypos 2919
 }
push $N30cfbb20
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_6
  xpos -1698
  ypos 2878
 }
clone $Cd71e7240 {
  inputs 2
  xpos -1698
  ypos 2916
  selected false
 }
 Dot {
  name Dot67
  xpos -1664
  ypos 2973
 }
 Multiply {
  channels rgba
  value {{parent.double}}
  name Multiply_intensity_sampler
  xpos -1326
  ypos 2970
 }
 Dot {
  name Dot68
  xpos -1159
  ypos 2973
 }
 Dot {
  name Dot104
  xpos -693
  ypos 2973
 }
set Nff6fe6f0 [stack 0]
 Dot {
  name Dot131
  xpos -693
  ypos 2997
 }
push $Nff6fe6f0
push $Nedcbf2a0
 Dot {
  name Dot190
  xpos -350
  ypos 2847
 }
 Grade {
  inputs 1+1
  channels rgba
  multiply 11
  add {1 1 1 0}
  add_panelDropped true
  black_clamp false
  name Grade10
  xpos -384
  ypos 2968
  disable {{!parent.activatesampler}}
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -384
  ypos 2994
  disable {{!parent.activatesampler}}
 }
 Dot {
  name Dot171
  xpos -350
  ypos 3037
 }
 Unpremult {
  name Unpremult3
  xpos -384
  ypos 3100
 }
 Gamma {
  value 1.35
  name Gamma_overall
  xpos -384
  ypos 3124
 }
 Multiply {
  value 4
  name Grade_brightness_1
  xpos -384
  ypos 3160
 }
 Premult {
  name Premult9
  xpos -384
  ypos 3196
 }
 Dot {
  name Dot39
  xpos -350
  ypos 3563
 }
set N435f1b0 [stack 0]
 Dot {
  name Dot173
  xpos -463
  ypos 3562
 }
 Dot {
  name Dot174
  xpos -463
  ypos 3987
 }
push $N84904870
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 545
  ypos 3406
 }
 Dot {
  name Dot141
  xpos 370
  ypos 3421
 }
 Dot {
  name Dot31
  xpos 370
  ypos 3507
 }
 Dot {
  name Dot70
  xpos 370
  ypos 3563
 }
set Nb05cf9b0 [stack 0]
 Dot {
  name Dot50
  xpos 370
  ypos 3593
 }
set Nb05d4530 [stack 0]
 Dot {
  name Dot51
  xpos 370
  ypos 3633
 }
set Nb05d90b0 [stack 0]
 Dot {
  name Dot20
  xpos 370
  ypos 3679
 }
set Nff9ffb30 [stack 0]
 Dot {
  name Dot7
  xpos 370
  ypos 3697
 }
 Multiply {
  channels rgba
  value 0.06
  name Multiply_maskopacity
  xpos 336
  ypos 3757
 }
 Grade {
  multiply_panelDropped true
  name Grade20
  xpos 336
  ypos 3781
 }
 Reformat {
  inputs 0
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_8
  xpos 484
  ypos 3620
 }
 Ramp {
  p0 {100 -1}
  p1 {100 934}
  type smooth
  name Ramp1
  xpos 484
  ypos 3656
 }
 Constant {
  inputs 0
  channels rgb
  color {0.9909453392 0.331563741 0.1530252844 2.867353396e-05}
  color_panelDropped true
  format "1024 1024 0 0 1024 1024 1 square_1K"
  name Constant1
  xpos 615
  ypos 3584
 }
 Grade {
  inputs 1+1
  multiply {1.15 0.48 0.32 1}
  multiply_panelDropped true
  invert_mask true
  name Grade22
  xpos 615
  ypos 3656
 }
 Dot {
  name Dot162
  xpos 649
  ypos 3707
 }
set Ndfe62b0 [stack 0]
 Dot {
  name Dot163
  xpos 525
  ypos 3707
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_2
  xpos 491
  ypos 3725
 }
 Dot {
  name Dot164
  xpos 525
  ypos 3766
 }
push $Ndfe62b0
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_4
  xpos 615
  ypos 3725
 }
clone $Cd71e7240 {
  inputs 2
  xpos 615
  ypos 3763
  selected false
 }
 Dot {
  name Dot37
  xpos 649
  ypos 3830
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy8
  xpos 336
  ypos 3821
 }
 Premult {
  name Premult11
  xpos 336
  ypos 3910
 }
push $N435f1b0
 Merge2 {
  inputs 2
  name Merge_Mask_preview4324
  xpos -384
  ypos 3910
  disable {{"!\[exists parent.input2]"}}
 }
 Switch {
  inputs 2
  which {{parent.useaskeylight}}
  name Switch_keylight_method_1
  xpos -384
  ypos 3984
 }
push $Nff9ffb30
 Dilate {
  size -1
  name Dilate1
  xpos 147
  ypos 3670
 }
push $Nb05d90b0
 EdgeDetectWrapper {
  name EdgeDetect1
  xpos 147
  ypos 3624
 }
push $Nb05d4530
push $Nb05cf9b0
push $N435f1b0
 Saturation {
  inputs 1+1
  saturation 0.78
  name Saturation1
  xpos 3
  ypos 3560
 }
 Multiply {
  inputs 1+1
  value {0.294 0.294 0.294 0.24}
  value_panelDropped true
  name Multiply2
  xpos 3
  ypos 3584
 }
 Grade {
  inputs 1+1
  add {1 0 0 0}
  add_panelDropped true
  name Grade18
  xpos 3
  ypos 3630
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge12
  xpos 3
  ypos 3676
  disable {{parent.boolean_3}}
 }
 Dot {
  name Dot142
  xpos 37
  ypos 4102
 }
 Switch {
  inputs 2
  which {{!parent.enablegrading}}
  name Switch_grading_mode
  xpos -384
  ypos 4098
 }
 Dot {
  name Dot155
  xpos -350
  ypos 4204
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge16
  xpos -2748
  ypos 4201
 }
 Reformat {
  type scale
  resize none
  center false
  filter Impulse
  black_outside true
  pbb true
  name Reformat_to_clamp_values
  xpos -2748
  ypos 4266
  disable {{parent.noclampvalues}}
 }
 Dot {
  name Dot96
  xpos -2714
  ypos 4314
 }
set N6ef7cc0 [stack 0]
 Dot {
  name Dot95
  xpos -2550
  ypos 4314
 }
 Dot {
  name Dot94
  xpos -2551
  ypos 4420
 }
 AdjBBox {
  numpixels 5
  name AdjBBox3
  xpos -2585
  ypos 4438
 }
 Dot {
  name Dot99
  xpos -2551
  ypos 4873
 }
push $N11328c40
 Dot {
  name Dot54
  xpos -3251
  ypos 3323
 }
 Dot {
  name Dot55
  xpos -3251
  ypos 4246
 }
 Dot {
  name Dot44
  xpos -3251
  ypos 4326
 }
set N69fe9c0 [stack 0]
 Dot {
  name Dot46
  xpos -3354
  ypos 4326
 }
 Reformat {
  type scale
  scale 0.5
  pbb true
  name Reformat3
  xpos -3388
  ypos 4363
 }
push $N69fe9c0
clone $Cd71e7240 {
  inputs 2
  xpos -3285
  ypos 4363
  selected false
 }
 Dot {
  name Dot26
  xpos -3251
  ypos 4437
 }
set N64f3230 [stack 0]
 Dot {
  name Dot25
  xpos -3251
  ypos 4474
 }
 Dot {
  name Dot97
  xpos -3251
  ypos 4676
 }
 Constant {
  inputs 0
  channels rgb
  format "1024 1024 0 0 1024 1024 1 square_1K"
  name Constant_to_fill_space_23
  xpos -3078
  ypos 4493
 }
 Dot {
  name Dot90
  xpos -3044
  ypos 4565
 }
set N61fb4c0 [stack 0]
 Dot {
  name Dot91
  xpos -3152
  ypos 4565
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_15
  xpos -3186
  ypos 4586
 }
 Dot {
  name Dot92
  xpos -3152
  ypos 4622
 }
push $N61fb4c0
clone $Cd71e7240 {
  inputs 2
  xpos -3078
  ypos 4619
  selected false
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -3078
  ypos 4667
 }
 Premult {
  name Premult6
  xpos -3078
  ypos 4770
 }
push $N6ef7cc0
 Dot {
  name Dot101
  xpos -2931
  ypos 4314
 }
 Dot {
  name Dot102
  xpos -2931
  ypos 4802
 }
 Merge2 {
  inputs 2
  operation under
  name Merge9
  xpos -3078
  ypos 4799
 }
 Dot {
  name Dot100
  xpos -3044
  ypos 4849
 }
push $N6ef7cc0
 Dot {
  name Dot103
  xpos -2714
  ypos 4370
 }
set N54fcd60 [stack 0]
 Dot {
  name Dot93
  xpos -2845
  ypos 4370
 }
push $N64f3230
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge2
  xpos -2879
  ypos 4422
 }
push $N54fcd60
 Grade {
  inputs 1+1
  channels alpha
  add {{parent.opacity}}
  name Grade_Opacity_1
  xpos -2748
  ypos 4428
 }
 Dot {
  name Dot98
  xpos -2709
  ypos 4802
 }
 Switch {
  inputs 2
  which {{parent.opaque}}
  name Switch_opaque_23
  xpos -2743
  ypos 4846
 }
 Switch {
  inputs 2
  which {{parent.darkmode}}
  name Switch_transparency_23
  xpos -2743
  ypos 4870
 }
clone $C9e91aaf0 {
  xpos -2743
  ypos 5070
  selected false
 }
 Dot {
  name Dot34
  xpos -2709
  ypos 5252
 }
 Dot {
  name Dot170
  xpos -2709
  ypos 5883
 }
 Dot {
  name Dot49
  xpos -2709
  ypos 6727
 }
 Merge2 {
  inputs 2
  name Merge11
  xpos -2743
  ypos 6854
  disable {{!parent.enablegrading}}
 }
 Dot {
  name Dot143
  xpos -2709
  ypos 7027
 }
set N7c9ff5b0 [stack 0]
push $N4691c50
 Merge2 {
  inputs 2
  name Merge_with_the_plate
  xpos -3953
  ypos 7023
  disable {{!parent.activate}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy5
  xpos -3953
  ypos 7118
 }
push $N4696760
 Dot {
  name Dot149
  xpos -4070
  ypos 6986
 }
 Dot {
  name Dot150
  xpos -4070
  ypos 7173
 }
 Switch {
  inputs 2
  which {{"\$gui ? 1 : 0"}}
  name Switch_gui_off
  xpos -3953
  ypos 7170
 }
 Merge2 {
  inputs 2
  name Merge14
  xpos -3953
  ypos 7308
  disable {{!parent.enablegrading}}
 }
 ShuffleCopy {
  inputs 2
  red alpha
  out alpha
  name ShuffleCopy_output
  xpos -3953
  ypos 7461
  disable {{"!\[exists parent.input2]"}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos -3953
  ypos 7555
  disable {{!parent.boolean_4}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy6
  xpos -3953
  ypos 8144
  disable {{!parent.keepmyalpha}}
 }
 Dot {
  name Dot200
  xpos -3919
  ypos 8455
 }
set N7d455610 [stack 0]
push $N7d455610
 Dot {
  name Dot38
  xpos -3776
  ypos 8455
 }
push $N7c9ff5b0
 Dot {
  name Dot184
  xpos -2709
  ypos 8544
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -3810
  ypos 8535
  disable {{!parent.boolean_4}}
 }
 Switch {
  inputs 2
  which {{-(pulldown)+1}}
  name Switch_ScopemodeOnly_123
  xpos -3953
  ypos 8541
 }
 Output {
  name Output1
  xpos -3953
  ypos 8710
 }
push $N77e5930
push $N1a1261e0
 Viewer {
  inputs 2
  frame_range 1041-1100
  overscan 300
  center_fstop 0
  viewerProcess Film
  far 100000
  name Viewer1
  xpos 871
  ypos 2834
 }
push $N116fcc60
 NoOp {
  name NoOp2
  xpos 3633
  ypos -1528
  addUserKnob {20 User}
  addUserKnob {6 boolean l DetectColorOnly +STARTLINE}
  boolean {{"\[string first \".r\" \[channels \[input this 0]]]>-1"}}
 }
push $N1a1261e0
 NoOp {
  name NoOp1
  xpos 2832
  ypos -1528
  addUserKnob {20 User}
  addUserKnob {6 boolean l DetectColorOnly +STARTLINE}
  boolean {{"\[string first \".r\" \[channels \[input this 0]]]>-1"}}
 }
push $N5abf1de0
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode4
  xpos 2938
  ypos 1391
 }
push $Nfe1dcd10
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode1
  xpos 3776
  ypos 1602
 }
push $N190f96d0
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode3
  xpos -776
  ypos 1142
 }
end_group
set N178fff00 [stack 0]
Constant {
 inputs 0
 channels rgb
 name Constant17
 selected true
 xpos -826
 ypos 3392
}
Merge2 {
 inputs 2
 name Merge2
 selected true
 xpos -826
 ypos 3479
}
push $cut_paste_input
Grade {
 multiply 0.05
 name Grade11
 selected true
 xpos -26
 ypos 3404
 disable true
}
Group {
 name Group2
 knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\n\nif(k.name() == 'effectOnly'):\n    n\['repeatAlpha'].setEnabled(n\['effectOnly'].value())\n\nif(k.name() == 'pingpong'):\n    n\['displayPong'].setEnabled(n\['pingpong'].value())\n"
 selected true
 xpos -51
 ypos 3493
 disable true
 addUserKnob {20 PixelRepeatTab l PixelRepeat}
 addUserKnob {7 rotate t "rotate line direction" R -180 180}
 addUserKnob {7 threshold t "value to start stretching at"}
 threshold 0.001
 addUserKnob {3 length t "length of stretching lines (0 is unlimited)"}
 addUserKnob {3 repeats t "pixel count to repeat\n\nfor best quality repeating values, use a single matte channel and disable override"}
 repeats 1
 addUserKnob {6 multipleStreaks l "multiple streaks" t "allow multiple streaks on the same line" -STARTLINE}
 multipleStreaks true
 addUserKnob {6 pingpong t "go back and forth over repeating pixels" -STARTLINE}
 pingpong true
 addUserKnob {6 displayPong l "output pingpong matte" t "show a matte of the repeating values" -STARTLINE}
 addUserKnob {3 repeatsOffset l "repeats offset" t "offset the repeated pixels"}
 addUserKnob {26 empty0 l "" +STARTLINE T " "}
 addUserKnob {6 useMatte l "use matte input instead of img" t "use matte input instead of img input for threshold" +STARTLINE}
 addUserKnob {41 from0 l "use single matte channel" t "use single channel for matte, instead of rgba separately" T Copy2.from0}
 addUserKnob {26 empty1 l "" +STARTLINE T " "}
 addUserKnob {6 override t "restart streak if the current pixel is brighter" +STARTLINE}
 override true
 addUserKnob {6 effectOnly l "effect only" t "do not show original plate underneath" +STARTLINE}
 effectOnly true
 addUserKnob {6 repeatAlpha l "also repeat alpha" t "if disabled, the alpha will correspond with where the rgb has been repeated, making the resulting image premultiplied" -STARTLINE}
 addUserKnob {26 empty2 l "" +STARTLINE T " "}
 addUserKnob {4 rotateFilter l filter t "rotation filter" M {Impulse Cubic Keys Simon Riffman Mitchell Parzen Notch Lanczos4 Lanczos6 Sinc4}}
 rotateFilter Cubic
 addUserKnob {26 ""}
 addUserKnob {26 Me l "" +STARTLINE T "Max van Leeuwen"}
 addUserKnob {26 Version l "" +STARTLINE T "PixelRepeat 1.0"}
 addUserKnob {26 Website l "" +STARTLINE T "<a href=\"https://www.maxvanleeuwen.com/pixelrepeat\"><font color=\"#b2b2b2\">maxvanleeuwen.com/pixelrepeat</font></a>"}
 addUserKnob {20 GPUtab l GPU}
 addUserKnob {6 useGPU l "Use gpu if available" +STARTLINE}
 useGPU true
 addUserKnob {6 vectorizeCPU l "Vectorize on CPU" +STARTLINE}
 vectorizeCPU true
 addUserKnob {7 PercentageGPU l "Percentage of GPU memory to use" R 0 100}
 PercentageGPU 50
 addUserKnob {7 percentageImageHeight l "Percentage of image height per tile" R 0 100}
 percentageImageHeight 10
}
 Constant {
  inputs 0
  color {0 0 0 0}
  name Constant1
  xpos 189
  ypos -1625
 }
 Dot {
  name Dot13
  note_font_size 30
  xpos 223
  ypos -1496
 }
 Input {
  inputs 0
  name img
  xpos 362
  ypos -1814
 }
 Switch {
  inputs 2
  which {{bbox.w<2}}
  name Switch_onNoInp
  xpos 362
  ypos -1500
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 362
  ypos -1275
 }
 Crop {
  box {0 0 {width} {height}}
  crop false
  name Crop3
  xpos 362
  ypos -1249
 }
 Dot {
  name Dot6
  note_font_size 30
  xpos 396
  ypos -1057
 }
set N477f8390 [stack 0]
 Dot {
  name Dot8
  note_font_size 30
  xpos 396
  ypos -824
 }
set N1d7ccac0 [stack 0]
 Dot {
  name Dot1
  note_font_size 30
  xpos 396
  ypos -456
 }
set N1c38f9d0 [stack 0]
 Dot {
  name Dot2
  note_font_size 30
  xpos 147
  ypos -456
 }
 Dot {
  name Dot4
  note_font_size 30
  xpos 147
  ypos 1185
 }
push $N1d7ccac0
 Input {
  inputs 0
  name matte
  xpos 962
  ypos -1809
  number 1
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos 962
  ypos -1273
 }
 Crop {
  box {0 0 {parent.Crop3.box.r} {parent.Crop3.box.t}}
  crop false
  name Crop4
  xpos 962
  ypos -1247
 }
push $N477f8390
 Switch {
  inputs 2
  which {{parent.useMatte}}
  name Switch1
  xpos 962
  ypos -1061
 }
 Dot {
  name Dot11
  note_font_size 30
  xpos 996
  ypos -824
 }
set N1cadf140 [stack 0]
 Switch {
  inputs 2
  which {{!parent.useMatte}}
  name Switch2
  xpos 659
  ypos -828
 }
push 0
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.alpha
  name Copy2
  xpos 659
  ypos -752
 }
 Dot {
  name Dot10
  note_font_size 30
  xpos 693
  ypos -665
 }
push $N1cadf140
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 962
  ypos -676
  disable {{!parent.from0}}
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  label "\[value in]"
  xpos 962
  ypos -480
  disable {{!parent.from0}}
 }
 Transform {
  rotate {{parent.Transform1.rotate}}
  center {{parent.Transform1.center.x} {parent.Transform1.center.y}}
  shutteroffset centred
  name Transform2
  xpos 962
  ypos -294
 }
 Reformat {
  type "to box"
  box_width {{parent.Reformat1.box_width}}
  box_height {{parent.Reformat1.box_height}}
  box_fixed true
  resize none
  pbb true
  name Reformat2
  xpos 962
  ypos -268
 }
 Crop {
  box {0 0 {parent.Crop1.box.r} {parent.Crop1.box.t}}
  crop false
  name Crop2
  xpos 962
  ypos -242
 }
 Dot {
  name Dot9
  note_font_size 30
  xpos 996
  ypos -19
 }
push $N1c38f9d0
 Transform {
  rotate {{"parent.rotate - 90"}}
  center {{width/2} {height/2}}
  shutteroffset centred
  name Transform1
  xpos 362
  ypos -293
 }
 Reformat {
  type "to box"
  box_width {{bbox.w}}
  box_height {{bbox.h}}
  box_fixed true
  resize none
  pbb true
  name Reformat1
  xpos 362
  ypos -267
 }
 Crop {
  box {0 0 {width} {height}}
  crop false
  name Crop1
  xpos 362
  ypos -241
 }
 BlinkScript {
  inputs 2
  recompileCount 199
  ProgramGroup 1
  KernelDescription "2 \"PixelRepeat\" iterate componentWise 5f7c03e44b48d39f3ba0d8fcc0f5a85ef542617dc98a6fadb5a235e79c38ed0b 3 \"src\" Read Random \"matte\" Read Random \"dst\" Write Random 8 \"stretchLength\" Int 1 AAAAAA== \"multipleStreaks\" Bool 1 AQ== \"repeatCount\" Int 1 AAAAAA== \"repeatOffset\" Int 1 AAAAAA== \"pingPong\" Bool 1 AA== \"displayPong\" Bool 1 AA== \"thresholdValue\" Float 1 zcxMPw== \"override\" Bool 1 AA== 8 \"stretchLength\" 1 1 \"multipleStreaks\" 1 1 \"repeatCount\" 1 1 \"repeatOffset\" 1 1 \"pingPong\" 1 1 \"displayPong\" 1 1 \"thresholdValue\" 1 1 \"override\" 1 1 0"
  kernelSource "// Max van leeuwen\n// maxvanleeuwen.com/pixelrepeat\n//\n// Repeats the pixels starting where matte goes over threshold. Creates stretchy lines, or mirrors/warps the image.\n\n\n\n\nkernel PixelRepeat : ImageComputationKernel<eComponentWise>\{\n\n\tImage<eRead, eAccessRandom, eEdgeClamped> src;\n\tImage<eRead, eAccessRandom, eEdgeClamped> matte;\n\tImage<eWrite, eAccessRandom> dst;\n\n\nparam:\n\n\tint stretchLength;\n\tbool multipleStreaks;\n\tint repeatCount;\n\tint repeatOffset;\n\tbool pingPong;\n\tbool displayPong;\n\tfloat thresholdValue;\n\tbool override;\n\n\nlocal:\n\n\tvoid define() \{\n\n\t\t// how long the streaks can get (0 means unlimited stretching)\n\t\tdefineParam(stretchLength, \"stretchLength\", 0);\n\n\t\t// allow multiple streaks\n\t\tdefineParam(multipleStreaks, \"multipleStreaks\", true);\n\n\t\t// amount of pixels to repeat\n\t\tdefineParam(repeatCount, \"repeatCount\", 0);\n\n\t\t// offset for repeated pixels\n\t\tdefineParam(repeatOffset, \"repeatOffset\", 0);\n\n\t\t// go back-and-forth through cycle index instead of repeating front to end\n\t\tdefineParam(pingPong, \"pingPong\", false);\n\n\t\t// show pingpong matte\n\t\tdefineParam(displayPong, \"displayPong\", false);\n\n\t\t// when to start stretching\n\t\tdefineParam(thresholdValue, \"thresholdValue\", 0.8f);\n\n\t\t// whether the value can update mid-streak if it is higher than current\n\t\tdefineParam(override, \"override\", false);\n\t\}\n\n\n\n\n\t// run over each pixel\n\tvoid process(int3 pos) \{\n\n\t\t// empty bg val\n\t\tfloat emptyVal = -1.0f;\n\n\t\t// placeholder for out value\n\t\tfloat outVal = -1.0f;\n\n\t\t// get img width\n\t\tint srcWidth = src.bounds.x2;\n\n\t\t// only once per row\n\t\tif (pos.x == 0)\{\n\n\t\t\t// start of stretch index\n\t\t\tint stretchStart = -1;\n\n\t\t\t// placeholder value at start of stretch\n\t\t\tfloat startStretchValue = -1.0f;\n\n\t\t\t// current stretching counter\n\t\t\tint currStretchLength = -1;\n\n\t\t\t// cycle index\n\t\t\tint currCyclePos = 0;\n\n\t\t\t// check if forwards or backwards\n\t\t\tbool pong = false;\n\n\n\t\t\t// go through each pixel in row\n\t\t\tfor(int pixel = 0; pixel < srcWidth; pixel++)\{\n\n\t\t\t\t// get current img value\n\t\t\t\tfloat currVal = src(pixel, pos.y);\n\n\n\t\t\t\t// if stretching has not started yet\n\t\t\t\tif(currStretchLength == -1)\{\n\n\t\t\t\t\t// value to compare from matte\n\t\t\t\t\tfloat foundValue = matte(pixel, pos.y);\n\n\t\t\t\t\t// if matte is greater than thresholdValue, start stretch\n\t\t\t\t\tif(foundValue >= thresholdValue)\{\n\t\t\t\t\t\n\t\t\t\t\t\t// index of first stretched pixel\n\t\t\t\t\t\tstretchStart = pixel;\n\n\t\t\t\t\t\t// start stretch\n\t\t\t\t\t\tcurrStretchLength = 0;\n\t\t\t\t\t\t// set out to current pixel\n\t\t\t\t\t\toutVal = (pingPong && displayPong) ? 0 : currVal;\n\n\t\t\t\t\t\t// store this highscore value\n\t\t\t\t\t\tstartStretchValue = foundValue;\n\n\t\t\t\t\t// if not, this is empty space\n\t\t\t\t\t\}else\{\n\n\t\t\t\t\t\toutVal = emptyVal;\n\t\t\t\t\t\}\n\n\n\t\t\t\t// if stretching has started and is still going\n\t\t\t\t\}else if(currStretchLength >= 0 && (currStretchLength < stretchLength || stretchLength <= 0) )\{\n\n\t\t\t\t\t// get current stretch position without non-stretch part\n\t\t\t\t\tint currStretchPos = pixel - stretchStart - 1;\n\n\t\t\t\t\t// set index in cycle\n\t\t\t\t\tcurrCyclePos = (currStretchPos + repeatOffset) % abs(repeatCount);\n\n\t\t\t\t\tif(pingPong)\{\n\n\t\t\t\t\t\tpong = int(currStretchPos/repeatCount) % 2 ? true : false;\n\t\t\t\t\t\}\n\n\t\t\t\t\t// make index including (if enabled) pingpong\n\t\t\t\t\tint cyclePingpongIndex = pong ? (abs(repeatCount) - 1) - currCyclePos : currCyclePos;\n\n\t\t\t\t\t// override active\n\t\t\t\t\tbool overridden = false;\n\n\n\t\t\t\t\t// check if override\n\t\t\t\t\tif(override)\{\n\n\t\t\t\t\t\tif(currVal > startStretchValue)\{\n\n\t\t\t\t\t\t\toverridden = true;\n\n\t\t\t\t\t\t\t// first in cycle\n\t\t\t\t\t\t\tcurrCyclePos = 0;\n\n\t\t\t\t\t\t\t// reset pingpong\n\t\t\t\t\t\t\tpong = false;\n\n\t\t\t\t\t\t\t// first index of stretching\n\t\t\t\t\t\t\tcurrStretchLength = 0;\n\n\t\t\t\t\t\t\t// index of first stretched pixel\n\t\t\t\t\t\t\tstretchStart = pixel;\n\n\t\t\t\t\t\t\t// set out to current pixel\n\t\t\t\t\t\t\toutVal = currVal;\n\n\t\t\t\t\t\t\t// store this highscore value\n\t\t\t\t\t\t\tstartStretchValue = currVal;\n\t\t\t\t\t\t\}\n\t\t\t\t\t\}\n\n\n\t\t\t\t\t// increment index\n\t\t\t\t\tcurrStretchLength++;\n\n\t\t\t\t\tif(!overridden)\{\n\n\t\t\t\t\t\tif(pingPong && displayPong)\{\n\n\t\t\t\t\t\t\toutVal = pong;\n\t\t\t\t\t\t\}else\{\n\n\t\t\t\t\t\t\toutVal = src(stretchStart + (cyclePingpongIndex * (repeatCount < 0 ? -1 : 1)), pos.y);\n\t\t\t\t\t\t\}\n\t\t\t\t\t\}\n\n\n\t\t\t\t// if stretching has started and is over limit, end\n\t\t\t\t\}else if(currStretchLength >= stretchLength && stretchLength > 0)\{\n\n\t\t\t\t\t// start of stretch index\n\t\t\t\t\tstretchStart = -1;\n\n\t\t\t\t\t// placeholder value at start of stretch\n\t\t\t\t\tstartStretchValue = -1;\n\n\t\t\t\t\t// current stretching index back to start, or even further if should be ignored after this\n\t\t\t\t\tcurrStretchLength = multipleStreaks ? -1 : -2;\n\n\t\t\t\t\t// cycle index\n\t\t\t\t\tcurrCyclePos = 0;\n\n\t\t\t\t\t// show current pixel value\n\t\t\t\t\toutVal = emptyVal;\n\n\t\t\t\t\}\n\n\n\t\t\t\t// write\n\t\t\t\tdst(pixel, pos.y) = outVal;\n\t\t\t\}\n\t\t\}\n\t\}\n\};"
  useGPUIfAvailable {{parent.useGPU}}
  vectorize {{parent.vectorizeCPU}}
  rebuild ""
  PixelRepeat_stretchLength {{parent.length}}
  PixelRepeat_multipleStreaks {{parent.multipleStreaks}}
  PixelRepeat_repeatCount {{parent.repeats}}
  PixelRepeat_repeatOffset {{parent.repeatsOffset}}
  PixelRepeat_pingPong {{parent.pingpong}}
  PixelRepeat_displayPong {{parent.displayPong}}
  PixelRepeat_thresholdValue {{parent.threshold}}
  PixelRepeat_override {{parent.override}}
  rebuild_finalise ""
  maxGPUMemory {{parent.PercentageGPU}}
  maxTileLines {{parent.percentageImageHeight}}
  name BlinkScript_PixelRepeat
  xpos 362
  ypos -30
 }
 Dot {
  name Dot5
  note_font_size 30
  xpos 396
  ypos 400
 }
set N1c30d8a0 [stack 0]
 Dot {
  name Dot3
  note_font_size 30
  xpos 625
  ypos 400
 }
 Expression {
  expr0 "r == -1 ? 0 : r"
  expr1 "g == -1 ? 0 : g"
  expr2 "b == -1 ? 0 : b"
  expr3 "a == -1 ? 0 : a"
  name Expressions_NegValues_remove
  xpos 591
  ypos 493
 }
 Dot {
  name Dot7
  note_font_size 30
  xpos 625
  ypos 615
 }
push $N1c30d8a0
 Expression {
  expr0 "r == -1 ? 0 : r"
  expr1 "g == -1 ? 0 : g"
  expr2 "b == -1 ? 0 : b"
  expr3 "!(r == -1 || g == -1 || b == -1)"
  name Expressions_NegValues_to_Alpha
  xpos 362
  ypos 494
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 362
  ypos 604
  disable {{"!parent.effectOnly || !parent.repeatAlpha"}}
 }
 Transform {
  rotate {{-Transform1.rotate}}
  center {{width/2} {height/2}}
  shutteroffset centred
  name Transform3
  xpos 362
  ypos 935
 }
 Reformat {
  type "to box"
  box_width {{img.width}}
  box_height {{img.height}}
  box_fixed true
  resize none
  name Reformat3
  xpos 362
  ypos 961
 }
 Transform {
  filter {{parent.rotateFilter}}
  black_outside false
  shutter 0
  shutteroffset centred
  name Transform_SetFilterConcatinated1
  xpos 362
  ypos 1021
 }
 Crop {
  box {0 0 {width} {height}}
  crop false
  name Crop5
  xpos 362
  ypos 1047
 }
 Merge2 {
  inputs 2
  operation under
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge1
  xpos 362
  ypos 1181
  disable {{parent.effectOnly}}
 }
 Output {
  name Output1
  xpos 362
  ypos 1539
 }
end_group
push $N7710aa80
FilterErode {
 size 133
 filter gaussian
 name FilterErode2
 selected true
 xpos -309
 ypos 3691
}
Grade {
 multiply 2.25
 gamma 0.41
 name Grade10
 selected true
 xpos -309
 ypos 3727
 disable true
}
push $N7710aa80
Reformat {
 inputs 0
 format "512 512 0 0 512 512 1 square_512"
 pbb true
 name Reformat1
 selected true
 xpos -582
 ypos 3549
}
Noise {
 center {1112 774}
 name Noise12
 selected true
 xpos -582
 ypos 3585
}
push $N7710aa80
push $N178fff00
DirBlurWrapper {
 inputs 1+1
 BlurType radial
 BlurCenter {252 248}
 BlurLength 42
 target {252 250}
 name DirBlurWrapper1
 selected true
 xpos -433
 ypos 3458
}
Keyer {
 operation "luminance key"
 range {0.07609988109 0.1549824944 1 1}
 name Keyer3
 selected true
 xpos -433
 ypos 3526
}
Grade {
 inputs 1+1
 name Grade9
 selected true
 xpos -433
 ypos 3585
 disable true
}
set N46de1660 [stack 0]
Group {
 inputs 2
 name Group1
 knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\n\nif(k.name() == 'effectOnly'):\n    n\['repeatAlpha'].setEnabled(n\['effectOnly'].value())\n\nif(k.name() == 'pingpong'):\n    n\['displayPong'].setEnabled(n\['pingpong'].value())\n"
 selected true
 xpos -433
 ypos 3649
 addUserKnob {20 PixelRepeatTab l PixelRepeat}
 addUserKnob {7 rotate t "rotate line direction" R -180 180}
 addUserKnob {7 threshold t "value to start stretching at"}
 threshold 0.01
 addUserKnob {3 length t "length of stretching lines (0 is unlimited)"}
 addUserKnob {3 repeats t "pixel count to repeat\n\nfor best quality repeating values, use a single matte channel and disable override"}
 repeats 1
 addUserKnob {6 multipleStreaks l "multiple streaks" t "allow multiple streaks on the same line" -STARTLINE}
 multipleStreaks true
 addUserKnob {6 pingpong t "go back and forth over repeating pixels" -STARTLINE}
 pingpong true
 addUserKnob {6 displayPong l "output pingpong matte" t "show a matte of the repeating values" -STARTLINE}
 addUserKnob {3 repeatsOffset l "repeats offset" t "offset the repeated pixels"}
 addUserKnob {26 empty0 l "" +STARTLINE T " "}
 addUserKnob {6 useMatte l "use matte input instead of img" t "use matte input instead of img input for threshold" +STARTLINE}
 addUserKnob {41 from0 l "use single matte channel" t "use single channel for matte, instead of rgba separately" T Copy2.from0}
 addUserKnob {26 empty1 l "" +STARTLINE T " "}
 addUserKnob {6 override t "restart streak if the current pixel is brighter" +STARTLINE}
 override true
 addUserKnob {6 effectOnly l "effect only" t "do not show original plate underneath" +STARTLINE}
 effectOnly true
 addUserKnob {6 repeatAlpha l "also repeat alpha" t "if disabled, the alpha will correspond with where the rgb has been repeated, making the resulting image premultiplied" -STARTLINE}
 addUserKnob {26 empty2 l "" +STARTLINE T " "}
 addUserKnob {4 rotateFilter l filter t "rotation filter" M {Impulse Cubic Keys Simon Riffman Mitchell Parzen Notch Lanczos4 Lanczos6 Sinc4}}
 rotateFilter Cubic
 addUserKnob {26 ""}
 addUserKnob {26 Me l "" +STARTLINE T "Max van Leeuwen"}
 addUserKnob {26 Version l "" +STARTLINE T "PixelRepeat 1.0"}
 addUserKnob {26 Website l "" +STARTLINE T "<a href=\"https://www.maxvanleeuwen.com/pixelrepeat\"><font color=\"#b2b2b2\">maxvanleeuwen.com/pixelrepeat</font></a>"}
 addUserKnob {20 GPUtab l GPU}
 addUserKnob {6 useGPU l "Use gpu if available" +STARTLINE}
 useGPU true
 addUserKnob {6 vectorizeCPU l "Vectorize on CPU" +STARTLINE}
 vectorizeCPU true
 addUserKnob {7 PercentageGPU l "Percentage of GPU memory to use" R 0 100}
 PercentageGPU 50
 addUserKnob {7 percentageImageHeight l "Percentage of image height per tile" R 0 100}
 percentageImageHeight 10
}
 Constant {
  inputs 0
  color {0 0 0 0}
  name Constant1
  xpos 189
  ypos -1625
 }
 Dot {
  name Dot13
  note_font_size 30
  xpos 223
  ypos -1496
 }
 Input {
  inputs 0
  name img
  xpos 362
  ypos -1814
 }
 Switch {
  inputs 2
  which {{bbox.w<2}}
  name Switch_onNoInp
  xpos 362
  ypos -1500
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 362
  ypos -1275
 }
 Crop {
  box {0 0 {width} {height}}
  crop false
  name Crop3
  xpos 362
  ypos -1249
 }
 Dot {
  name Dot6
  note_font_size 30
  xpos 396
  ypos -1057
 }
set N872ce0d0 [stack 0]
 Dot {
  name Dot8
  note_font_size 30
  xpos 396
  ypos -824
 }
set Nc844e40 [stack 0]
 Dot {
  name Dot1
  note_font_size 30
  xpos 396
  ypos -456
 }
set N9d547330 [stack 0]
 Dot {
  name Dot2
  note_font_size 30
  xpos 147
  ypos -456
 }
 Dot {
  name Dot4
  note_font_size 30
  xpos 147
  ypos 1185
 }
push $Nc844e40
 Input {
  inputs 0
  name matte
  xpos 962
  ypos -1809
  number 1
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos 962
  ypos -1273
 }
 Crop {
  box {0 0 {parent.Crop3.box.r} {parent.Crop3.box.t}}
  crop false
  name Crop4
  xpos 962
  ypos -1247
 }
push $N872ce0d0
 Switch {
  inputs 2
  which {{parent.useMatte}}
  name Switch1
  xpos 962
  ypos -1061
 }
 Dot {
  name Dot11
  note_font_size 30
  xpos 996
  ypos -824
 }
set N2e79dfb0 [stack 0]
 Switch {
  inputs 2
  which {{!parent.useMatte}}
  name Switch2
  xpos 659
  ypos -828
 }
push 0
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.alpha
  name Copy2
  xpos 659
  ypos -752
 }
 Dot {
  name Dot10
  note_font_size 30
  xpos 693
  ypos -665
 }
push $N2e79dfb0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos 962
  ypos -676
  disable {{!parent.from0}}
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  label "\[value in]"
  xpos 962
  ypos -480
  disable {{!parent.from0}}
 }
 Transform {
  rotate {{parent.Transform1.rotate}}
  center {{parent.Transform1.center.x} {parent.Transform1.center.y}}
  shutteroffset centred
  name Transform2
  xpos 962
  ypos -294
 }
 Reformat {
  type "to box"
  box_width {{parent.Reformat1.box_width}}
  box_height {{parent.Reformat1.box_height}}
  box_fixed true
  resize none
  pbb true
  name Reformat2
  xpos 962
  ypos -268
 }
 Crop {
  box {0 0 {parent.Crop1.box.r} {parent.Crop1.box.t}}
  crop false
  name Crop2
  xpos 962
  ypos -242
 }
 Dot {
  name Dot9
  note_font_size 30
  xpos 996
  ypos -19
 }
push $N9d547330
 Transform {
  rotate {{"parent.rotate - 90"}}
  center {{width/2} {height/2}}
  shutteroffset centred
  name Transform1
  xpos 362
  ypos -293
 }
 Reformat {
  type "to box"
  box_width {{bbox.w}}
  box_height {{bbox.h}}
  box_fixed true
  resize none
  pbb true
  name Reformat1
  xpos 362
  ypos -267
 }
 Crop {
  box {0 0 {width} {height}}
  crop false
  name Crop1
  xpos 362
  ypos -241
 }
 BlinkScript {
  inputs 2
  recompileCount 199
  ProgramGroup 1
  KernelDescription "2 \"PixelRepeat\" iterate componentWise 5f7c03e44b48d39f3ba0d8fcc0f5a85ef542617dc98a6fadb5a235e79c38ed0b 3 \"src\" Read Random \"matte\" Read Random \"dst\" Write Random 8 \"stretchLength\" Int 1 AAAAAA== \"multipleStreaks\" Bool 1 AQ== \"repeatCount\" Int 1 AAAAAA== \"repeatOffset\" Int 1 AAAAAA== \"pingPong\" Bool 1 AA== \"displayPong\" Bool 1 AA== \"thresholdValue\" Float 1 zcxMPw== \"override\" Bool 1 AA== 8 \"stretchLength\" 1 1 \"multipleStreaks\" 1 1 \"repeatCount\" 1 1 \"repeatOffset\" 1 1 \"pingPong\" 1 1 \"displayPong\" 1 1 \"thresholdValue\" 1 1 \"override\" 1 1 0"
  kernelSource "// Max van leeuwen\n// maxvanleeuwen.com/pixelrepeat\n//\n// Repeats the pixels starting where matte goes over threshold. Creates stretchy lines, or mirrors/warps the image.\n\n\n\n\nkernel PixelRepeat : ImageComputationKernel<eComponentWise>\{\n\n\tImage<eRead, eAccessRandom, eEdgeClamped> src;\n\tImage<eRead, eAccessRandom, eEdgeClamped> matte;\n\tImage<eWrite, eAccessRandom> dst;\n\n\nparam:\n\n\tint stretchLength;\n\tbool multipleStreaks;\n\tint repeatCount;\n\tint repeatOffset;\n\tbool pingPong;\n\tbool displayPong;\n\tfloat thresholdValue;\n\tbool override;\n\n\nlocal:\n\n\tvoid define() \{\n\n\t\t// how long the streaks can get (0 means unlimited stretching)\n\t\tdefineParam(stretchLength, \"stretchLength\", 0);\n\n\t\t// allow multiple streaks\n\t\tdefineParam(multipleStreaks, \"multipleStreaks\", true);\n\n\t\t// amount of pixels to repeat\n\t\tdefineParam(repeatCount, \"repeatCount\", 0);\n\n\t\t// offset for repeated pixels\n\t\tdefineParam(repeatOffset, \"repeatOffset\", 0);\n\n\t\t// go back-and-forth through cycle index instead of repeating front to end\n\t\tdefineParam(pingPong, \"pingPong\", false);\n\n\t\t// show pingpong matte\n\t\tdefineParam(displayPong, \"displayPong\", false);\n\n\t\t// when to start stretching\n\t\tdefineParam(thresholdValue, \"thresholdValue\", 0.8f);\n\n\t\t// whether the value can update mid-streak if it is higher than current\n\t\tdefineParam(override, \"override\", false);\n\t\}\n\n\n\n\n\t// run over each pixel\n\tvoid process(int3 pos) \{\n\n\t\t// empty bg val\n\t\tfloat emptyVal = -1.0f;\n\n\t\t// placeholder for out value\n\t\tfloat outVal = -1.0f;\n\n\t\t// get img width\n\t\tint srcWidth = src.bounds.x2;\n\n\t\t// only once per row\n\t\tif (pos.x == 0)\{\n\n\t\t\t// start of stretch index\n\t\t\tint stretchStart = -1;\n\n\t\t\t// placeholder value at start of stretch\n\t\t\tfloat startStretchValue = -1.0f;\n\n\t\t\t// current stretching counter\n\t\t\tint currStretchLength = -1;\n\n\t\t\t// cycle index\n\t\t\tint currCyclePos = 0;\n\n\t\t\t// check if forwards or backwards\n\t\t\tbool pong = false;\n\n\n\t\t\t// go through each pixel in row\n\t\t\tfor(int pixel = 0; pixel < srcWidth; pixel++)\{\n\n\t\t\t\t// get current img value\n\t\t\t\tfloat currVal = src(pixel, pos.y);\n\n\n\t\t\t\t// if stretching has not started yet\n\t\t\t\tif(currStretchLength == -1)\{\n\n\t\t\t\t\t// value to compare from matte\n\t\t\t\t\tfloat foundValue = matte(pixel, pos.y);\n\n\t\t\t\t\t// if matte is greater than thresholdValue, start stretch\n\t\t\t\t\tif(foundValue >= thresholdValue)\{\n\t\t\t\t\t\n\t\t\t\t\t\t// index of first stretched pixel\n\t\t\t\t\t\tstretchStart = pixel;\n\n\t\t\t\t\t\t// start stretch\n\t\t\t\t\t\tcurrStretchLength = 0;\n\t\t\t\t\t\t// set out to current pixel\n\t\t\t\t\t\toutVal = (pingPong && displayPong) ? 0 : currVal;\n\n\t\t\t\t\t\t// store this highscore value\n\t\t\t\t\t\tstartStretchValue = foundValue;\n\n\t\t\t\t\t// if not, this is empty space\n\t\t\t\t\t\}else\{\n\n\t\t\t\t\t\toutVal = emptyVal;\n\t\t\t\t\t\}\n\n\n\t\t\t\t// if stretching has started and is still going\n\t\t\t\t\}else if(currStretchLength >= 0 && (currStretchLength < stretchLength || stretchLength <= 0) )\{\n\n\t\t\t\t\t// get current stretch position without non-stretch part\n\t\t\t\t\tint currStretchPos = pixel - stretchStart - 1;\n\n\t\t\t\t\t// set index in cycle\n\t\t\t\t\tcurrCyclePos = (currStretchPos + repeatOffset) % abs(repeatCount);\n\n\t\t\t\t\tif(pingPong)\{\n\n\t\t\t\t\t\tpong = int(currStretchPos/repeatCount) % 2 ? true : false;\n\t\t\t\t\t\}\n\n\t\t\t\t\t// make index including (if enabled) pingpong\n\t\t\t\t\tint cyclePingpongIndex = pong ? (abs(repeatCount) - 1) - currCyclePos : currCyclePos;\n\n\t\t\t\t\t// override active\n\t\t\t\t\tbool overridden = false;\n\n\n\t\t\t\t\t// check if override\n\t\t\t\t\tif(override)\{\n\n\t\t\t\t\t\tif(currVal > startStretchValue)\{\n\n\t\t\t\t\t\t\toverridden = true;\n\n\t\t\t\t\t\t\t// first in cycle\n\t\t\t\t\t\t\tcurrCyclePos = 0;\n\n\t\t\t\t\t\t\t// reset pingpong\n\t\t\t\t\t\t\tpong = false;\n\n\t\t\t\t\t\t\t// first index of stretching\n\t\t\t\t\t\t\tcurrStretchLength = 0;\n\n\t\t\t\t\t\t\t// index of first stretched pixel\n\t\t\t\t\t\t\tstretchStart = pixel;\n\n\t\t\t\t\t\t\t// set out to current pixel\n\t\t\t\t\t\t\toutVal = currVal;\n\n\t\t\t\t\t\t\t// store this highscore value\n\t\t\t\t\t\t\tstartStretchValue = currVal;\n\t\t\t\t\t\t\}\n\t\t\t\t\t\}\n\n\n\t\t\t\t\t// increment index\n\t\t\t\t\tcurrStretchLength++;\n\n\t\t\t\t\tif(!overridden)\{\n\n\t\t\t\t\t\tif(pingPong && displayPong)\{\n\n\t\t\t\t\t\t\toutVal = pong;\n\t\t\t\t\t\t\}else\{\n\n\t\t\t\t\t\t\toutVal = src(stretchStart + (cyclePingpongIndex * (repeatCount < 0 ? -1 : 1)), pos.y);\n\t\t\t\t\t\t\}\n\t\t\t\t\t\}\n\n\n\t\t\t\t// if stretching has started and is over limit, end\n\t\t\t\t\}else if(currStretchLength >= stretchLength && stretchLength > 0)\{\n\n\t\t\t\t\t// start of stretch index\n\t\t\t\t\tstretchStart = -1;\n\n\t\t\t\t\t// placeholder value at start of stretch\n\t\t\t\t\tstartStretchValue = -1;\n\n\t\t\t\t\t// current stretching index back to start, or even further if should be ignored after this\n\t\t\t\t\tcurrStretchLength = multipleStreaks ? -1 : -2;\n\n\t\t\t\t\t// cycle index\n\t\t\t\t\tcurrCyclePos = 0;\n\n\t\t\t\t\t// show current pixel value\n\t\t\t\t\toutVal = emptyVal;\n\n\t\t\t\t\}\n\n\n\t\t\t\t// write\n\t\t\t\tdst(pixel, pos.y) = outVal;\n\t\t\t\}\n\t\t\}\n\t\}\n\};"
  useGPUIfAvailable {{parent.useGPU}}
  vectorize {{parent.vectorizeCPU}}
  rebuild ""
  PixelRepeat_stretchLength {{parent.length}}
  PixelRepeat_multipleStreaks {{parent.multipleStreaks}}
  PixelRepeat_repeatCount {{parent.repeats}}
  PixelRepeat_repeatOffset {{parent.repeatsOffset}}
  PixelRepeat_pingPong {{parent.pingpong}}
  PixelRepeat_displayPong {{parent.displayPong}}
  PixelRepeat_thresholdValue {{parent.threshold}}
  PixelRepeat_override {{parent.override}}
  rebuild_finalise ""
  maxGPUMemory {{parent.PercentageGPU}}
  maxTileLines {{parent.percentageImageHeight}}
  name BlinkScript_PixelRepeat
  xpos 362
  ypos -30
 }
 Dot {
  name Dot5
  note_font_size 30
  xpos 396
  ypos 400
 }
set N96f70a0 [stack 0]
 Dot {
  name Dot3
  note_font_size 30
  xpos 625
  ypos 400
 }
 Expression {
  expr0 "r == -1 ? 0 : r"
  expr1 "g == -1 ? 0 : g"
  expr2 "b == -1 ? 0 : b"
  expr3 "a == -1 ? 0 : a"
  name Expressions_NegValues_remove
  xpos 591
  ypos 493
 }
 Dot {
  name Dot7
  note_font_size 30
  xpos 625
  ypos 615
 }
push $N96f70a0
 Expression {
  expr0 "r == -1 ? 0 : r"
  expr1 "g == -1 ? 0 : g"
  expr2 "b == -1 ? 0 : b"
  expr3 "!(r == -1 || g == -1 || b == -1)"
  name Expressions_NegValues_to_Alpha
  xpos 362
  ypos 494
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 362
  ypos 604
  disable {{"!parent.effectOnly || !parent.repeatAlpha"}}
 }
 Transform {
  rotate {{-Transform1.rotate}}
  center {{width/2} {height/2}}
  shutteroffset centred
  name Transform3
  xpos 362
  ypos 935
 }
 Reformat {
  type "to box"
  box_width {{img.width}}
  box_height {{img.height}}
  box_fixed true
  resize none
  name Reformat3
  xpos 362
  ypos 961
 }
 Transform {
  filter {{parent.rotateFilter}}
  black_outside false
  shutter 0
  shutteroffset centred
  name Transform_SetFilterConcatinated1
  xpos 362
  ypos 1021
 }
 Crop {
  box {0 0 {width} {height}}
  crop false
  name Crop5
  xpos 362
  ypos 1047
 }
 Merge2 {
  inputs 2
  operation under
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge1
  xpos 362
  ypos 1181
  disable {{parent.effectOnly}}
 }
 Output {
  name Output1
  xpos 362
  ypos 1539
 }
end_group
Grade {
 gamma 0.53
 name Grade1
 selected true
 xpos -433
 ypos 3673
}
push $N46de1660
Merge2 {
 inputs 2+1
 operation plus
 mix 0.145
 name Merge7
 selected true
 xpos -539
 ypos 3763
}
Group {
 inputs 0
 name Huemask2
 tile_color 0xb2d6ff
 selected true
 xpos -680
 ypos 3636
 addUserKnob {20 Controller}
 addUserKnob {26 instructions l " " +INVISIBLE T "Connect a roto\nCreate a mask on the scope \nHit \"m\" to see your matte \n"}
 addUserKnob {26 ""}
 addUserKnob {6 keepmyalpha l "Keep Previous Alpha" t "This should be on, in case you want only the vector scope as preview or as an Input Process " +INVISIBLE +STARTLINE}
 addUserKnob {4 pulldown l "Display mode" M {"Scope on plate" "Scope only" "" "" ""}}
 pulldown "Scope only"
 addUserKnob {26 ""}
 addUserKnob {20 group_4 l General n 1}
 group_4 0
 addUserKnob {6 alpha l "Premult alpha on scope" t "This is usefull if you just want to see what is on your alpha. so it takes out all the extra color you don't want to see without premulting the plate \n\nWith this on, you will preview only what you had in your the input alpha and the roto mask will apply only on that part as well. \n\nBasically it does a premult based on the alpha so you can work only on that color, " +STARTLINE}
 alpha true
 addUserKnob {6 boolean_5 l "Alpha BBox" -STARTLINE}
 addUserKnob {6 darkmode l "Transparent mode" +STARTLINE}
 addUserKnob {41 scale l "Overall Scale" t "this scale is only the UI scaling doesn't affect the quality data. \n\nif you want to increase the detail of the data go to settings and activate the checkbox for 1k  data " T Reformat_final_Scale_12.scale}
 addUserKnob {7 zoom2 l Zoom t "This will increase the color data into the darkest pixel or into the brightest colors. \n\nThis is usefull when your plate is too dark or is too bright to spot colors.\n\n" R -1 1}
 addUserKnob {20 endGroup_9 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 group_3 l "Use alpha as a Color Matte " n 1}
 group_3 0
 addUserKnob {6 boolean_4 l "Activate Alpha input as matte" t "Use alpha for Matte\n\nThis is useful if you want to paint directly the color that you want to have the matte" +STARTLINE}
 addUserKnob {41 first_frame_dup l Reference T FrameHold1.first_frame_dup}
 addUserKnob {41 filter T Reformat4.filter}
 addUserKnob {41 size_1 l Erode T Dilate3.size}
 addUserKnob {20 endGroup_5 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 group_1 l "Use with luminance" n 1}
 group_1 0
 addUserKnob {6 boolean_2 l "Use luminance keyer" +STARTLINE}
 addUserKnob {41 invert -STARTLINE T Keyer_highlights_2134.invert}
 addUserKnob {41 range l HighLights T Keyer_highlights_2134.range}
 addUserKnob {20 endGroup_7 l endGroup n -1}
 addUserKnob {26 xxxxx l "" +STARTLINE}
 addUserKnob {20 ColorSamplergroup l "Pixel Sampler" n 1}
 ColorSamplergroup 0
 addUserKnob {6 activatesampler l "On/Off " +STARTLINE}
 addUserKnob {6 useaskeylight l "Use as a Keylight" -STARTLINE}
 addUserKnob {7 double l Opacity t "Opacity of the sampler"}
 double 0.1
 addUserKnob {41 color l Color t "(don't pick over the scope!)" T Constant_to_pick_1.color}
 addUserKnob {26 xxxxxxxx l "" +STARTLINE}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 xxxxxxxxx_1 l "" +STARTLINE}
 addUserKnob {20 Referencegroup l Reference n 1}
 Referencegroup 0
 addUserKnob {6 Reference l "Show Reference" t "it's a more convinience buttom to deactivate the reference input instead of unplugging the node. " +STARTLINE}
 Reference true
 addUserKnob {6 offplate l "Show Plate" -STARTLINE}
 offplate true
 addUserKnob {41 operation l "Merge Operation" T Merge_reference.operation}
 addUserKnob {26 text_2 l "Show outline "}
 addUserKnob {6 disablered l "Reference (Red)" +STARTLINE}
 disablered true
 addUserKnob {6 boolean_6 l "Plate (Blue)" -STARTLINE}
 addUserKnob {6 diableGreen l "2nd Reference (Green)" -STARTLINE}
 diableGreen true
 addUserKnob {6 compare l "Highlight Original previous color and alpha" t "this will highlight what ever you had in your alpha previous the node. \nThis is usefull if you have a CG and want to see how your colors are blending with the plate overall \n" +STARTLINE}
 addUserKnob {20 endGroup_3 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 Grading n 1}
 Grading 0
 addUserKnob {6 enablegrading l Enable +STARTLINE}
 addUserKnob {6 boolean_3 l "Preview Original" t "This is usefull if you want to see how it was before you grading the color matte." -STARTLINE}
 addUserKnob {41 saturation_1 l Saturation T Saturation_FOR_PREVIEW_1234.saturation}
 addUserKnob {7 Contrast R 0.5 1.5}
 Contrast 1
 addUserKnob {7 Tint l "Magenta/Green <font color=#FF00FF><sup>◄</sup></font><font color=#00FF00><sub>►</sub></font>" R -1 4}
 Tint 1
 addUserKnob {7 Temperature l "Temperature <font color=#0400FF><sup>◄</sup></font><font color=#FF9E00><sub>►</sub></font>" R -1 4}
 Temperature 1
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {26 xxxxxxxxxxxxxxxxxx l "" +STARTLINE}
 addUserKnob {20 group l "Matte Adjusments (beta)" n 1}
 group 0
 addUserKnob {6 blurmatte l "Blur Matte" +STARTLINE}
 addUserKnob {41 size l Amount -STARTLINE T Blur_colodata_1.size}
 addUserKnob {6 boolean l "Time Echo " +STARTLINE}
 addUserKnob {41 framesbehind l "Frames to look at" -STARTLINE T TimeEcho1.framesbehind}
 addUserKnob {20 endGroup_6 l endGroup n -1}
 addUserKnob {26 xxxxxxxxxxx_1 l "" +STARTLINE}
 addUserKnob {1 string l "" +STARTLINE}
 string VIEWER_INPUT
 addUserKnob {26 credits l "" +STARTLINE T "HueMask v1.0   -   Jorge Miranda Cherem"}
 addUserKnob {26 link l "" +STARTLINE +INVISIBLE T "<a href=\"https://www.linkedin.com/in/jorge-miranda-8b4a4417/\"><span style=\"color:#C8C8C8;\">Linkedin</span></a>"}
 addUserKnob {20 settings l Settings}
 addUserKnob {26 text l "Format Issues"}
 addUserKnob {6 crop l "Crop to Bbox" t "Uncheck this if the BBbox is smaller than your comp that can't see the scope anymore." -STARTLINE}
 crop true
 addUserKnob {26 xxxxxxxxx l "" +STARTLINE}
 addUserKnob {20 dropdown l "Preview settings" n 1}
 addUserKnob {6 activate l "Scope On" t "Manual check box to desactivate the Scope. However desactivated by default when send to render." +STARTLINE}
 activate true
 addUserKnob {26 colordatapreview l "Color Data Preview"}
 addUserKnob {41 value l Brightness T Grade_brightness_1.value}
 addUserKnob {41 value_2 l Gamma T Gamma_overall.value}
 addUserKnob {26 mask_separate l Mask}
 addUserKnob {41 value_3 l Opacity T Multiply_maskopacity.value}
 addUserKnob {6 boolean_1 l Glow +STARTLINE}
 addUserKnob {26 xxxxxxx l "" +STARTLINE}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 xxxxxxx_1 l "" +STARTLINE}
 addUserKnob {20 group_2 l "Colorwheel Look" n 1}
 group_2 0
 addUserKnob {6 colorless l "Show Color Guides" +STARTLINE}
 colorless true
 addUserKnob {6 showtargets l "Show Color Targets" -STARTLINE}
 addUserKnob {41 saturation l Saturation T Saturation_colorwheel.saturation}
 addUserKnob {41 value_1 l Brightness T Colorwheel_Brightess_1.value}
 addUserKnob {7 opacity l Opacity}
 opacity 0.73
 addUserKnob {6 opaque l Opaque +STARTLINE}
 opaque true
 addUserKnob {41 color_1 l "Fill Empty Color" -STARTLINE T Constant_to_fill_space_23.color}
 addUserKnob {20 endGroup_8 l endGroup n -1}
 addUserKnob {26 xxxxxxxxxx_1 l "" +STARTLINE}
 addUserKnob {20 opaque_1 l "Color Data" n 1}
 opaque_1 0
 addUserKnob {6 resolution5 l "1k for more detail  " +STARTLINE}
 addUserKnob {6 noclampvalues l "No Clamp Values" +STARTLINE}
 addUserKnob {41 numpixels l "Add Pixels" T AdjBBox_Color_Data_1.numpixels}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {26 ""}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x388e8e00
  label "Color picker "
  note_font_size 42
  xpos -2031
  ypos 1737
  bdwidth 1302
  bdheight 1328
 }
 BackdropNode {
  inputs 0
  name BackdropNode10
  tile_color 0x397b90ff
  label "Color Targets"
  note_font_size 42
  xpos -2467
  ypos 3478
  bdwidth 323
  bdheight 517
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x337f7eff
  label "reformat for more detail"
  note_font_size 42
  xpos -506
  ypos 18
  bdwidth 550
  bdheight 201
 }
 BackdropNode {
  inputs 0
  name BackdropNode12
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos -489
  ypos 436
  bdwidth 455
  bdheight 396
 }
 BackdropNode {
  inputs 0
  name BackdropNode15
  tile_color 0x7171c600
  label "only premulted"
  note_font_size 42
  xpos -389
  ypos 1467
  bdwidth 210
  bdheight 147
 }
 BackdropNode {
  inputs 0
  name BackdropNode18
  tile_color 0x283f5eff
  label "show reference and off plate"
  note_font_size 42
  xpos -394
  ypos 1958
  bdwidth 538
  bdheight 327
 }
 BackdropNode {
  inputs 0
  name BackdropNode19
  tile_color 0x397b90ff
  label CC
  note_font_size 42
  xpos -578
  ypos 3069
  bdwidth 490
  bdheight 192
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x8e388e00
  label "premulted area"
  note_font_size 42
  xpos 1795
  ypos -79
  bdwidth 427
  bdheight 1454
 }
 BackdropNode {
  inputs 0
  name BackdropNode20
  tile_color 0x5b7d56ff
  label "preview mask"
  note_font_size 42
  xpos -577
  ypos 3495
  bdwidth 1362
  bdheight 509
 }
 BackdropNode {
  inputs 0
  name BackdropNode22
  tile_color 0x797979ff
  label "alpha from rgb\n(r+g+b) > 0 ? 1 : a"
  note_font_size 42
  xpos -401
  ypos 864
  bdwidth 413
  bdheight 149
 }
 BackdropNode {
  inputs 0
  name BackdropNode26
  tile_color 0x397b90ff
  label "color grading "
  note_font_size 42
  xpos -3929
  ypos 5428
  bdwidth 1189
  bdheight 1681
 }
 BackdropNode {
  inputs 0
  name BackdropNode27
  tile_color 0x337f7eff
  label REFORMAT
  note_font_size 42
  xpos -285
  ypos -1031
  bdwidth 258
  bdheight 199
 }
 BackdropNode {
  inputs 0
  name BackdropNode28
  tile_color 0x337f7eff
  label "overall Scale"
  note_font_size 42
  xpos -3252
  ypos 6741
  bdwidth 413
  bdheight 167
 }
 BackdropNode {
  inputs 0
  name BackdropNode29
  tile_color 0x8e8e3800
  label "time echo"
  note_font_size 42
  xpos -501
  ypos 245
  bdwidth 546
  bdheight 168
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x797979ff
  label "affect alpha only "
  note_font_size 42
  xpos 2074
  ypos -359
  bdheight 221
 }
 BackdropNode {
  inputs 0
  name BackdropNode30
  tile_color 0x3a833bff
  label "keyer luminance"
  note_font_size 42
  xpos -596
  ypos -798
  bdwidth 247
  bdheight 211
 }
 BackdropNode {
  inputs 0
  name BackdropNode31
  tile_color 0xaf8508ff
  label "glow stuff"
  note_font_size 42
  xpos -547
  ypos 1657
  bdwidth 359
  bdheight 295
 }
 BackdropNode {
  inputs 0
  name BackdropNode32
  tile_color 0x397b90ff
  label "ColorWheel look"
  note_font_size 42
  xpos -3398
  ypos 4234
  bdwidth 903
  bdheight 664
 }
 BackdropNode {
  inputs 0
  name BackdropNode33
  tile_color 0x8e8e3800
  label "grading mode"
  note_font_size 42
  xpos -394
  ypos 4019
  bdwidth 453
  bdheight 108
 }
 BackdropNode {
  inputs 0
  name BackdropNode35
  tile_color 0x337f7eff
  label "master Reformat "
  note_font_size 42
  xpos -3144
  ypos 1863
  bdwidth 453
  bdheight 242
 }
 BackdropNode {
  inputs 0
  name BackdropNode36
  tile_color 0x3a833bff
  label "keylightStuff "
  note_font_size 42
  xpos 762
  ypos 4731
  bdwidth 410
  bdheight 416
 }
 BackdropNode {
  inputs 0
  name BackdropNode37
  tile_color 0x32415e00
  label reference
  note_font_size 42
  xpos 3742
  ypos 326
  bdwidth 334
  bdheight 2283
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x397b90ff
  label "simple remap of color"
  note_font_size 42
  xpos 1067
  ypos 115
  bdwidth 132
  bdheight 2592
 }
 BackdropNode {
  inputs 0
  name BackdropNode40
  tile_color 0x283f5eff
  label "show reference and off plate"
  note_font_size 42
  xpos -291
  ypos 2321
  bdwidth 538
  bdheight 327
 }
 BackdropNode {
  inputs 0
  name BackdropNode41
  tile_color 0x7171c600
  label "reference input"
  note_font_size 42
  xpos 2789
  ypos -1266
  bdwidth 1283
  bdheight 223
 }
 BackdropNode {
  inputs 0
  name BackdropNode43
  tile_color 0x3a833bff
  label "keyer luminance"
  note_font_size 42
  xpos -138
  ypos -798
  bdwidth 247
  bdheight 211
 }
 BackdropNode {
  inputs 0
  name BackdropNode44
  tile_color 0x7171c600
  label "Scope view mode "
  note_font_size 42
  xpos -3963
  ypos 8375
  bdwidth 243
  bdheight 200
 }
 BackdropNode {
  inputs 0
  name BackdropNode45
  tile_color 0x797979ff
  label "Alpha only or different plate reference"
  note_font_size 42
  xpos 2787
  ypos -1604
  bdwidth 1284
  bdheight 317
 }
 BackdropNode {
  inputs 0
  name BackdropNode46
  tile_color 0x797979ff
  label "alpha input"
  note_font_size 42
  xpos -230
  ypos -1411
  bdwidth 346
  bdheight 275
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x337f7eff
  label "overall Scale"
  note_font_size 42
  xpos -3027
  ypos 4977
  bdwidth 413
  bdheight 167
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0x397b90ff
  label "preview Color Wheel"
  note_font_size 42
  xpos -3398
  ypos 3068
  bdwidth 892
  bdheight 1100
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x797979ff
  label "roto input"
  note_font_size 42
  xpos 538
  ypos 2756
  bdwidth 237
  bdheight 531
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x32415e00
  label reference
  note_font_size 42
  xpos 2904
  ypos 126
  bdwidth 334
  bdheight 2283
 }
 BackdropNode {
  inputs 0
  name BackdropNode13
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos 1954
  ypos 410
  bdwidth 373
  bdheight 379
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode14
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos 2949
  ypos 633
  bdwidth 393
  bdheight 324
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode16
  tile_color 0x337f7eff
  label "reformat for more detail "
  note_font_size 42
  xpos 1781
  ypos 5
  bdwidth 594
  bdheight 212
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode17
  tile_color 0x337f7eff
  label "reformat for more detail "
  note_font_size 42
  xpos 2745
  ypos 408
  bdwidth 594
  bdheight 212
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode21
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos 1648
  ypos 1036
  bdwidth 210
  bdheight 325
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode23
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos -3171
  ypos 6103
  bdwidth 373
  bdheight 379
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode24
  tile_color 0x337f7eff
  label "reformat for more detail "
  note_font_size 42
  xpos -3344
  ypos 5838
  bdwidth 594
  bdheight 212
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode25
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos -3393
  ypos 6449
  bdwidth 210
  bdheight 325
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode34
  tile_color 0x797979ff
  label "grading with no Roto"
  note_font_size 42
  xpos -3979
  ypos 5541
  bdwidth 219
  bdheight 197
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode38
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos 3768
  ypos 1472
  bdwidth 264
  bdheight 415
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode39
  tile_color 0x397b90ff
  label "uv color convertion"
  note_font_size 42
  xpos 3787
  ypos 833
  bdwidth 393
  bdheight 324
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode42
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos -732
  ypos 1057
  bdwidth 210
  bdheight 325
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x8e388e00
  label HIGHLIGHT
  note_font_size 42
  xpos 2930
  ypos 1272
  bdwidth 264
  bdheight 415
  z_order 1
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0x101010ff
  label "   POINTER   "
  note_font_size 19.25
  xpos -284
  ypos 2953
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0x101010ff
  label REFERENCE
  note_font_size 19.25
  xpos -315
  ypos 2176
 }
 Input {
  inputs 0
  name InputPlate
  xpos -223
  ypos -1862
 }
 Dot {
  name Dot144
  xpos -189
  ypos -1445
 }
set Nb19200e0 [stack 0]
 Dot {
  name Dot212
  xpos -186
  ypos -1218
 }
set N67516500 [stack 0]
 Input {
  inputs 0
  name Alpha
  label "\[value number]"
  xpos 26
  ypos -1331
  number 1
 }
 Dot {
  name Dot188
  xpos 60
  ypos -1254
 }
 Dot {
  name Dot211
  xpos 60
  ypos -1218
 }
set N673ea000 [stack 0]
 Dot {
  name Dot213
  xpos 60
  ypos -1161
 }
push $N673ea000
push $N67516500
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy9
  xpos -70
  ypos -1227
 }
 CopyBBox {
  inputs 2
  name CopyBBox3
  xpos -70
  ypos -1164
  disable {{!parent.boolean_5}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input1]"}}
  name Switch_InputAlpha
  xpos -220
  ypos -1164
 }
 Dot {
  name Dot36
  xpos -186
  ypos -1100
 }
set N67c3f7c0 [stack 0]
 Dot {
  name Dot53
  xpos -186
  ypos -983
 }
set N675a7b00 [stack 0]
 Crop {
  box {{input.bbox.x-bbox_padding} {input.bbox.y-bbox_padding} {input.bbox.r+bbox_padding} {input.bbox.t+bbox_padding}}
  name Crop_To_BBox
  xpos -170
  ypos -946
  addUserKnob {20 padding_tab l Padding}
  addUserKnob {7 bbox_padding l "bbox padding" t "Add or subtract from bounding box" R -100 100}
 }
push $N675a7b00
 Crop {
  box {0 0 {width} {height}}
  name Crop2
  xpos -276
  ypos -943
 }
 set C67564380 [stack 0]
 Switch {
  inputs 2
  which {{parent.crop}}
  name Switch_crop_223
  xpos -219
  ypos -885
 }
 set C675a45b0 [stack 0]
set N675a45b0 [stack 0]
 Dot {
  name Dot159
  xpos -405
  ypos -703
 }
set N67c25cf0 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace10
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -586
  ypos -718
 }
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle18
  xpos -586
  ypos -670
 }
 Keyer {
  operation "luminance key"
  name Keyer_highlights_2134
  xpos -586
  ypos -627
  disable {{!parent.boolean_2}}
 }
set N7763e600 [stack 0]
push $N67c25cf0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy7
  xpos -439
  ypos -627
  disable {{!parent.boolean_2}}
 }
set N67521470 [stack 0]
push $N7763e600
push $N675a45b0
 Dot {
  name Dot185
  xpos 52
  ypos -703
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge4
  xpos 18
  ypos -633
  disable {{!parent.boolean_2}}
 }
set N674f7660 [stack 0]
 Switch {
  inputs 2
  which {{!parent.alpha}}
  name Switch18_to_merge_with_alpha_2
  xpos -343
  ypos -527
 }
push $N674f7660
 Switch {
  inputs 2
  which {{-(pulldown)+1}}
  name Switch17
  xpos -222
  ypos -456
 }
 Dot {
  name Dot89
  xpos -188
  ypos -390
 }
set N56bbef80 [stack 0]
 Dot {
  name Dot5
  xpos -188
  ypos -279
 }
set N56bc39c0 [stack 0]
 Dot {
  name Dot6
  xpos 2118
  ypos -279
 }
 Premult {
  name Premult_alpha_to_isolate_1
  xpos 2084
  ypos -217
 }
 Dot {
  name Dot4
  xpos 2118
  ypos -157
 }
set N6734a990 [stack 0]
 Dot {
  name Dot110
  xpos 2118
  ypos 97
 }
set N674fed30 [stack 0]
 Dot {
  name Dot124
  xpos 2010
  ypos 97
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_16
  xpos 1976
  ypos 123
 }
 Dot {
  name Dot125
  xpos 2010
  ypos 192
 }
push $N674fed30
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_20
  xpos 2084
  ypos 126
 }
 Switch {
  inputs 2
  which {{!parent.resolution5}}
  name Switch_reformat
  xpos 2084
  ypos 189
 }
 set C6c83e2c0 [stack 0]
 Dot {
  name Dot8
  xpos 2118
  ypos 490
 }
set N6c846330 [stack 0]
 Blur {
  size 50
  name Blur_colodata_1
  label "size \[value size]"
  xpos 2084
  ypos 523
  disable {{!parent.blurmatte}}
 }
 set C67e6fc70 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 2084
  ypos 579
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle2
  xpos 2084
  ypos 627
 }
 Grade {
  blackpoint {{parent.zoom2}}
  whitepoint {{1-blackpoint}}
  black_clamp false
  name Grade_Uniform_Scale_1
  xpos 2084
  ypos 701
 }
 set C66fcf630 [stack 0]
set N66fcf630 [stack 0]
 AdjBBox {
  numpixels {{parent.AdjBBox_Color_Data_1.numpixels}}
  name AdjBBox2
  xpos 2084
  ypos 725
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $N6c846330
 Dot {
  name Dot12
  xpos 1969
  ypos 490
 }
 Dot {
  name Dot21
  xpos 1969
  ypos 758
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap4
  xpos 2084
  ypos 749
 }
 Premult {
  name Premult4
  xpos 2084
  ypos 820
  disable true
 }
 Dot {
  name Dot28
  xpos 2118
  ypos 1140
 }
set N671cdbf0 [stack 0]
 Dot {
  name Dot23
  xpos 1917
  ypos 1140
 }
set N671d2750 [stack 0]
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode6
  xpos 1723
  ypos 1131
 }
push $N56bc39c0
 Premult {
  name Premult3
  xpos -222
  ypos -261
  disable true
 }
 Premult {
  name Premult_for_keyer_23
  xpos -222
  ypos -224
  disable {{parent.Copy7.disable}}
 }
 Dot {
  name Dot123
  xpos -188
  ypos -200
 }
set N65e9ce80 [stack 0]
 Dot {
  name Dot199
  xpos 48
  ypos -200
 }
push $N65e9ce80
push $N6734a990
push $N65e9ce80
 Switch {
  inputs 3
  which {{"parent.compare ==1? 2 : parent.alpha"}}
  name Switch_method
  xpos -222
  ypos -161
 }
 set C65ea6470 [stack 0]
 Dot {
  name Dot9
  xpos -188
  ypos -137
 }
 Dot {
  name Dot10
  tile_color 0xcc804e00
  label plate
  note_font_size 30
  xpos -188
  ypos -106
 }
set N65da3210 [stack 0]
 Switch {
  inputs 2
  which {{parent.boolean_4}}
  name Switch20
  xpos 14
  ypos -109
 }
 Dot {
  name Dot24
  xpos 1113
  ypos -106
 }
clone $C67e6fc70 {
  xpos 1079
  ypos 539
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace5
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 1079
  ypos 587
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 1079
  ypos 635
 }
clone $C66fcf630 {
  xpos 1082
  ypos 683
  selected false
 }
 Dot {
  name Dot112
  xpos 1116
  ypos 3153
 }
set N6567b7f0 [stack 0]
 Dot {
  name Dot113
  xpos 981
  ypos 3153
 }
 Dot {
  inputs 0
  name Dot178
  xpos 41
  ypos 2401
 }
set N65684bc0 [stack 0]
 Dot {
  name Dot179
  xpos -67
  ypos 2401
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_12
  xpos -101
  ypos 2422
 }
 Dot {
  name Dot180
  xpos -67
  ypos 2458
 }
push $N65684bc0
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_13
  xpos 7
  ypos 2419
 }
clone $C6c83e2c0 {
  inputs 2
  xpos 7
  ypos 2455
  selected false
 }
 Dot {
  name Dot181
  xpos 41
  ypos 2500
 }
set N653892c0 [stack 0]
 Input {
  inputs 0
  name InputReference_2dn
  label "\[value number]"
  xpos 3876
  ypos -1732
  number 4
 }
 Dot {
  name Dot207
  xpos 3910
  ypos -1525
 }
set N652829f0 [stack 0]
 Dot {
  name Dot209
  xpos 3851
  ypos -1525
 }
set N65287550 [stack 0]
 Dot {
  name Dot208
  xpos 3851
  ypos -1403
 }
push $Nb19200e0
push $N65287550
 Dot {
  name Dot210
  xpos 3787
  ypos -1525
 }
set N65180d70 [stack 0]
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  alpha alpha2
  name ShuffleCopy2
  xpos 3753
  ypos -1454
 }
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 3753
  ypos -1406
 }
 Premult {
  name Premult8
  xpos 3753
  ypos -1355
 }
push $N652829f0
 Switch {
  inputs 2
  which {{!parent.NoOp2.boolean}}
  name Switch22
  xpos 3876
  ypos -1355
 }
 Dot {
  name Dot83
  xpos 3910
  ypos -1199
 }
set N64e7de80 [stack 0]
clone $C67564380 {
  xpos 3784
  ypos -1157
  selected false
 }
push $N64e7de80
 Crop {
  box {{input.bbox.x-bbox_padding} {input.bbox.y-bbox_padding} {input.bbox.r+bbox_padding} {input.bbox.t+bbox_padding}}
  name Crop_To_BBox2
  xpos 3969
  ypos -1164
  addUserKnob {20 padding_tab l Padding}
  addUserKnob {7 bbox_padding l "bbox padding" t "Add or subtract from bounding box" R -100 100}
 }
clone $C675a45b0 {
  inputs 2
  xpos 3886
  ypos -1090
  selected false
 }
 Remove {
  operation keep
  channels rgba
  name Keep1
  xpos 3886
  ypos 429
 }
 Shuffle {
  alpha white
  name Shuffle21
  xpos 3886
  ypos 453
 }
 Dot {
  name Dot84
  xpos 3920
  ypos 700
 }
set N64b896e0 [stack 0]
 Dot {
  name Dot172
  xpos 3812
  ypos 700
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_7
  xpos 3778
  ypos 726
 }
 Dot {
  name Dot175
  xpos 3812
  ypos 795
 }
push $N64b896e0
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_9
  xpos 3886
  ypos 729
 }
clone $C6c83e2c0 {
  inputs 2
  xpos 3886
  ypos 792
  selected false
 }
 Dot {
  name Dot176
  xpos 3920
  ypos 913
 }
set N6477df40 [stack 0]
clone $C67e6fc70 {
  xpos 3886
  ypos 931
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace11
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 3886
  ypos 979
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle15
  xpos 3886
  ypos 1027
 }
clone $C66fcf630 {
  xpos 3886
  ypos 1063
  selected false
 }
 AdjBBox {
  numpixels 800
  name AdjBBox_Color_Data_3
  xpos 3886
  ypos 1087
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $N6477df40
 Dot {
  name Dot177
  tile_color 0xcc804e00
  xpos 3797
  ypos 913
 }
 Dot {
  name Dot82
  xpos 3797
  ypos 1120
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap3
  xpos 3886
  ypos 1111
 }
 Dot {
  name Dot75
  xpos 3920
  ypos 1550
 }
set N5fff2b90 [stack 0]
 Dot {
  name Dot77
  xpos 3810
  ypos 1550
 }
set N5fff74e0 [stack 0]
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode8
  xpos 3646
  ypos 1614
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle6
  xpos 3776
  ypos 1680
 }
 Grade {
  white 4
  multiply {0 1 0 0}
  multiply_panelDropped true
  name Grade6
  xpos 3776
  ypos 1735
 }
 Glow2 {
  brightness 0.02
  size 21
  name Glow4
  xpos 3776
  ypos 1769
 }
 Dot {
  name Dot74
  xpos 3810
  ypos 1823
 }
push $N5fff2b90
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge1
  xpos 3886
  ypos 1820
  disable {{!parent.diableGreen}}
 }
 Dot {
  name Dot73
  xpos 3920
  ypos 2577
 }
 Switch {
  inputs 2
  which {{!parent.Reference}}
  name Switch_to_show_reference1
  xpos 7
  ypos 2574
 }
 Dot {
  inputs 0
  name Dot119
  xpos -62
  ypos 2038
 }
set N5f9fb680 [stack 0]
 Dot {
  name Dot120
  xpos -170
  ypos 2038
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_18
  xpos -204
  ypos 2059
 }
 Dot {
  name Dot121
  xpos -170
  ypos 2095
 }
push $N5f9fb680
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_3
  xpos -96
  ypos 2056
 }
clone $C6c83e2c0 {
  inputs 2
  xpos -96
  ypos 2092
  selected false
 }
 Dot {
  name Dot122
  xpos -62
  ypos 2137
 }
set N5f5f0100 [stack 0]
 Input {
  inputs 0
  name InputReference
  label "\[value number]"
  xpos 3038
  ypos -1718
  number 3
 }
 Dot {
  name Dot203
  xpos 3072
  ypos -1525
 }
set N5f5f93e0 [stack 0]
 Dot {
  name Dot205
  xpos 3029
  ypos -1525
 }
set N5f5fdf10 [stack 0]
 Dot {
  name Dot206
  xpos 3029
  ypos -1403
 }
push $Nb19200e0
push $N5f5fdf10
 Dot {
  name Dot204
  xpos 2942
  ypos -1525
 }
set N5f4f7720 [stack 0]
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  alpha alpha2
  name ShuffleCopy1
  xpos 2908
  ypos -1454
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 2908
  ypos -1406
 }
 Premult {
  name Premult5
  xpos 2908
  ypos -1355
 }
push $N5f5f93e0
 Switch {
  inputs 2
  which {{!parent.NoOp1.boolean}}
  name Switch21
  xpos 3038
  ypos -1355
 }
 Dot {
  name Dot78
  xpos 3072
  ypos -1183
 }
set N5f1f4820 [stack 0]
clone $C67564380 {
  xpos 2946
  ypos -1141
  selected false
 }
push $N5f1f4820
 Crop {
  box {{input.bbox.x-bbox_padding} {input.bbox.y-bbox_padding} {input.bbox.r+bbox_padding} {input.bbox.t+bbox_padding}}
  name Crop_To_BBox1
  xpos 3147
  ypos -1147
  addUserKnob {20 padding_tab l Padding}
  addUserKnob {7 bbox_padding l "bbox padding" t "Add or subtract from bounding box" R -100 100}
 }
clone $C675a45b0 {
  inputs 2
  xpos 3048
  ypos -1074
  selected false
 }
 Remove {
  operation keep
  channels rgba
  name Keep
  xpos 3048
  ypos 229
 }
 Shuffle {
  alpha white
  name Shuffle14
  xpos 3048
  ypos 253
 }
 Dot {
  name Dot126
  xpos 3082
  ypos 500
 }
set N5edf0100 [stack 0]
 Dot {
  name Dot127
  xpos 2974
  ypos 500
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_22
  xpos 2940
  ypos 526
 }
 Dot {
  name Dot128
  xpos 2974
  ypos 595
 }
push $N5edf0100
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_23
  xpos 3048
  ypos 529
 }
clone $C6c83e2c0 {
  inputs 2
  xpos 3048
  ypos 592
  selected false
 }
 Dot {
  name Dot79
  xpos 3082
  ypos 713
 }
set N5eaf4580 [stack 0]
clone $C67e6fc70 {
  xpos 3048
  ypos 731
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace3
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos 3048
  ypos 779
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle10
  xpos 3048
  ypos 827
 }
clone $C66fcf630 {
  xpos 3048
  ypos 863
  selected false
 }
 AdjBBox {
  numpixels 800
  name AdjBBox_Color_Data_2
  xpos 3048
  ypos 887
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $N5eaf4580
 Dot {
  name Dot80
  tile_color 0xcc804e00
  xpos 2959
  ypos 713
 }
 Dot {
  name Dot81
  xpos 2959
  ypos 920
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap5
  xpos 3048
  ypos 911
 }
 Dot {
  name Dot87
  xpos 3082
  ypos 1350
 }
set N5e1f42c0 [stack 0]
 Dot {
  name Dot88
  xpos 2972
  ypos 1350
 }
set N5e1f8b60 [stack 0]
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode7
  xpos 2831
  ypos 1425
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle11
  xpos 2938
  ypos 1480
 }
 Grade {
  white 4
  multiply {1 0 0 0}
  multiply_panelDropped true
  name Grade13
  xpos 2938
  ypos 1536
 }
 Glow2 {
  brightness 0.02
  size 21
  name Glow1
  xpos 2938
  ypos 1569
 }
 Dot {
  name Dot105
  xpos 2972
  ypos 1623
 }
push $N5e1f42c0
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge8
  xpos 3048
  ypos 1620
  disable {{!parent.disablered}}
 }
 Dot {
  name Dot85
  xpos 3082
  ypos 2214
 }
 Dot {
  name Dot130
  xpos 1028
  ypos 2214
 }
 Switch {
  inputs 2
  which {{!parent.Reference}}
  name Switch_to_show_reference
  xpos -96
  ypos 2211
 }
push $N671d2750
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode5
  xpos 1769
  ypos 1188
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle16
  xpos 1723
  ypos 1236
 }
 Grade {
  white 4
  multiply {1 0 0 0}
  multiply_panelDropped true
  name Grade15
  xpos 1723
  ypos 1272
 }
 Dot {
  name Dot72
  xpos 1757
  ypos 1291
 }
push $N671cdbf0
 Merge2 {
  inputs 2
  operation under
  name Merge3
  xpos 2084
  ypos 1288
 }
 Dot {
  name Dot42
  xpos 2121
  ypos 1590
 }
push $N65da3210
 Dot {
  name Dot11
  xpos -354
  ypos -106
 }
 Dot {
  name Dot106
  xpos -354
  ypos 98
 }
set N5d7fd5c0 [stack 0]
 Dot {
  name Dot116
  xpos -462
  ypos 98
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_17
  xpos -496
  ypos 124
 }
 Dot {
  name Dot117
  xpos -462
  ypos 193
 }
push $N5d7fd5c0
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_21
  xpos -388
  ypos 127
 }
clone $C6c83e2c0 {
  inputs 2
  xpos -388
  ypos 190
  selected false
 }
 TimeEcho {
  framesbehind 10
  frmaesfade 0
  name TimeEcho1
  xpos -388
  ypos 328
  disable {{!parent.boolean}}
 }
 Dot {
  name Dot16
  xpos -353
  ypos 516
 }
set N5d3fad60 [stack 0]
clone $C67e6fc70 {
  xpos -387
  ypos 556
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace6
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -387
  ypos 604
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle7
  xpos -387
  ypos 652
 }
clone $C66fcf630 {
  xpos -387
  ypos 688
  selected false
 }
 AdjBBox {
  numpixels 800
  name AdjBBox_Color_Data_1
  xpos -387
  ypos 712
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
 Dot {
  name Dot109
  xpos -353
  ypos 736
 }
push $N5d3fad60
 Dot {
  name Dot17
  tile_color 0xcc804e00
  xpos -476
  ypos 516
 }
 Dot {
  name Dot18
  xpos -476
  ypos 788
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap
  xpos -387
  ypos 779
 }
 Expression {
  channel3 alpha
  expr3 "(r+g+b) > 0 ? 1 : a"
  name alphafromrgb_21
  label "\[value expr3]"
  xpos -387
  ypos 967
 }
 Dot {
  name Dot71
  xpos -353
  ypos 1122
 }
set N5596d690 [stack 0]
 Dot {
  name Dot183
  xpos -353
  ypos 1161
 }
set N55862120 [stack 0]
 Dot {
  name Dot186
  xpos -463
  ypos 1161
 }
set N55866c50 [stack 0]
 FilterErode {
  size -0.1
  filter quadratic
  mix 0.01
  name FilterErode2
  selected true
  xpos -657
  ypos 1197
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle22
  xpos -657
  ypos 1257
 }
 Grade {
  white 4
  multiply {0 0 1 0}
  multiply_panelDropped true
  name Grade11
  xpos -657
  ypos 1293
 }
 Dot {
  name Dot187
  xpos -623
  ypos 1312
 }
push $N55862120
 Merge2 {
  inputs 2
  operation under
  name Merge4
  xpos -387
  ypos 1309
  disable {{!parent.boolean_6}}
 }
 Dot {
  name Dot30
  xpos -350
  ypos 1547
 }
set N57dfd9a0 [stack 0]
 Dot {
  name Dot29
  xpos -235
  ypos 1547
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos -269
  ypos 1586
 }
push $N57dfd9a0
push $N57dfd9a0
clone $C65ea6470 {
  inputs 3
  xpos -384
  ypos 1586
  selected false
 }
 Dot {
  name Dot168
  xpos -350
  ypos 1739
 }
set N577c6850 [stack 0]
 Dot {
  name Dot169
  xpos -505
  ypos 1739
 }
 Clamp {
  name Clamp6
  xpos -539
  ypos 1775
 }
 Blur {
  size 44
  filter box
  name Blur7
  xpos -539
  ypos 1811
 }
 Multiply {
  value 0.28
  name Multiply8
  xpos -539
  ypos 1866
 }
push $N577c6850
 Merge2 {
  inputs 2
  operation plus
  mix 0.25
  name Plus_for_glow_12
  xpos -384
  ypos 1872
  disable {{!parent.boolean_1}}
 }
 Dot {
  name Dot129
  xpos -350
  ypos 2097
 }
push $N5f5f0100
 Switch {
  inputs 2
  which {{parent.offplate}}
  name Switch_to_nothing_234
  xpos -384
  ypos 2133
 }
 Merge2 {
  inputs 2
  operation under
  name Merge_reference
  xpos -384
  ypos 2211
  disable {{"!\[exists parent.input3]"}}
 }
 Dot {
  name Dot182
  xpos -350
  ypos 2460
 }
set N571c5790 [stack 0]
 Merge2 {
  inputs 2
  operation under
  name Merge_reference1
  xpos -384
  ypos 2574
  disable {{"!\[exists parent.input4]"}}
 }
 Dot {
  name Dot86
  xpos -350
  ypos 2727
 }
set N56fbac20 [stack 0]
 Dot {
  name Dot111
  xpos 868
  ypos 2727
 }
 OFXuk.co.thefoundry.keylight.keylight_v201 {
  show "Final Result"
  unPreMultiply false
  screenColour {{parent.Constant_to_pick_1.color x1009 0.08577041328} {parent.Constant_to_pick_1.color x1009 0.0464130193} {parent.Constant_to_pick_1.color x1009 0.02878418192}}
  screenGain 1
  screenBalance 0.5
  alphaBias {0.5 0.5 0.5}
  despillBias {0.5 0.5 0.5}
  gangBiases true
  preBlur 0
  "Screen Matte" 0
  screenClipMin 0
  screenClipMax 1
  screenClipRollback 0
  screenGrowShrink 0
  screenSoftness 0
  screenDespotBlack 0
  screenDespotWhite 0
  screenReplaceMethod "Soft Colour"
  screenReplaceColour {0.5 0.5 0.5}
  Tuning 0
  midPoint 0.5
  lowGain 1
  midGain 1
  highGain 1
  "Inside Mask" 0
  sourceAlphaHandling Ignore
  insideReplaceMethod "Soft Colour"
  insideReplaceColour {0.5 0.5 0.5}
  Crops 0
  SourceXMethod Colour
  SourceYMethod Colour
  SourceEdgeColour 0
  SourceCropL 0
  SourceCropR 1
  SourceCropB 0
  SourceCropT 1
  balanceSet true
  insideComponent None
  outsideComponent None
  cacheBreaker true
  name Keylight1
  xpos 837
  ypos 4811
 }
 Erode {
  size 2.5
  name Erode1
  xpos 837
  ypos 4835
 }
 Invert {
  name Invert3
  xpos 837
  ypos 4871
 }
 Reformat {
  resize distort
  filter Impulse
  pbb true
  name Reformat1
  xpos 837
  ypos 4907
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle13
  label "in \[value in]-->out \[value out]"
  xpos 837
  ypos 4931
 }
 STMap {
  inputs 2
  uv rgb
  name STMap1
  xpos 947
  ypos 4937
 }
push $N6567b7f0
 Input {
  inputs 0
  name InputRoto
  label "\[value number]"
  xpos 685
  ypos 2830
  number 2
 }
 Dot {
  name Dot52
  xpos 719
  ypos 2900
 }
set N6c70f470 [stack 0]
 Reformat {
  type scale
  scale 0.5
  filter Impulse
  pbb true
  name Reformat_final_Scale_1adfadsf1
  xpos 548
  ypos 2897
 }
 Dot {
  name Dot58
  xpos 582
  ypos 2927
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_10
  xpos 548
  ypos 2964
 }
set N66675af0 [stack 0]
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_1
  xpos 548
  ypos 3000
 }
set N67f88c30 [stack 0]
 Dot {
  name Dot160
  xpos 582
  ypos 3050
 }
push $N6c70f470
 Dot {
  name Dot57
  xpos 719
  ypos 2927
 }
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_11
  xpos 685
  ypos 2962
 }
set N668bc5e0 [stack 0]
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_1k
  xpos 685
  ypos 3012
 }
clone $C6c83e2c0 {
  inputs 2
  xpos 685
  ypos 3047
  selected false
 }
set N555d67a0 [stack 0]
push $N66675af0
 Dot {
  name Dot156
  xpos 514
  ypos 2973
 }
 Dot {
  name Dot59
  xpos 514
  ypos 3079
 }
push $N668bc5e0
 Dot {
  name Dot157
  xpos 651
  ypos 2971
 }
 Dot {
  name Dot158
  xpos 651
  ypos 3086
 }
clone $C6c83e2c0 {
  inputs 2
  xpos 545
  ypos 3083
  selected false
 }
 Dot {
  name Dot1
  xpos 579
  ypos 3148
 }
set N555a4560 [stack 0]
push $N5596d690
 Dot {
  name Dot198
  xpos 288
  ypos 1122
 }
 Dot {
  name Dot191
  xpos 288
  ypos 2787
 }
set N55526c00 [stack 0]
 FrameHold {
  first_frame 1001
  name FrameHold1
  xpos 254
  ypos 2958
  disable {{!parent.boolean_4}}
  addUserKnob {20 dneg l DNeg}
  addUserKnob {26 _version l "" +STARTLINE +INVISIBLE T 1.1}
  addUserKnob {22 documentation l Documentation -STARTLINE T nukescripts.start('http://dnet/x/PwBDBg')}
  addUserKnob {26 ""}
  addUserKnob {3 first_frame_dup l "first frame" t "The first frame to use. If increment is set to 0, first frame is used at every frame of the input clip.\n\n<b>NOTE:</b> This is a duplicate of the knob on the first tab, here for convenience. Any change here will set the knob on the first tab."}
  first_frame_dup 1001
  addUserKnob {3 increment_dup l increment t "The increment to use when rendering every certain number of frames from the input clip. For example, if this is set to 5 and first frame is set to 1, Nuke only uses frames 1, 6, 11, 16, and so on from the input.\n\n<b>NOTE:</b> This is a duplicate of the knob on the first tab, here for convenience. Any change here will set the knob on the first tab."}
  addUserKnob {26 ""}
  addUserKnob {22 comp_first l "comp first" t "Set the hold frame to the comp first frame, a.k.a. in Nuke parlance, root.first_frame, or in Shotgun parlance, 'sg_head_in'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"compFirstButton\"]).compFirstButton()"}
  addUserKnob {22 cut_in l "cut in" t "Set the hold frame to the cut in frame, which is the comp first frame plus head handles, or in Shotgun parlance, 'sg_cut_in'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"cutInButton\"]).cutInButton()"}
  addUserKnob {22 cut_out l "cut out" t "Set the hold frame to the cut out frame, which is the comp last frame minus tail handles, or in Shotgun parlance, 'sg_cut_out'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"cutOutButton\"]).cutOutButton()"}
  addUserKnob {22 comp_last l "comp last" t "Set the hold frame to the comp last frame, a.k.a. in Nuke parlance, root.last_frame, or in Shotgun parlance, 'sg_tail_out'" -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"compLastButton\"]).compLastButton()"}
  addUserKnob {26 "" -STARTLINE T " "}
  addUserKnob {22 hero_frame l "hero frame" t "Set the hold frame to the hero frame from Shotgun, a.k.a. 'sg_hero_frame'. Beware that this may not always be set by the sequence supervisor. If not, go bug him or her!" T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"getHeroFrameButton\"]).getHeroFrameButton()" +STARTLINE}
  addUserKnob {22 middle_frame l "middle frame" t "Set the hold frame to the frame between the cut in and cut out." -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"middleFrameButton\"]).middleFrameButton()"}
  addUserKnob {22 current_frame l "current frame" t "Set the hold frame to the current frame as in the active viewer's timeline, a.k.a. nuke.frame()." -STARTLINE T "__import__(\"dnnuke.init.callbacks.on_user_create.tabs.framehold\", fromlist=\[\"currentFrameButton\"]).currentFrameButton()"}
  addUserKnob {26 ""}
  addUserKnob {4 get_show_shot_from l "get show/shot from" t "Which should be used to retrieve info from the database? Default is <b>environment</b>, which uses \$SHOW and \$SHOT. If you want to use this node's input, use <b>metadata</b>, which will grab the input/filename value. Or, you can type it in manually with <b>specify</b>.," M {environment metadata specify}}
  addUserKnob {6 always_refresh l "always refresh" t "If unchecked, use locally-cached frame range information if available. If checked, always refresh from the database no matter what. Certain actions will cause locally-cached frame range info to become stale and override this preference, such as changing the <i>get show/shot from</i> value." -STARTLINE}
  addUserKnob {1 hidden_foce_startline +HIDDEN}
  addUserKnob {26 show -STARTLINE +HIDDEN T " "}
  addUserKnob {26 shot -STARTLINE +HIDDEN T " "}
  addUserKnob {1 show_specify l show +HIDDEN}
  show_specify " "
  addUserKnob {1 shot_specify l shot +HIDDEN}
  shot_specify " "
  addUserKnob {26 cut_range l "cut range" +HIDDEN T " "}
  addUserKnob {26 comp_range l "comp range" +HIDDEN T " "}
  addUserKnob {26 hero_frame_value l "hero frame" +HIDDEN T " "}
  addUserKnob {6 hidden_is_stale l "" -STARTLINE +HIDDEN}
  addUserKnob {1 cut_in_specify +HIDDEN}
  addUserKnob {1 cut_out_specify +HIDDEN}
  addUserKnob {1 comp_first_specify +HIDDEN}
  addUserKnob {1 comp_last_specify +HIDDEN}
  addUserKnob {1 hero_frame_specify +HIDDEN}
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge5
  xpos 254
  ypos 3145
  disable true
 }
 Crop {
  box {0 0 512 512}
  name Crop6
  xpos 254
  ypos 3202
 }
set N55549cd0 [stack 0]
 Reformat {
  resize none
  pbb true
  name Reformat4
  xpos 254
  ypos 3226
 }
 Dilate {
  size 100
  name Dilate3
  xpos 254
  ypos 3250
 }
 Invert {
  channels alpha
  name Invert2
  xpos 254
  ypos 3286
 }
 Clamp {
  name Clamp2
  xpos 254
  ypos 3322
 }
 Dot {
  name Dot189
  xpos 288
  ypos 3382
 }
push $N555d67a0
 Switch {
  inputs 3
  which {{parent.boolean_4}}
  name Switch19
  xpos 685
  ypos 3379
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  label "in \[value in]-->out \[value out]"
  xpos 685
  ypos 3422
 }
 STMap {
  inputs 2
  uv rgb
  name STMap_apply1
  xpos 1082
  ypos 3428
 }
 Switch {
  inputs 2
  which {{parent.useaskeylight}}
  name Switch_keylight_method_321
  xpos 1082
  ypos 4943
 }
 Dot {
  name Dot76
  xpos 1116
  ypos 5011
 }
 Dot {
  name Dot35
  xpos 1116
  ypos 5057
 }
 Dot {
  name Dot41
  xpos 1116
  ypos 5724
 }
set N663e54a0 [stack 0]
 Dot {
  name Dot146
  xpos 1116
  ypos 7470
 }
set N663ea020 [stack 0]
 Dot {
  name Dot2
  xpos 1116
  ypos 7545
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xff
  label "   GRADING WHEEL INSERT   "
  xpos -2614
  ypos 6850
 }
push $N66fcf630
 Dot {
  name Dot32
  xpos 2305
  ypos 704
 }
 Reformat {
  inputs 0
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_1
  xpos -3134
  ypos 1943
 }
 StickyNote {
  inputs 0
  name StickyNote5
  tile_color 0xff
  label "   GRADING WHEEL INSERT   "
  xpos -3861
  ypos 7284
 }
 StickyNote {
  inputs 0
  name StickyNote6
  tile_color 0x101010ff
  label "REFERENCE 2th"
  note_font_size 19.25
  xpos -290
  ypos 2530
 }
push $N67521470
push $N674f7660
 Switch {
  inputs 2
  which {{"!\[exists parent.input4]"}}
  name Switch18_to_merge_with_alpha_1
  xpos -529
  ypos -516
 }
push $N653892c0
push $N571c5790
 Switch {
  inputs 2
  which {{parent.offplate}}
  name Switch_to_nothing_1
  xpos -249
  ypos 2496
 }
push $N55526c00
 Dot {
  name Dot192
  xpos 138
  ypos 2787
 }
set N65ebe540 [stack 0]
 Reformat {
  type scale
  scale 0.5
  filter Impulse
  pbb true
  name Reformat_final_Scale_1adfadsf2
  xpos -33
  ypos 2784
 }
 Dot {
  name Dot193
  xpos 1
  ypos 2814
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_14
  xpos -33
  ypos 2851
 }
set N65ed6c60 [stack 0]
 Dot {
  name Dot194
  xpos -139
  ypos 2860
 }
push $N65ebe540
 Dot {
  name Dot195
  xpos 138
  ypos 2814
 }
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_19
  xpos 104
  ypos 2849
 }
set N65eef3c0 [stack 0]
 Dot {
  name Dot196
  xpos 70
  ypos 2858
 }
push $N65ed6c60
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_2
  xpos -33
  ypos 2887
 }
 Dot {
  name Dot197
  xpos 1
  ypos 2937
 }
push $N65eef3c0
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_1k2
  xpos 104
  ypos 2885
 }
clone $C6c83e2c0 {
  inputs 2
  xpos 51
  ypos 2934
  selected false
 }
push $N55549cd0
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize none
  center false
  filter Impulse
  pbb true
  name ReformatScope_25
  xpos 32
  ypos 3197
 }
 Reformat {
  resize distort
  filter Notch
  pbb true
  name Reformat_to_original_3
  xpos 32
  ypos 3233
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xff
  label "VectorScope INSERT   "
  xpos -3869
  ypos 7001
 }
push $N67c3f7c0
 Dot {
  name Dot115
  xpos -4435
  ypos -1100
 }
 Dot {
  name Dot118
  xpos -4435
  ypos -911
 }
 Dot {
  name Dot154
  xpos -4435
  ypos 8153
 }
push $N663ea020
 Dot {
  name Dot201
  xpos -3783
  ypos 7470
 }
set N65f5ea40 [stack 0]
 Dot {
  name Dot202
  xpos -3783
  ypos 7564
 }
push $N65f5ea40
push $N663e54a0
push $N56bbef80
 Dot {
  name Dot56
  xpos -3926
  ypos -390
 }
 Dot {
  name Dot114
  xpos -3926
  ypos -123
 }
 Dot {
  name Dot139
  xpos -3919
  ypos 5385
 }
set N65f71840 [stack 0]
 Dot {
  name Dot145
  xpos -3495
  ypos 5385
 }
 Saturation {
  name Saturation_FOR_PREVIEW_1234
  xpos -3529
  ypos 5454
  disable {{!parent.enablegrading}}
 }
 Colorspace {
  colorspace_out CIE-XYZ
  name Colorspace7
  xpos -3529
  ypos 5491
  disable {{!parent.enablegrading}}
 }
 Grade {
  white {1 {parent.Tint*0.1+0.9} {parent.Temperature*0.5+0.5} 1}
  black_clamp false
  name Grade5_temp_and_tint_12
  xpos -3529
  ypos 5515
  disable {{parent.Colorspace7.disable}}
 }
 Colorspace {
  colorspace_in CIE-XYZ
  name Colorspace8
  xpos -3529
  ypos 5545
  disable {{!parent.enablegrading}}
 }
 Expression {
  temp_name0 Gamma
  temp_expr0 parent.Contrast
  expr0 "r<1&&r>0?r<0.5?pow(r,Gamma)*pow(0.5, 1-Gamma):1-pow(1-r,Gamma)*pow(0.5, 1-Gamma):r"
  expr1 "g<1&&g>0?g<0.5?pow(g,Gamma)*pow(0.5, 1-Gamma):1-pow(1-g,Gamma)*pow(0.5, 1-Gamma):g"
  expr2 "b<1&&b>0?b<0.5?pow(b,Gamma)*pow(0.5, 1-Gamma):1-pow(1-b,Gamma)*pow(0.5, 1-Gamma):b"
  name Expression9
  xpos -3529
  ypos 5569
  disable {{parent.Contrast==1?1:1-parent.enablegrading}}
 }
 Shuffle {
  alpha white
  name Shuffle20
  xpos -3529
  ypos 5593
 }
 Dot {
  name Dot19
  xpos -3495
  ypos 5697
 }
set N65fe84a0 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos -3529
  ypos 5715
  disable {{"!\[exists parent.input1]"}}
 }
 Premult {
  name Premult7
  xpos -3529
  ypos 5768
 }
 Dot {
  name Dot43
  xpos -3495
  ypos 5815
 }
set N660033f0 [stack 0]
 Dot {
  name Dot147
  xpos -3495
  ypos 6826
 }
 Dot {
  name Dot3
  xpos -3495
  ypos 7311
 }
push $N65f71840
 Dot {
  name Dot27
  xpos -3919
  ypos 5605
 }
set N66011550 [stack 0]
 Dot {
  name Dot40
  xpos -3800
  ypos 5605
 }
push $N65fe84a0
 Switch {
  inputs 2
  which {{"\[exists parent.input1]"}}
  name no_grading_if_there_is_Roto_123
  xpos -3834
  ypos 5694
 }
push $N66011550
 Switch {
  inputs 2
  which 1
  name Switch_Enable_Grading_with_no_Roto_212
  xpos -3953
  ypos 5694
  disable {{!parent.enablegrading}}
 }
 Dot {
  name Dot148
  xpos -3919
  ypos 6986
 }
set N6602af50 [stack 0]
 Dot {
  name Dot152
  xpos -4007
  ypos 6986
 }
set N6602f990 [stack 0]
 Dot {
  name Dot153
  xpos -4007
  ypos 7127
 }
push $N660033f0
 Dot {
  name Dot151
  xpos -3007
  ypos 5815
 }
 Premult {
  name Premult2
  xpos -3041
  ypos 5906
 }
 Dot {
  name Dot45
  xpos -3007
  ypos 5930
 }
set N66045ef0 [stack 0]
 Dot {
  name Dot132
  xpos -3115
  ypos 5930
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  black_outside true
  pbb true
  name ReformatScope_24
  xpos -3149
  ypos 5956
 }
 Dot {
  name Dot133
  xpos -3115
  ypos 6025
 }
push $N66045ef0
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_26
  xpos -3041
  ypos 5959
 }
clone $C6c83e2c0 {
  inputs 2
  xpos -3041
  ypos 6022
  selected false
 }
 Dot {
  name Dot134
  xpos -3007
  ypos 6183
 }
set N6607a1d0 [stack 0]
clone $C67e6fc70 {
  xpos -3041
  ypos 6216
  selected false
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace9
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -3041
  ypos 6272
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle4
  xpos -3041
  ypos 6320
 }
clone $C66fcf630 {
  xpos -3041
  ypos 6394
  selected false
 }
 AdjBBox {
  numpixels {{parent.AdjBBox_Color_Data_1.numpixels}}
  name AdjBBox1
  xpos -3041
  ypos 6418
  disable {{!parent.Reformat_to_clamp_values.disable}}
 }
push $N6607a1d0
 Dot {
  name Dot135
  xpos -3156
  ypos 6183
 }
 Dot {
  name Dot136
  xpos -3156
  ypos 6451
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap1
  xpos -3041
  ypos 6442
 }
 Premult {
  name Premult10
  xpos -3041
  ypos 6515
  disable true
 }
 Dot {
  name Dot137
  xpos -3007
  ypos 6553
 }
set N55466940 [stack 0]
 Dot {
  name Dot138
  xpos -3284
  ypos 6553
 }
 Dilate {
  size 1.5
  name Dilate4
  xpos -3318
  ypos 6590
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle17
  xpos -3318
  ypos 6626
 }
push $N55466940
 Merge2 {
  inputs 2
  operation under
  mix 0.215
  name Merge10
  xpos -3041
  ypos 6632
  disable true
 }
 Grade {
  multiply {4 0 0 1}
  multiply_panelDropped true
  name Grade19
  xpos -3041
  ypos 6656
  disable true
 }
 Reformat {
  type scale
  black_outside true
  pbb true
  name Reformat_final_Scale_12
  xpos -3041
  ypos 6833
 }
 set C5515d4b0 [stack 0]
 Dot {
  name Dot140
  xpos -3007
  ypos 6857
 }
 ColorWheel {
  inputs 0
  format {{{parent.ReformatScope_1.format}}}
  gamma 0.45
  rotate -110.12
  name ColorWheel2
  xpos -2748
  ypos 3123
 }
 Saturation {
  mode Maximum
  name Saturation_colorwheel
  xpos -2748
  ypos 3199
 }
 Mirror2 {
  flip true
  name Mirror2_2
  xpos -2748
  ypos 3223
 }
 Unpremult {
  name Unpremult1
  xpos -2748
  ypos 3247
 }
 Dot {
  name Dot33
  xpos -2714
  ypos 3287
 }
set N55196f50 [stack 0]
 Dilate {
  channels alpha
  size -1.6
  name Dilate8
  xpos -2981
  ypos 3278
 }
 Blur {
  channels alpha
  size 2
  name Blur6
  xpos -2977
  ypos 3314
 }
set N551a6b90 [stack 0]
 Invert {
  channels alpha
  name Invert1
  xpos -2977
  ypos 3397
 }
set N551b4280 [stack 0]
 Dot {
  name Dot161
  xpos -2943
  ypos 3704
 }
 Dot {
  name Dot165
  xpos -2943
  ypos 3986
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0 0 0}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_212
  xpos -2362
  ypos 3631
 }
 Constant {
  inputs 0
  channels rgb
  color {0 1 0 0}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_1
  xpos -2255
  ypos 3625
 }
 Constant {
  inputs 0
  color {1 1 0 1}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_4
  xpos -2457
  ypos 3629
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0 1 0}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_5
  xpos -2255
  ypos 3558
 }
 Constant {
  inputs 0
  color {0 0 1 1}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_2
  xpos -2362
  ypos 3565
 }
 Constant {
  inputs 0
  color {0 1 1 1}
  color_panelDropped true
  format "12 12 0 0 12 12 1 12px"
  name Constant_Colors_3
  xpos -2456
  ypos 3559
 }
 ContactSheet {
  inputs 6
  width 30
  height 30
  rows 2
  columns 3
  gap -2
  startframe 1
  endframe 1
  name ContactSheet1
  xpos -2373
  ypos 3737
 }
 Multiply {
  value 0.5
  name Multiply5
  xpos -2373
  ypos 3771
 }
 Dot {
  name Dot107
  xpos -2339
  ypos 3815
 }
set N55215090 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace4
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -2263
  ypos 3800
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle12
  xpos -2263
  ypos 3848
 }
push $N55215090
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap6
  xpos -2373
  ypos 3848
 }
 Reformat {
  format "1024 1024 0 0 1024 1024 1 square_1K"
  scale 0.5
  resize distort
  center false
  filter Impulse
  pbb true
  name Reformat4_512_2
  xpos -2373
  ypos 3884
 }
 Dilate {
  size -5
  name Dilate2
  xpos -2373
  ypos 3920
 }
 Multiply {
  value 0.54
  name Colorwheel_Brightess_1
  xpos -2587
  ypos 3920
 }
 set C5506ebb0 [stack 0]
 Reformat {
  inputs 0
  format {{{parent.ReformatScope_1.format}}}
  pbb true
  name Reformat_for_wheel_1
  xpos -3170
  ypos 3479
 }
 Dot {
  name Dot13
  xpos -3136
  ypos 3515
 }
set N550897e0 [stack 0]
 Transform {
  center {512 512}
  shutteroffset centred
  name Transform9
  xpos -3170
  ypos 3563
 }
 Expression {
  expr0 "sin(hypot(x-center.x, y-center.y) / size)"
  name Ringing1
  tile_color 0xffffff
  label "\[value expr3]"
  xpos -3170
  ypos 3587
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {512 512}
  addUserKnob {7 size R 0.1 20}
  size 15.0648
 }
 Clamp {
  maximum 0
  MaxClampTo_enable true
  name Clamp1
  xpos -3170
  ypos 3611
 }
 Dot {
  name Dot14
  xpos -3136
  ypos 3901
 }
push $N550897e0
 Dot {
  name Dot15
  xpos -3037
  ypos 3515
 }
 Rectangle {
  area {3.819999933 509.9 1020.080017 514}
  name Rectangle3
  xpos -3071
  ypos 3533
 }
 Rectangle {
  area {513.8400269 4 510.922 1020.840027}
  name Rectangle4
  xpos -3071
  ypos 3557
 }
 Transform {
  center {512 512}
  shutteroffset centred
  name Transform10
  xpos -3071
  ypos 3581
 }
 Dot {
  name Dot22
  xpos -3037
  ypos 3605
 }
set N5e0f9d20 [stack 0]
push $N55196f50
 Dilate {
  channels alpha
  size -0.6
  name Dilate5
  xpos -2748
  ypos 3311
 }
 Blur {
  channels alpha
  size 2
  name Blur8
  xpos -2748
  ypos 3347
 }
push $N551b4280
 ChannelMerge {
  inputs 2
  operation in
  name ChannelMerge1
  xpos -2748
  ypos 3391
 }
 Grade {
  multiply 0.52
  name Grade8
  xpos -2748
  ypos 3460
 }
set N55117740 [stack 0]
 Grade {
  inputs 1+1
  channels rgba
  add {0 0 0 0.13}
  add_panelDropped true
  maskChannelMask rgba.red
  name Grade9
  xpos -2748
  ypos 3602
 }
push $N5e0f9d20
push $N55117740
 Dot {
  name Dot69
  xpos -2555
  ypos 3463
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle9
  xpos -2589
  ypos 3481
 }
 Multiply {
  value 0.3
  name Multiply3
  xpos -2589
  ypos 3566
 }
 Grade {
  inputs 1+1
  channels rgba
  add {0.5 0.5 0.5 0.13}
  add_panelDropped true
  maskChannelMask rgba.red
  name Grade12
  xpos -2589
  ypos 3602
 }
 Dot {
  name Dot108
  xpos -2555
  ypos 3669
 }
 Switch {
  inputs 2
  which {{parent.colorless}}
  name Switch_colorless
  xpos -2748
  ypos 3666
 }
clone $C5506ebb0 {
  xpos -2748
  ypos 3827
  selected false
 }
 Premult {
  name Premult1
  xpos -2748
  ypos 3874
 }
 Grade {
  inputs 1+1
  add {0.016664 0.016664 0.016664 0}
  add_panelDropped true
  maskChannelMask rgba.red
  name Grade14
  xpos -2748
  ypos 3898
  disable true
 }
 Merge2 {
  inputs 2
  bbox A
  name Merge_targets_31
  xpos -2748
  ypos 3926
  disable {{!parent.showtargets}}
 }
 Grade {
  inputs 1+1
  white 4
  multiply 4
  name Grade21
  xpos -2748
  ypos 3983
 }
 Glow2 {
  tint 0.37
  tolerance 0.27
  brightness 0.75
  size 7.5
  name Glow3
  xpos -2748
  ypos 4020
  disable {{!parent.boolean_1}}
 }
 Glow2 {
  tint 0.37
  brightness 0.75
  size 20.5
  name Glow2
  xpos -2748
  ypos 4044
  disable {{!parent.boolean_1}}
 }
 Dot {
  name Dot47
  xpos -2714
  ypos 4088
 }
set N54fdcc40 [stack 0]
 Dot {
  name Dot48
  xpos -2824
  ypos 4088
 }
 Reformat {
  type scale
  scale 0.5
  pbb true
  name Reformat4_512_1
  xpos -2858
  ypos 4125
 }
push $N54fdcc40
clone $C6c83e2c0 {
  inputs 2
  xpos -2748
  ypos 4125
  selected false
 }
 Constant {
  inputs 0
  channels rgb
  color {0 0 0 0}
  format "256 256 0 0 256 256 1 square_256"
  name Constant_to_pick_1
  xpos -1604
  ypos 1816
 }
 Dot {
  name Dot60
  xpos -1570
  ypos 1994
 }
set N55006020 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -1604
  ypos 2012
 }
 Shuffle {
  red green
  green blue
  blue black
  name Shuffle8
  xpos -1604
  ypos 2060
 }
clone $C66fcf630 {
  xpos -1604
  ypos 2096
  selected false
 }
push $N55006020
 Dot {
  name Dot61
  xpos -1796
  ypos 1994
 }
 Dot {
  name Dot62
  xpos -1796
  ypos 2129
 }
 BlinkScript {
  inputs 2
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InverseSTKernel\" iterate pixelWise 9753518d3989a0c1fb92c06d5d19df80c62a16f5bafddfa2581a1a4683595474 3 \"src\" Read Point \"stmap\" Read Point \"dst\" Write Random 1 \"resolution\" Float 2 AAAAAAAAAAA= 1 \"resolution\" 2 1 0"
  kernelSource "// Original Kernel by Mads Hagbarth, modified to use STMaps by Erwan Leroy\n\nkernel InverseSTKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src;\n  Image<eRead, eAccessPoint, eEdgeNone> stmap;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float2 resolution;\n\n\n  void process() \{\n    float2 uv;\n    uv.x = ((stmap().x * resolution.x - 0.5f));\n    uv.y = ((stmap().y * resolution.y - 0.5f));\n    //always make sure that you don't write outside bounds\n    //as it will usually crash nuke.\n    if (dst.bounds.inside(uv.x,uv.y)) \{ \n      dst(uv.x,uv.y) = src(); \n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  InverseSTKernel_resolution {{width} {height}}
  rebuild_finalise ""
  name BlinkScript_Reverse_Stmap2
  xpos -1604
  ypos 2120
 }
 Dot {
  name Dot63
  xpos -1570
  ypos 2196
 }
 Dot {
  name Dot167
  xpos -1570
  ypos 2274
 }
set N54e64680 [stack 0]
 Dilate {
  size 0.6
  name Dilate18
  xpos -1604
  ypos 2629
 }
push $N54e64680
 Dot {
  name Dot166
  xpos -1663
  ypos 2274
 }
 Dilate {
  size 12
  name Dilate10
  xpos -1697
  ypos 2315
 }
set N54e78e60 [stack 0]
 EdgeDetectWrapper {
  blursize 3
  name EdgeDetect3
  xpos -1869
  ypos 2315
 }
 Dilate {
  size -3
  name Dilate16
  xpos -1869
  ypos 2357
 }
 Grade {
  channels alpha
  multiply 2.55
  name Grade23
  xpos -1869
  ypos 2404
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle19
  xpos -1869
  ypos 2453
 }
 Grade {
  multiply {4 1 -1 1}
  multiply_panelDropped true
  name Grade27
  xpos -1869
  ypos 2504
 }
 Premult {
  name Premult12
  xpos -1869
  ypos 2573
 }
push $N54e78e60
 Grade {
  channels rgba
  multiply {0.5 0.5 0.5 0.002}
  multiply_panelDropped true
  name Grade24
  xpos -1698
  ypos 2465
 }
 Merge2 {
  inputs 2
  name Merge17
  xpos -1698
  ypos 2573
 }
 Merge2 {
  inputs 2
  name Merge18
  xpos -1698
  ypos 2635
 }
 Crop {
  box {0 0 256 256}
  name Crop4
  xpos -1698
  ypos 2684
 }
 Clamp {
  channels rgba
  name Clamp5
  xpos -1698
  ypos 2830
 }
 Dot {
  name Dot64
  xpos -1664
  ypos 2860
 }
set N54f202f0 [stack 0]
 Dot {
  name Dot65
  xpos -1782
  ypos 2860
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_5
  xpos -1816
  ypos 2883
 }
 Dot {
  name Dot66
  xpos -1782
  ypos 2919
 }
push $N54f202f0
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_6
  xpos -1698
  ypos 2878
 }
clone $C6c83e2c0 {
  inputs 2
  xpos -1698
  ypos 2916
  selected false
 }
 Dot {
  name Dot67
  xpos -1664
  ypos 2973
 }
 Multiply {
  channels rgba
  value {{parent.double}}
  name Multiply_intensity_sampler
  xpos -1326
  ypos 2970
 }
 Dot {
  name Dot68
  xpos -1159
  ypos 2973
 }
 Dot {
  name Dot104
  xpos -693
  ypos 2973
 }
set N54d69b80 [stack 0]
 Dot {
  name Dot131
  xpos -693
  ypos 2997
 }
push $N54d69b80
push $N56fbac20
 Dot {
  name Dot190
  xpos -350
  ypos 2847
 }
 Grade {
  inputs 1+1
  channels rgba
  multiply 11
  add {1 1 1 0}
  add_panelDropped true
  black_clamp false
  name Grade10
  xpos -384
  ypos 2968
  disable {{!parent.activatesampler}}
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -384
  ypos 2994
  disable {{!parent.activatesampler}}
 }
 Dot {
  name Dot171
  xpos -350
  ypos 3037
 }
 Unpremult {
  name Unpremult3
  xpos -384
  ypos 3100
 }
 Gamma {
  value 1.35
  name Gamma_overall
  xpos -384
  ypos 3124
 }
 Multiply {
  value 4
  name Grade_brightness_1
  xpos -384
  ypos 3160
 }
 Premult {
  name Premult9
  xpos -384
  ypos 3196
 }
 Dot {
  name Dot39
  xpos -350
  ypos 3563
 }
set N54dc5520 [stack 0]
 Dot {
  name Dot173
  xpos -463
  ypos 3562
 }
 Dot {
  name Dot174
  xpos -463
  ypos 3987
 }
push $N555a4560
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 545
  ypos 3406
 }
 Dot {
  name Dot141
  xpos 370
  ypos 3421
 }
 Dot {
  name Dot31
  xpos 370
  ypos 3507
 }
 Dot {
  name Dot70
  xpos 370
  ypos 3563
 }
set N54ded480 [stack 0]
 Dot {
  name Dot50
  xpos 370
  ypos 3593
 }
set N54df2000 [stack 0]
 Dot {
  name Dot51
  xpos 370
  ypos 3633
 }
set N54df6b80 [stack 0]
 Dot {
  name Dot20
  xpos 370
  ypos 3679
 }
set N54dfb700 [stack 0]
 Dot {
  name Dot7
  xpos 370
  ypos 3697
 }
 Multiply {
  channels rgba
  value 0.06
  name Multiply_maskopacity
  xpos 336
  ypos 3757
 }
 Grade {
  multiply_panelDropped true
  name Grade20
  xpos 336
  ypos 3781
 }
 Reformat {
  inputs 0
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_8
  xpos 484
  ypos 3620
 }
 Ramp {
  p0 {100 -1}
  p1 {100 934}
  type smooth
  name Ramp1
  xpos 484
  ypos 3656
 }
 Constant {
  inputs 0
  channels rgb
  color {0.9909453392 0.331563741 0.1530252844 2.867353396e-05}
  color_panelDropped true
  format "1024 1024 0 0 1024 1024 1 square_1K"
  name Constant1
  xpos 615
  ypos 3584
 }
 Grade {
  inputs 1+1
  multiply {1.15 0.48 0.32 1}
  multiply_panelDropped true
  invert_mask true
  name Grade22
  xpos 615
  ypos 3656
 }
 Dot {
  name Dot162
  xpos 649
  ypos 3707
 }
set N54c56a30 [stack 0]
 Dot {
  name Dot163
  xpos 525
  ypos 3707
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_2
  xpos 491
  ypos 3725
 }
 Dot {
  name Dot164
  xpos 525
  ypos 3766
 }
push $N54c56a30
 Reformat {
  format {{{parent.ReformatScope_1.format}}}
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_4
  xpos 615
  ypos 3725
 }
clone $C6c83e2c0 {
  inputs 2
  xpos 615
  ypos 3763
  selected false
 }
 Dot {
  name Dot37
  xpos 649
  ypos 3830
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy8
  xpos 336
  ypos 3821
 }
 Premult {
  name Premult11
  xpos 336
  ypos 3910
 }
push $N54dc5520
 Merge2 {
  inputs 2
  name Merge_Mask_preview4324
  xpos -384
  ypos 3910
  disable {{"!\[exists parent.input2]"}}
 }
 Switch {
  inputs 2
  which {{parent.useaskeylight}}
  name Switch_keylight_method_1
  xpos -384
  ypos 3984
 }
push $N54dfb700
 Dilate {
  size -1
  name Dilate1
  xpos 147
  ypos 3670
 }
push $N54df6b80
 EdgeDetectWrapper {
  name EdgeDetect1
  xpos 147
  ypos 3624
 }
push $N54df2000
push $N54ded480
push $N54dc5520
 Saturation {
  inputs 1+1
  saturation 0.78
  name Saturation1
  xpos 3
  ypos 3560
 }
 Multiply {
  inputs 1+1
  value {0.294 0.294 0.294 0.24}
  value_panelDropped true
  name Multiply2
  xpos 3
  ypos 3584
 }
 Grade {
  inputs 1+1
  add {1 0 0 0}
  add_panelDropped true
  name Grade18
  xpos 3
  ypos 3630
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge12
  xpos 3
  ypos 3676
  disable {{parent.boolean_3}}
 }
 Dot {
  name Dot142
  xpos 37
  ypos 4102
 }
 Switch {
  inputs 2
  which {{!parent.enablegrading}}
  name Switch_grading_mode
  xpos -384
  ypos 4098
 }
 Dot {
  name Dot155
  xpos -350
  ypos 4204
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge16
  xpos -2748
  ypos 4201
 }
 Reformat {
  type scale
  resize none
  center false
  filter Impulse
  black_outside true
  pbb true
  name Reformat_to_clamp_values
  xpos -2748
  ypos 4266
  disable {{parent.noclampvalues}}
 }
 Dot {
  name Dot96
  xpos -2714
  ypos 4314
 }
set N54b41ba0 [stack 0]
 Dot {
  name Dot95
  xpos -2550
  ypos 4314
 }
 Dot {
  name Dot94
  xpos -2551
  ypos 4420
 }
 AdjBBox {
  numpixels 5
  name AdjBBox3
  xpos -2585
  ypos 4438
 }
 Dot {
  name Dot99
  xpos -2551
  ypos 4873
 }
push $N551a6b90
 Dot {
  name Dot54
  xpos -3251
  ypos 3323
 }
 Dot {
  name Dot55
  xpos -3251
  ypos 4246
 }
 Dot {
  name Dot44
  xpos -3251
  ypos 4326
 }
set N54b65ef0 [stack 0]
 Dot {
  name Dot46
  xpos -3354
  ypos 4326
 }
 Reformat {
  type scale
  scale 0.5
  pbb true
  name Reformat3
  xpos -3388
  ypos 4363
 }
push $N54b65ef0
clone $C6c83e2c0 {
  inputs 2
  xpos -3285
  ypos 4363
  selected false
 }
 Dot {
  name Dot26
  xpos -3251
  ypos 4437
 }
set N54b866f0 [stack 0]
 Dot {
  name Dot25
  xpos -3251
  ypos 4474
 }
 Dot {
  name Dot97
  xpos -3251
  ypos 4676
 }
 Constant {
  inputs 0
  channels rgb
  format "1024 1024 0 0 1024 1024 1 square_1K"
  name Constant_to_fill_space_23
  xpos -3078
  ypos 4493
 }
 Dot {
  name Dot90
  xpos -3044
  ypos 4565
 }
set N54b9d570 [stack 0]
 Dot {
  name Dot91
  xpos -3152
  ypos 4565
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  resize distort
  filter Impulse
  pbb true
  name ReformatScope_15
  xpos -3186
  ypos 4586
 }
 Dot {
  name Dot92
  xpos -3152
  ypos 4622
 }
push $N54b9d570
clone $C6c83e2c0 {
  inputs 2
  xpos -3078
  ypos 4619
  selected false
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -3078
  ypos 4667
 }
 Premult {
  name Premult6
  xpos -3078
  ypos 4770
 }
push $N54b41ba0
 Dot {
  name Dot101
  xpos -2931
  ypos 4314
 }
 Dot {
  name Dot102
  xpos -2931
  ypos 4802
 }
 Merge2 {
  inputs 2
  operation under
  name Merge9
  xpos -3078
  ypos 4799
 }
 Dot {
  name Dot100
  xpos -3044
  ypos 4849
 }
push $N54b41ba0
 Dot {
  name Dot103
  xpos -2714
  ypos 4370
 }
set N54bf6f70 [stack 0]
 Dot {
  name Dot93
  xpos -2845
  ypos 4370
 }
push $N54b866f0
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge2
  xpos -2879
  ypos 4422
 }
push $N54bf6f70
 Grade {
  inputs 1+1
  channels alpha
  add {{parent.opacity}}
  name Grade_Opacity_1
  xpos -2748
  ypos 4428
 }
 Dot {
  name Dot98
  xpos -2709
  ypos 4802
 }
 Switch {
  inputs 2
  which {{parent.opaque}}
  name Switch_opaque_23
  xpos -2743
  ypos 4846
 }
 Switch {
  inputs 2
  which {{parent.darkmode}}
  name Switch_transparency_23
  xpos -2743
  ypos 4870
 }
clone $C5515d4b0 {
  xpos -2743
  ypos 5070
  selected false
 }
 Dot {
  name Dot34
  xpos -2709
  ypos 5252
 }
 Dot {
  name Dot170
  xpos -2709
  ypos 5883
 }
 Dot {
  name Dot49
  xpos -2709
  ypos 6727
 }
 Merge2 {
  inputs 2
  name Merge11
  xpos -2743
  ypos 6854
  disable {{!parent.enablegrading}}
 }
 Dot {
  name Dot143
  xpos -2709
  ypos 7027
 }
set N54a60370 [stack 0]
push $N6602af50
 Merge2 {
  inputs 2
  name Merge_with_the_plate
  xpos -3953
  ypos 7023
  disable {{!parent.activate}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy5
  xpos -3953
  ypos 7118
 }
push $N6602f990
 Dot {
  name Dot149
  xpos -4070
  ypos 6986
 }
 Dot {
  name Dot150
  xpos -4070
  ypos 7173
 }
 Switch {
  inputs 2
  which {{"\$gui ? 1 : 0"}}
  name Switch_gui_off
  xpos -3953
  ypos 7170
 }
 Merge2 {
  inputs 2
  name Merge14
  xpos -3953
  ypos 7308
  disable {{!parent.enablegrading}}
 }
 ShuffleCopy {
  inputs 2
  red alpha
  out alpha
  name ShuffleCopy_output
  xpos -3953
  ypos 7461
  disable {{"!\[exists parent.input2]"}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos -3953
  ypos 7555
  disable {{!parent.boolean_4}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy6
  xpos -3953
  ypos 8144
  disable {{!parent.keepmyalpha}}
 }
 Dot {
  name Dot200
  xpos -3919
  ypos 8455
 }
set N54ad1ce0 [stack 0]
push $N54ad1ce0
 Dot {
  name Dot38
  xpos -3776
  ypos 8455
 }
push $N54a60370
 Dot {
  name Dot184
  xpos -2709
  ypos 8544
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -3810
  ypos 8535
  disable {{!parent.boolean_4}}
 }
 Switch {
  inputs 2
  which {{-(pulldown)+1}}
  name Switch_ScopemodeOnly_123
  xpos -3953
  ypos 8541
 }
 Output {
  name Output1
  xpos -3953
  ypos 8710
 }
push $N67f88c30
push $N5f4f7720
 Viewer {
  inputs 2
  frame_range 1041-1100
  overscan 300
  center_fstop 0
  viewerProcess Film
  far 100000
  name Viewer1
  xpos 871
  ypos 2834
 }
push $N65180d70
 NoOp {
  name NoOp2
  xpos 3633
  ypos -1528
  addUserKnob {20 User}
  addUserKnob {6 boolean l DetectColorOnly +STARTLINE}
  boolean {{"\[string first \".r\" \[channels \[input this 0]]]>-1"}}
 }
push $N5f4f7720
 NoOp {
  name NoOp1
  xpos 2832
  ypos -1528
  addUserKnob {20 User}
  addUserKnob {6 boolean l DetectColorOnly +STARTLINE}
  boolean {{"\[string first \".r\" \[channels \[input this 0]]]>-1"}}
 }
push $N5e1f8b60
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode4
  xpos 2938
  ypos 1391
 }
push $N5fff74e0
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode1
  xpos 3776
  ypos 1602
 }
push $N55866c50
 FilterErode {
  size -0.4
  filter gaussian
  name FilterErode3
  xpos -776
  ypos 1142
 }
end_group
Merge2 {
 inputs 2
 name Merge3
 selected true
 xpos -680
 ypos 3763
}
set N554243d0 [stack 0]
Merge2 {
 inputs 2
 operation mask
 name Merge1
 selected true
 xpos -538
 ypos 3870
}
Read {
 inputs 0
 file_type png
 file /u/jorc/Desktop/huemaskicon.png
 localizationPolicy off
 format "512 512 0 0 512 512 1 square_512"
 proxy_format "640 480 0 0 640 480 1 PC_Video"
 origset true
 on_error black
 name Read1
 selected true
 xpos -671
 ypos 3991
 addUserKnob {20 Ivy}
 addUserKnob {22 ivy_documentation l "Ivy Documentation" t "Open IvyTab documentation page in your web browser" T "__import__('dnnuke.utils.asst.common', fromlist=\['openDocsName']).openDocsName('IvyTab')" +STARTLINE}
 addUserKnob {26 divider4 l "" +STARTLINE}
 addUserKnob {1 _ivyVals l "" +STARTLINE +HIDDEN}
 _ivyVals "\{'ivy_job': '', 'ivy_usemanualuri': False, 'leafname': '', 'ivy_vnum': 0, 'ivy_twignametags': \{\}, 'ivy_shot': '', 'ivy_regex': False, 'ivy_type': '', 'ivy_versionquery': '', 'spider_uri': ''\}"
 addUserKnob {52 ivyTab l "" -STARTLINE T "__import__('nukescripts').panels.WidgetKnob(__import__('dnnuke.core.ivy.tab.widget.query', fromlist=\['getBoundKnob']).getBoundKnob(nuke.thisNode()))"}
 addUserKnob {1 _ivyFile l "" +STARTLINE +HIDDEN +INVISIBLE}
 _ivyFile "no results were found for query (Leaf) (WHERE Leaf.job = 'jorc' AND Leaf.location = '/u/jorc/Desktop/huemaskicon.png' AND Leaf.deleted = '0000-00-00 00:00:00' AND Leaf.archived = '0000-00-00 00:00:00' AND Leaf.provisional = '0')"
 addUserKnob {78 _expressions l "" -STARTLINE +HIDDEN +INVISIBLE n 1}
 addUserKnob {26 divider0 l "" +STARTLINE}
 addUserKnob {20 dbinfo l "DB Info" n 1}
 dbinfo 0
 addUserKnob {1 twig_dnuuid l "Twig Id"}
 addUserKnob {1 stalk_dnuuid l "Stalk Id"}
 addUserKnob {1 twigtype_dnuuid l "Twig Type Id"}
 addUserKnob {1 leaf_dnuuid l "Leaf Id"}
 addUserKnob {26 divider1 l "" +STARTLINE}
 addUserKnob {1 twigtype l "Twig Type"}
 addUserKnob {1 leaf_label l Leaf}
 addUserKnob {1 ivy_version l Version}
 addUserKnob {43 ivy_notes l Notes}
 addUserKnob {26 divider2 l "" +STARTLINE}
 addUserKnob {1 build_label l "Build Label"}
 addUserKnob {20 dbinfoEndGroup l "DB Info" n -1}
}
push $cut_paste_input
Group {
 name LUE4NUKE
 tile_color 0x2c00ffff
 selected true
 xpos -283
 ypos 4002
 disable true
 addUserKnob {20 Primaries}
 addUserKnob {26 Credits l "" +STARTLINE T "<img src=C:/Users/postyr.SKOFABRIKKEN/.nuke/LUE/lue.png>"}
 addUserKnob {22 Init_logo l INVISIBLE +INVISIBLE T "DotNuke = nukescripts.getNukeUserFolder() \nif os.path.isfile(DotNuke+\"/LUE/lue.png\"):\n\tnuke.thisNode().knob(\"Credits\").setValue(\"<img src=\"+DotNuke+\"/LUE/lue.png>\")" +STARTLINE}
 addUserKnob {52 Init_Init_logo T "nuke.thisNode().knob(\"Init_logo\").execute()" +STARTLINE}
 addUserKnob {22 CurveKnobSetup l INVISIBLE +INVISIBLE T "#Initialize Curve Knobs\n#Need to clean up old code!!!\n\nthisNode = nuke.thisNode()\n\ntry:\n\tthisNode.knob(\"lut\").delCurve(\"sat_thrsh\")\n\tthisNode.knob(\"lut\").delCurve(\"amount\")\n\tthisNode.knob(\"lut\").addCurve(\"HueVsHue\")\n\tthisNode.knob(\"lut\").addCurve(\"HueVsSat\")\n\tthisNode.knob(\"lut\").addCurve(\"HueVsLum\")\n\tthisNode.knob(\"lut\").addCurve(\"SatVsSat\")\n\tthisNode.knob(\"lut\").addCurve(\"SatVsLum\")\n\tthisNode.knob(\"lut\").addCurve(\"BlackAndWhite\")\n\n\tdef RunNode():\n\t\tif nuke.thisKnob().Class() == \"LookupCurves_Knob\":\n\t\t\tthisNode = nuke.thisNode().fullName().split(\".\")\[-2]\n\t\t\twith nuke.Root():\n\t\t\t\tinputNode = nuke.toNode(thisNode)\n\t\t\t\tcurve = inputNode.knob(\"lut\").toScript()\n\t\t\twith inputNode:\n\t\t\t\tmyCurve = curve.splitlines()\[0]\n\t\t\t\tnuke.toNode(inputNode.name()+\".HueVsHue\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[1]\n\t\t\t\tnuke.toNode(inputNode.name()+\".HueVsSat\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[2]\n\t\t\t\tnuke.toNode(inputNode.name()+\".HueVsLum\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[3]\n\t\t\t\tnuke.toNode(inputNode.name()+\".SatVsSat\").knob(\"lut\").editCurve(\"master\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[4]\n\t\t\t\tnuke.toNode(inputNode.name()+\".SatVsLum\").knob(\"lut\").editCurve(\"master\",myCurve)            \n\t\t\t\tmyCurve = curve.splitlines()\[5]\n\t\t\t\tnuke.toNode(inputNode.name()+\".BlackAndWhite\").knob(\"lut\").editCurve(\"amount\",myCurve) \n\t\t\t\tnuke.toNode(\"HueKeyer2\").knob('knobChanged').setValue(\"RunNode()\")\n\t\t\t#help(nuke.toNode(\"HueKeyer1\").knob('knobChanged').setValue)\nexcept:\n    pass\n\n\n#Hue VS Hue\nwith thisNode:\n    curve = nuke.toNode(\"HueVsHue\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"HueVsHue\",myCurve\[8:-1])\n\n#Hue Vs Sat\nwith thisNode:\n    curve = nuke.toNode(\"HueVsSat\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"HueVsSat\",myCurve\[8:-1])\n\n#Hue Vs Lum\nwith thisNode:\n    curve = nuke.toNode(\"HueVsLum\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"HueVsLum\",myCurve\[8:-1])\n\n#Sat Vs Sat\nwith thisNode:\n    curve = nuke.toNode(\"SatVsSat\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"SatVsSat\",myCurve\[8:-1])\n\n#Sat Vs Lum\nwith thisNode:\n    curve = nuke.toNode(\"SatVsLum\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"SatVsLum\",myCurve\[8:-1])\n\n\n#Hue Vs Lum\nwith thisNode:\n    curve = nuke.toNode(\"BlackAndWhite\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"BlackAndWhite\",myCurve\[13:-1])\n\n\n\n#curve = nuke.toNode(\"HueKeyer1\").knob(\"lut\").toScript()\n#myCurve = curve.splitlines()\[2]\n#print myCurve\n#nuke.toNode(\"HueKeyer2\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\n\n\n\ndef RunNode():\n\tif nuke.thisKnob().Class() == \"LookupCurves_Knob\":\n\t\tthisNode = nuke.thisNode().fullName().split(\".\")\[-2]\n\t\twith nuke.Root():\n\t\t\tinputNode = nuke.toNode(thisNode)\n\t\t\tcurve = inputNode.knob(\"lut\").toScript()\n\t\twith inputNode:\n\t\t\tmyCurve = curve.splitlines()\[0]\n\t\t\tnuke.toNode(inputNode.name()+\".HueVsHue\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[1]\n\t\t\tnuke.toNode(inputNode.name()+\".HueVsSat\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[2]\n\t\t\tnuke.toNode(inputNode.name()+\".HueVsLum\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[3]\n\t\t\tnuke.toNode(inputNode.name()+\".SatVsSat\").knob(\"lut\").editCurve(\"master\",myCurve.replace(\"master\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[4]\n\t\t\tnuke.toNode(inputNode.name()+\".SatVsLum\").knob(\"lut\").editCurve(\"master\",myCurve.replace(\"master\",\"curve\")\[10:-1])    \n\t\t\tmyCurve = curve.splitlines()\[5]\n\t\t\tnuke.toNode(inputNode.name()+\".BlackAndWhite\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[15:-1])          \n\t\t\tnuke.toNode(\"HueKeyer2\").knob('knobChanged').setValue(\"RunNode()\")" +STARTLINE}
 addUserKnob {52 Init_CurveKnobSetup l "" +STARTLINE T "nuke.thisNode().knob(\"CurveKnobSetup\").execute()" +STARTLINE}
 addUserKnob {52 SMH_init T "nuke.toNode(nuke.thisNode().name()+\".BaseColorCorrect\").knob(\"RunThis\").execute()" +STARTLINE}
 addUserKnob {52 init_init_colorwheel l "" +STARTLINE T "nuke.thisNode().knob(\"init_colorwheel\").execute()" +STARTLINE}
 addUserKnob {22 init_colorwheel l INVISIBLE +INVISIBLE T "import sys, math\nimport nuke\nimport PySide.QtGui as QtGui\nimport PySide.QtCore as QtCore\nfrom PySide.QtGui import *\nfrom PySide.QtCore import *\nfrom PySide.QtWebKit import *\nfrom nukescripts import panels\nimport datetime\n#Projekt Variabler\n\n#FasteVariabler\ntry:\n\tif defined == 1:\n\t    pass\n\t    #print \"allready launched\"\nexcept: \n\tclass ColorWheelWidget(QtGui.QWidget):\n\t    def __init__(self, parent=None, mainDiameter=138, outerRingWidth=10,my_Knob=\"None\"):\n\t        QtGui.QWidget.__init__(self, parent)\n\t        # this is the pixel diameter of the actual color wheel, without the extra decorations drawn as part of this widget\n\t        self.dim = mainDiameter\n\t        self.offset = outerRingWidth\n\t        self.ColorKnob = my_Knob\n\t        self.colorWheelSensitivity = 0.1\n\t        self.setstate = 0\n\t        self.bMouseDown = False\n\t        self.shiftDown = False\n\t        self.ctrlDown = False\n\t        self.altDown = False\n\t        self.guiSelection = 0\n\t        self.middleMouse = 0\n\t        self.initialPoint = (0,0)    \n\t        self.master_radius = (self.dim/2)+self.offset+1\n\t        self.huepoint = (self.master_radius, self.master_radius)\n\t        self.value_angle = 360\n\t        self.value_angleSat = 0\t   \n\t        color = QtGui.QColor(0,0,0,0).rgba()\n\t        self.myTimer = QtCore.QTime()\n\t \n\t        self.center = (self.master_radius, self.master_radius)\n\t        # this is the color value that this widget represents\n\t        self.color = QtGui.QColor()\n\n\n\n\t        # the color wheel image, only needs to be generated once\n\t        self.image = QtGui.QImage(self.master_radius*2, self.master_radius*2, QtGui.QImage.Format_ARGB32)\n\t        # this is the image for the current color selection\n\t        self.current_image = QtGui.QImage(self.master_radius*2, self.master_radius*2, QtGui.QImage.Format_ARGB32)\n\t        self.current_image.fill(QtGui.QColor(self.color).rgba())\n\t        self.current_imageB = QtGui.QImage(self.master_radius*2, self.master_radius*2, QtGui.QImage.Format_ARGB32)\n\t        self.current_imageB.fill(QtGui.QColor(self.color).rgba())       \n\t        # these are used for the current color selection image\n\t        self.lastPoint = (self.master_radius, self.master_radius)\n\t        self.currentPoint = (self.master_radius, self.master_radius)\n\t        self.points = self.getRadialLinePoints((self.dim / 2), self.master_radius, 45)\n\t        self.points2 = self.getRadialLinePoints((self.dim / 2), self.master_radius, 135)\t        \n\t        self.image.fill(color)\n\n\n\t        self.color.setRgbF(min(1,max(0,my_Knob.value()\[0])),min(1,max(0,my_Knob.value()\[1])),min(1,max(0,my_Knob.value()\[2])))\n\n\n\t        self.luma = (my_Knob.value()\[3]/2.0)*255.0\n\t        self.hue = self.color.hueF()*255.0\n\t        self.sat = self.color.saturationF()*255.0\n\t   \n\n\t        self.setUIColor(self.hue,self.sat,self.luma) \n\n\t        for y in range(int(self.master_radius*2)):\n\t            for x in range(int(self.master_radius*2)):\n\t                d = 2 * self.getDist((x,y),self.center) / self.dim\n\t                if d <= 1: #Hue Wheel\n\t                    color = QtGui.QColor()\n\t                    hue = self.getHue(x, y)\n\t                    percent = max(0,min(1,(d - 0.90)*30))\n\t                    color.setHsv(hue,(d*255),90+(165*percent),90+(165*percent)) #The dark part in the center\n\n\t                    self.image.setPixel(x,y, color.rgba())\n\t                else:\n\t                    d2 = self.getDist((x,y),self.center) / (self.master_radius-1)\n\t                    if d2 > 1: #MainBG                       \n\t                        color = QtGui.QColor()\n\t                        color.setAlpha(0)\n\t                        self.image.setPixel(x,y, color.rgba())\n\t                    else:\n\t                    \tpass\n\n\t        self.setUIColor(self.hue,self.sat,self.luma) \n\t        self.setColor(self.hue, self.sat, self.luma)\n\n\n\t    def getRadialLinePoints(self, r_inner, r_outer, angle,distance=1.0):\n\t        rad = math.radians(angle)\n\t        sr = math.sin(rad)\n\t        cr = math.cos(rad)\n\t        x1 = r_outer - (r_outer * (sr*distance))\n\t        y1 = r_outer - (r_outer * (cr*distance)) \n\t        x2 = r_outer - (r_inner * (sr*distance))\n\t        y2 = r_outer - (r_inner * (cr*distance))\n\t        return (x1, y1, x2, y2)\n\t  \n\t    def getRot(self, x, y):\n\t        return ( math.degrees ( math.atan2 ( 2*(x - self.master_radius),2*(y - self.master_radius)))) % 360\n\t    def getLum(self, x, y):\n\t        return ( math.degrees ( math.atan2 ( 2.0*(x - self.master_radius),2.0*(y - self.master_radius)))) % 360\n\n\t    def getHue(self, x, y):\n\t        return ( math.degrees ( math.atan2 ( 2*(x - self.master_radius),2*(y - self.master_radius))) + 165 ) % 360\n\t    \n\t    def setColor(self, h, s, v):\n\n\t        self.color.setHsvF(0.0,0.0,min(1,v/255.0))\n\t        alpha = self.current_image.alphaChannel()\n\t        self.current_image.fill(self.color.rgb())\n\t        self.current_image.setAlphaChannel(alpha)\n\t        self.color.setHsvF(min(1,h/255.0),1.0,min(1,v/255.0)) #Should be 255 and not 254.5 but it causes a unknown error!\n\t        alpha = self.current_imageB.alphaChannel()\n\t        self.current_imageB.fill(self.color.rgb())\n\t        self.current_imageB.setAlphaChannel(alpha)\n\t        self.update()      \n\n\t    def reset(self,x):\n\t        self.middleMouse = 1\n\t        self.bMouseDown = True\n\t        self.guiSelection = 0\n\t        self.initialPoint = (self.center\[0], self.center\[1])\n\t        self.lastPoint = (self.center\[0], self.center\[1]) \n\t        self.alterColor(self.lastPoint\[0], self.lastPoint\[1])\n\t        self.guiSelection = 1\n\t        self.initialPoint = (self.center\[0], self.center\[1])\n\t        self.lastPoint = (self.center\[0], self.center\[1]) \n\t        self.alterColor(self.lastPoint\[0], self.lastPoint\[1]-10)\n\t        self.lastPoint = self.currentPoint\n\t        self.setColor(self.hue, self.sat, self.luma)\n\t        self.setUIColor(self.hue,self.sat,self.luma)\n\t        self.bMouseDown = False\n\t        if not self.ColorKnob == \"None\":\n\t\t\t\ttry:\n\t\t\t\t\tself.color.setHsvF(min(1,self.hue/255.0),min(1,self.sat/255.0),1.0)\n\t\t\t\t\tself.ColorKnob.setValue(\[float(self.color.redF()),float(self.color.greenF()),float(self.color.blueF()),float(self.luma*2)/255])\n\t\t\t\texcept: \n\t\t\t\t\tprint \"Error trying to send values to color control. Make sure all layouts are set to 4 Colors and not 1\"\n\n\t        \n\t    def getDist(self, (x1, y1), (x2, y2)):\n\t        return math.sqrt((x2-x1)**2 + (y2-y1)**2)\n\t        \n\t    def paintEvent(self, evt):\n\t        painter = QtGui.QPainter(self)\n\t        painter.setRenderHint(QtGui.QPainter.Antialiasing)\n\t        pen = QtGui.QPen()\n\t        if not self.ColorKnob == \"None\":\n\t\t\t\ttry:\n\t\t\t\t\tif self.setstate > 0:\n\t\t\t\t\t\tself.color.setHsvF(min(1,self.hue/255.0),min(1,self.sat/255.0),1.0)\n\t\t\t\t\t\tself.ColorKnob.setValue(\[float(self.color.redF()),float(self.color.greenF()),float(self.color.blueF()),float(self.luma*2)/255])\n\t\t\t\t\tif self.setstate > 1:\n\t\t\t\t\t\tself.setstate = 0\n\n\t\t\t\texcept: \n\t\t\t\t\tprint \"Error trying to send values to color control. Make sure all layouts are set to 4 Colors and not 1\"\n\t        self.color.setHsvF(min(1,self.hue/255.0),min(1,self.sat/255.0),min((self.luma/255.0)*2.0,1.0))\n\t        brush = QtGui.QBrush(QtGui.QColor(self.color.rgb())) #Color of the elipse\n\t        pen.setColor(QtGui.QColor(20,20,20)) #Outline Color\n\t        pen.setWidth(2) #Outline Width\n\t        painter.setPen(pen)\n\t        \n\t        painter.drawImage(0,0,self.image)\n\t        #painter.drawImage(0,0,self.current_image)\n\t        #painter.drawImage(0,0,self.current_imageB)\n\t        r = self.dim/2 \n\t        r2 = r + self.offset\n\t        center = QtCore.QPoint(r2+2,r2+2) \n\t        center = QtCore.QPointF(self.center\[0],self.center\[1] )\n\t        \n\t        painter.drawEllipse(center, r, r ) #DRAW THE OUTER BLACK CIRCLE\n\n\n\t   \n\t        #LUMINANCE ARC\n\t        pen.setWidth(3) #Outline Width\n\t        pen.setColor(QtGui.QColor(150,150,150)) #Outline Color\n\t        gradient = QtGui.QConicalGradient()\n\t        gradient.setCenter(center)\n\t        gradient.setAngle(-90)\n\t        gradient.setColorAt(1, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.497, QtGui.QColor(170, 170, 170))\n\t        gradient.setColorAt(0.498, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.5, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.502, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.503, QtGui.QColor(170, 170, 170))\n\t        gradient.setColorAt(0, QtGui.QColor(70, 70, 70))\n\t        pen.setBrush(gradient)\n\n\t        painter.setPen(pen)    \n\t        rectangle = QtCore.QRectF(self.center\[0]-((self.dim*1.1)/2), self.center\[1]-((self.dim*1.1)/2), self.dim*1.1, self.dim*1.1)     \n\t        startAngle = -90*16\n\n\t        spanAngle = (self.value_angle)*16\n\t        painter.drawArc(rectangle, startAngle, spanAngle)\n\n\n\t        pen.setWidth(1) #Outline Width\n\t        pen.setColor(QtGui.QColor(20,20,20)) #Outline Color\n\t        painter.setPen(pen)\n\t        #painter.drawEllipse(center, r-8, r-8) #DRAW THE INNER BLACK CIRCLE\n\n\t        pen.setColor(QtGui.QColor(200,200,200)) #Outline Color\n\t        painter.setPen(pen)\n\t        #Middle Crosshair\n\t        painter.drawLine((self.master_radius)+4,(self.master_radius),(self.master_radius)-4,(self.master_radius))\n\t        painter.drawLine((self.master_radius),(self.master_radius)+4,(self.master_radius),(self.master_radius)-4)\n\n\t        pen.setWidth(6) #Outline Width\n\t        painter.setPen(pen)\n\t        (x1,y1,x2,y2) = self.points\n\t        (x1,y1,x2,y2) = self.points2\n\n\n\t        #Draw the GuideLines\n\t        pen.setWidth(1.99)\n\t        pen.setColor(QtGui.QColor(220,220,220))\n\t        pen.setStyle(QtCore.Qt.PenStyle.DashLine)\n\t        painter.setPen(pen)\n\t        (hpx, hpy) =  self.huepoint\n\t        d = self.getDist((hpx,hpy),self.center)\n\t        if self.bMouseDown == False: #Hide the guidelines when the mouse is not clicked\n\t            pass\n\t        else:\n\t            (x1,y1,x2,y2) = self.getRadialLinePoints(0, self.master_radius, ((self.hue/255)*360)+15,0.80) \n\t            painter.drawLine(x1,y1,x2,y2)\n\t            if d > 46: #If the radial is in the bright area, then display a dark version\n\t                pen.setColor(QtGui.QColor(20,20,20))  \n\t                painter.setPen(pen)\n\t            if d != 0:\n\t                painter.drawEllipse(QtCore.QPointF(self.master_radius, self.master_radius), d, d)\n\n\n\t        #Draw Hue Dot\n\t        pen.setWidth(1)\n\t        pen.setStyle(QtCore.Qt.PenStyle.SolidLine)\n\t        if self.luma > 90:\n\t            pen.setColor(QtGui.QColor(0,0,0))\n\t        else:\n\t            pen.setColor(QtGui.QColor(220,220,220))\n\t        painter.setPen(pen)\n\t        painter.setBrush(brush)\n\t        painter.drawEllipse(QtCore.QPointF(hpx, hpy), 5, 5)\n\n\n\n\t    def setUIColor(self,h,s,v):\n\t        (x1,y1,x2,y2) = self.getRadialLinePoints((self.dim / 2.0), self.master_radius,  ((self.hue/255)*360)+15,(s/255.0))\n\t        self.huepoint = (x2,y2)\n\t        self.lastPoint = (x2,y2)\n\t        self.currentPoint = (x2,y2)\n\t        #Saturation\n\t        self.value_angleSat = (1.0-((s/255.0) * 90.0)) + 135.0       \n\n\t        #Luminance\n\t        self.value_angle = ((v/255.0) * 360.0) \n\n\n\t        \n\t    def alterColor(self, x, y):\t\n\t        d = 2.0 * self.getDist((x,y),self.center) / self.dim\n\t        if self.guiSelection == 0:\n\t            if self.getDist((x,y),self.center) >= (self.dim/2.0):\n\t                Percent = self.getDist((x,y),self.center) / (self.dim/2.0)\n\t                prex = (((x-self.center\[0]) / Percent) * 1)+self.center\[0]\n\t                prey = (((y-self.center\[1]) / Percent) * 1)+self.center\[1]\n\t                self.initialPoint = (self.initialPoint\[0]-(prex-x), self.initialPoint\[1]-(prey-y))\n\t                x = prex\n\t                y = prey\n\t            hue = self.getHue(x, y)\n\n\t            self.value_angleSat = (1.0-((self.getDist((x,y),self.center) / (self.dim/2.0)) * 90.0)) + 135.0  \n\t            self.hue = (hue/360)*255\n\t            self.sat = min(d*255.0,255.0)\n\t            self.huepoint = (x,y)\n\t            self.setColor(hue,min(d*255.0,255.0),self.luma)\n\t        \n\t        elif self.guiSelection == 1:\n\t            self.value_angle = self.getRot(x, y)\n\t            lum = self.getLum(x, y)\n\t            v = (lum/360.0)*255.0\n\t            self.setColor(self.color.hueF(), self.color.saturationF(), v)\n\t            self.luma = v\n\n\n\t        else:\n\t            pass\n\n\n\t    def mousePressEvent(self, evt):\n\t    \tself.setstate = 1\n\t        self.myTimer.start()\n\t\t\t\n\t        d = 2 * self.getDist((evt.x(), evt.y()),self.center) / self.dim\n\t        if evt.button() == QtCore.Qt.MouseButton.MiddleButton:\n\t            self.middleMouse = 1\n\t        else:\n\t            self.middleMouse = 0\n\t        if d <= 1: \n\t            self.guiSelection = 0\n\t            if self.middleMouse == 1:\n\t                self.initialPoint = (self.center\[0], self.center\[1])\n\t                self.lastPoint = (self.center\[0], self.center\[1]) \n\t                self.alterColor(self.lastPoint\[0], self.lastPoint\[1])\n\t            else:\n\t                self.initialPoint = (evt.x(), evt.y())\n\t                self.alterColor(self.lastPoint\[0], self.lastPoint\[1])\n\t        else:\n\t            d = self.getDist((evt.x(), evt.y()),self.center) / self.master_radius\n\t            if d <= 1:\n\t                self.guiSelection = 1\n\t                if self.middleMouse == 1:\n\t                    self.initialPoint = (self.center\[0], self.center\[1])\n\t                    self.lastPoint = (self.center\[0], self.center\[1]) \n\t                    self.alterColor(self.lastPoint\[0], self.lastPoint\[1]-10)\n\t                else:\n\t                    self.alterColor(evt.x(), evt.y())\n\t            else:\n\t                self.guiSelection = 3\n\t        self.bMouseDown = True\n\n\n\n\n\t    def mouseMoveEvent(self, evt):\n\t    \tself.setstate = 1\n\t    \tnMilliseconds = self.myTimer.elapsed()\n\t    \tif nMilliseconds < 1:\n\t    \t\tpass\n\t    \telse:\n\n\t\t        modifiers = QtGui.QApplication.keyboardModifiers()\n\t\t        self.shiftDown = False\n\t\t        self.ctrlDown = False\n\t\t        self.altDown = False\n\t\t        self.colorWheelSensitivity = 0.1\n\n\t\t        if modifiers == QtCore.Qt.ShiftModifier:\n\t\t            self.shiftDown = True\n\t\t        if modifiers == QtCore.Qt.ControlModifier:\n\t\t            self.ctrlDown = True\n\t\t        if modifiers == QtCore.Qt.AltModifier:\n\t\t            self.altDown = True\n\t\t            self.colorWheelSensitivity = 1\n\t\t        if modifiers == (QtCore.Qt.ControlModifier | QtCore.Qt.ShiftModifier):\n\t\t            self.ctrlDown = True\n\t\t            self.shiftDown = True\n\n\t\t        if self.bMouseDown and self.middleMouse == 0:\n\t\t            if self.guiSelection == 1 or self.guiSelection == 2:\n\t\t                self.alterColor(evt.x(), evt.y())\n\t\t            else:\n\n\t\t                x = (((evt.x()-self.initialPoint\[0]) * self.colorWheelSensitivity))+self.lastPoint\[0]\n\t\t                y = (((evt.y()-self.initialPoint\[1]) * self.colorWheelSensitivity))+self.lastPoint\[1]\n\t\t                self.alterColor(x, y)\n\t\t                self.currentPoint = (x, y) \n\t\t        self.myTimer.restart()\n\t        \n\n\t    def mouseReleaseEvent(self, evt):\n\t    \tself.setstate = 2\n\t        self.lastPoint = self.currentPoint\n\t        self.setColor(self.hue, self.sat, self.luma)\n\t        self.setUIColor(self.hue,self.sat,self.luma)\n\t        self.bMouseDown = False\n\nclass Example(QtGui.QWidget):\n\tdef __init__(self, parent=None,myNode=\"none\"):\n\t\tQtGui.QWidget.__init__(self, None)\n\t\t#self.setGeometry(900, 900, 800, 600)\n\t\t#self.setWindowTitle('ColorBars')\n\t\tself.baseNode = myNode\n\t\tself.palette = QtGui.QPalette()\n\t\tself.LiftLabel = QtGui.QLabel(\"<b>Lift</b>\")\n\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\tself.LiftLabel.setPalette(self.palette)\n\t\tself.LiftLabel.mouseReleaseEvent = self.showText1\n\t\tself.Lift = ColorWheelWidget(None, 138, 10,myNode.knob(\"Lift\"))\n\n\n\t\tself.GammaLabel = QtGui.QLabel(\"<b>Gamma</b>\")\n\t\tself.GammaLabel.setPalette(self.palette)\n\t\tself.GammaLabel.mouseReleaseEvent = self.showText2\n\t\tself.Gamma = ColorWheelWidget(None, 138, 10,myNode.knob(\"Gamma\"))\n\n\t\tself.GainLabel = QtGui.QLabel(\"<b>Gain</b>\")\n\t\tself.GainLabel.setPalette(self.palette)\n\t\tself.GainLabel.mouseReleaseEvent = self.showText3\n\t\tself.Gain = ColorWheelWidget(None, 138, 10,myNode.knob(\"Gain\"))\n\n\t\tlayout = QtGui.QGridLayout()\n\t\tlayout.addWidget(self.LiftLabel,0,0)\n\t\tlayout.addWidget(self.GammaLabel,0,1)\n\t\tlayout.addWidget(self.GainLabel,0,2)\n\t\tlayout.addWidget(self.Lift,1,0)\n\t\tlayout.addWidget(self.Gamma,1,1)\n\t\tlayout.addWidget(self.Gain,1,2)\n\t\tlayout.setRowStretch(1,1)\n\t\tself.setLayout(layout)\n\t\t#self.show()\n\tdef showText1(self, event):\n\t\tmyNode = self.baseNode.knob(\"LiftEnabled\")\n\t\tif myNode.value() == 1:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n\t\t\tself.LiftLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(0)\n\t\telse:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\t\tself.LiftLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(1)\n\n\tdef showText2(self, event):\n\t\tmyNode = self.baseNode.knob(\"GammaEnabled\")\n\t\tif myNode.value() == 1:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n\t\t\tself.GammaLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(0)\n\t\telse:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\t\tself.GammaLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(1)\n\n\tdef showText3(self, event):\n\t\tmyNode = self.baseNode.knob(\"GainEnabled\")\n\t\tif myNode.value() == 1:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n\t\t\tself.GainLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(0)\n\t\telse:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\t\tself.GainLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(1)\n\n\nclass ColorWheelKnob_LGG:\n\tdef __init__( self ):\n\t\tself.instance = 0\n\t\treturn None\n\n\tdef makeUI( self ):\n\t\tself.instance = Example(None,nuke.thisNode())\n\t\treturn self.instance\n\ndefined = 1" +STARTLINE}
 addUserKnob {22 init_colorwheel2 l INVISIBLE +INVISIBLE T "class Example2(QtGui.QWidget):\n  def __init__(self, parent=None,myNode=\"none\"):\n    QtGui.QWidget.__init__(self, None)\n    #self.setGeometry(900, 900, 800, 600)\n    #self.setWindowTitle('ColorBars')\n    self.baseNode = myNode\n    self.palette = QtGui.QPalette()\n    self.ShadowLabel = QtGui.QLabel(\"<b>Shadows</b>\")\n    self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n    self.ShadowLabel.setPalette(self.palette)\n    self.ShadowLabel.mouseReleaseEvent = self.showText1\n    self.Shadow = ColorWheelWidget(None, 138, 10,myNode.knob(\"Shadows\"))\n\n\n    self.MidtoneLabel = QtGui.QLabel(\"<b>Midtones</b>\")\n    self.MidtoneLabel.setPalette(self.palette)\n    self.MidtoneLabel.mouseReleaseEvent = self.showText2\n    self.Midtone = ColorWheelWidget(None, 138, 10,myNode.knob(\"Midtones\"))\n\n    self.HighlightLabel = QtGui.QLabel(\"<b>Highlights</b>\")\n    self.HighlightLabel.setPalette(self.palette)\n    self.HighlightLabel.mouseReleaseEvent = self.showText3\n    self.Highlight = ColorWheelWidget(None, 138, 10,myNode.knob(\"Highlights\"))\n\n    layout = QtGui.QGridLayout()\n    layout.addWidget(self.ShadowLabel,0,0)\n    layout.addWidget(self.MidtoneLabel,0,1)\n    layout.addWidget(self.HighlightLabel,0,2)\n    layout.addWidget(self.Shadow,1,0)\n    layout.addWidget(self.Midtone,1,1)\n    layout.addWidget(self.Highlight,1,2)\n    layout.setRowStretch(1,1)\n    self.setLayout(layout)\n    #self.show()\n  def showText1(self, event):\n    myNode = self.baseNode.knob(\"ShadowsEnabled\")\n    if myNode.value() == 1:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n      self.ShadowLabel.setPalette(self.palette)\n      myNode.setValue(0)\n    else:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n      self.ShadowLabel.setPalette(self.palette)\n      myNode.setValue(1)\n\n  def showText2(self, event):\n    myNode = self.baseNode.knob(\"MidtonesEnabled\")\n    if myNode.value() == 1:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n      self.MidtoneLabel.setPalette(self.palette)\n      myNode.setValue(0)\n    else:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n      self.MidtoneLabel.setPalette(self.palette)\n      myNode.setValue(1)\n\n  def showText3(self, event):\n    myNode = self.baseNode.knob(\"HighlightsEnabled\")\n    if myNode.value() == 1:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n      self.HighlightLabel.setPalette(self.palette)\n      myNode.setValue(0)\n    else:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n      self.HighlightLabel.setPalette(self.palette)\n      myNode.setValue(1)\n\nclass ColorWheelKnob_SMH:\n  def __init__( self ):\n    self.instance = 0\n    return None\n\n  def makeUI( self ):\n    self.instance = Example2(None,nuke.thisNode())\n    return self.instance\n" +STARTLINE}
 addUserKnob {52 init_init_colorwheel2 T "nuke.thisNode().knob(\"init_colorwheel2\").execute()" +STARTLINE}
 addUserKnob {26 info_general l "<b><font color=#70EE70>General</font><b>"}
 addUserKnob {22 General_Clear l Clear T "nuke.thisNode().knob(\"blackpoint\").setValue(\[0,0,0,0])\nnuke.thisNode().knob(\"blackpoint\").setValue(0)\nnuke.thisNode().knob(\"whitepoint\").setValue(\[0,0,0,0])\nnuke.thisNode().knob(\"whitepoint\").setValue(1)\nnuke.thisNode().knob(\"add\").setValue(\[0,0,0,0])\nnuke.thisNode().knob(\"add\").setValue(0)\nnuke.thisNode().knob(\"red\").setValue(0)\nnuke.thisNode().knob(\"Temperature\").setValue(1)\nnuke.thisNode().knob(\"Tint\").setValue(1)\nnuke.thisNode().knob(\"Contrast\").setValue(1)\nnuke.thisNode().knob(\"Saturation\").setValue(1)\nnuke.thisNode().knob(\"ColorBoost\").setValue(1)" +STARTLINE}
 addUserKnob {6 General_Enable l Enable -STARTLINE}
 General_Enable true
 addUserKnob {41 blackpoint l "Blackpoint <font color=#1A1A1A>●</font>" T BaseGrade.blackpoint}
 addUserKnob {41 whitepoint l "Whitepoint <font color=#E6E6E6>●</font>" T BaseGrade.whitepoint}
 addUserKnob {41 add l "Offset <sup>▲</sup><sub>▼</sub>" T BaseGrade.add}
 addUserKnob {26 basedevider l "" +STARTLINE T " \n"}
 addUserKnob {41 red l Exposure T Exposure1.red}
 addUserKnob {7 Temperature l "Temperature <font color=#E6E6A1><sup>◄</sup></font><font color=#A1E6E6><sub>►</sub></font>" R 0 2}
 Temperature 1
 addUserKnob {7 Tint l "Tint <font color=#E6A1A1><sup>◄</sup></font><font color=#A1E6A1><sub>►</sub></font>" R 0 2}
 Tint 1
 addUserKnob {7 Contrast R 0.5 1.5}
 Contrast 1
 addUserKnob {7 Saturation R 0 2}
 Saturation 1
 addUserKnob {7 ColorBoost l Vibrance R 0 2}
 ColorBoost 1
 addUserKnob {6 pop_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 info_liftgammagain l "<b><font color=#70EE70>3-Way LGG</font><b>"}
 addUserKnob {22 liftgammagain_clear l Clear T "nuke.thisNode().knob(\"LiftGammaGain\").getObject().instance.Lift.reset(1)\nnuke.thisNode().knob(\"LiftGammaGain\").getObject().instance.Gamma.reset(1)\nnuke.thisNode().knob(\"LiftGammaGain\").getObject().instance.Gain.reset(1)" +STARTLINE}
 addUserKnob {6 liftgammagain_Enable l Enable -STARTLINE}
 liftgammagain_Enable true
 addUserKnob {52 LiftGammaGain l "" t "Hotkeys:\nClick MiddleMouse = Reset\nALT+Drag = Absolute Offset" +STARTLINE T ColorWheelKnob_LGG() +STARTLINE}
 addUserKnob {41 colorspace_out l GradingSpace T LGGColorspace_in.colorspace_out}
 addUserKnob {7 LumaMix l " Mix Luma" -STARTLINE}
 LumaMix 1
 addUserKnob {20 org l "" +STARTLINE n 1}
 org 0
 addUserKnob {19 Lift R 0 2}
 Lift {1 1 1 1}
 addUserKnob {6 Lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 LiftEnabled l "" -STARTLINE}
 LiftEnabled true
 addUserKnob {19 Gamma R 0 2}
 Gamma {1 1 1 1}
 addUserKnob {6 Gamma_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 GammaEnabled l "" -STARTLINE}
 GammaEnabled true
 addUserKnob {19 Gain R 0 2}
 Gain {1 1 1 1}
 addUserKnob {6 Gain_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 GainEnabled l "" -STARTLINE}
 GainEnabled true
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 info_ShadowMidtoneHighlight l "<b><font color=#70EE70>3-Way SMH</font><b>"}
 addUserKnob {22 SMH_Clear l Clear T "nuke.thisNode().knob(\"ShadowsMidtonesHighlights\").getObject().instance.Shadow.reset(1)\nnuke.thisNode().knob(\"ShadowsMidtonesHighlights\").getObject().instance.Midtone.reset(1)\nnuke.thisNode().knob(\"ShadowsMidtonesHighlights\").getObject().instance.Highlight.reset(1)" +STARTLINE}
 addUserKnob {6 SMH_Enable l Enable -STARTLINE}
 addUserKnob {52 ShadowsMidtonesHighlights l "" +STARTLINE T ColorWheelKnob_SMH() +STARTLINE}
 addUserKnob {41 low l Low T BaseColorCorrect.low}
 addUserKnob {41 High -STARTLINE T BaseColorCorrect.High}
 addUserKnob {20 smh_group l "" +STARTLINE n 1}
 smh_group 0
 addUserKnob {19 Shadows R 0 2}
 Shadows {1 1 1 1}
 addUserKnob {6 Shadows_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ShadowsEnabled l "" -STARTLINE}
 ShadowsEnabled true
 addUserKnob {6 Midtones_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Highlights_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 Midtones R 0 2}
 Midtones {1 1 1 1}
 addUserKnob {6 Midtones_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 MidtonesEnabled l "" -STARTLINE}
 MidtonesEnabled true
 addUserKnob {19 Highlights R 0 2}
 Highlights {1 1 1 1}
 addUserKnob {6 Highlights_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 HighlightsEnabled l "" -STARTLINE}
 HighlightsEnabled true
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 PAGE_Secondaries l Secondaries}
 addUserKnob {26 SplitToning_DEVIDER l "<b><font color=#70EE70>Split Toning</font><b>"}
 addUserKnob {22 SplitToning_Clear l Clear T "nuke.thisNode().knob(\"Split_Bright_Hue\").setValue(0.095)\nnuke.thisNode().knob(\"Split_Bright_Sat\").setValue(1)\nnuke.thisNode().knob(\"Split_Dark_Hue\").setValue(0.715)\nnuke.thisNode().knob(\"Split_Dark_Sat\").setValue(1)\nnuke.thisNode().knob(\"Split_Contrast\").setValue(0)\nnuke.thisNode().knob(\"Split_Mix\").setValue(0.17)\nnuke.thisNode().knob(\"Split_Offset\").setValue(0)" +STARTLINE}
 addUserKnob {6 SplitToning_Enable l Enable -STARTLINE}
 addUserKnob {7 Split_Bright_Hue l "Hue White <font color=#E6E6E6>●</font>"}
 Split_Bright_Hue 0.095
 addUserKnob {7 Split_Bright_Sat l "Sat  <font color=#E6E6E6>●</font>" -STARTLINE}
 Split_Bright_Sat 1
 addUserKnob {7 Split_Dark_Hue l "Hue Black <font color=#1A1A1A>●</font>"}
 Split_Dark_Hue 0.715
 addUserKnob {7 Split_Dark_Sat l "Sat <font color=#1A1A1A>●</font>" -STARTLINE}
 Split_Dark_Sat 1
 addUserKnob {7 Split_Contrast l "Contrast ◊"}
 addUserKnob {7 Split_Offset l Offset -STARTLINE R -1 1}
 addUserKnob {7 Split_Mix l "Mix ◌"}
 Split_Mix 0.17
 addUserKnob {26 PrimariesOffset_Devider l "<b><font color=#70EE70>Primaries Offset</font><b>"}
 addUserKnob {22 Primatries_Clear l Clear T "nuke.thisNode().knob(\"Prim_HueRed\").setValue(0)\nnuke.thisNode().knob(\"Prim_HueGreen\").setValue(0)\nnuke.thisNode().knob(\"Prim_HueBlue\").setValue(0)" +STARTLINE}
 addUserKnob {6 Primaries_Enable l Enable -STARTLINE}
 addUserKnob {7 Prim_HueRed l "Offset Red <font color=#FF4040>●</font>" R -1 1}
 addUserKnob {7 Prim_HueGreen l "Offset Green <font color=#40FF40>●</font>" R -1 1}
 addUserKnob {7 Prim_HueBlue l "Offset Blue <font color=#4040FF>●</font>" R -1 1}
 addUserKnob {4 PO_Method l Method M {"Color Overwrite" "Color Shift" "YCbCr Rotation" "" "" "" "" "" "" ""}}
 PO_Method "Color Shift"
 addUserKnob {26 ColorMixer_DEVIDER l "<b><font color=#70EE70>Color Mixer</font><b>"}
 addUserKnob {22 ColorMixer_Clear l Clear T "nuke.thisNode().knob(\"RED\").setValue(\[1,0,0])\nnuke.thisNode().knob(\"Green\").setValue(\[0,1,0])\nnuke.thisNode().knob(\"Blue\").setValue(\[0,0,1])\n\n" +STARTLINE}
 addUserKnob {6 ColorMixer_Enable l Enable -STARTLINE}
 addUserKnob {41 RED T NoOp1.RED}
 addUserKnob {41 Green l GREEN T NoOp1.Green}
 addUserKnob {41 Blue l BLUE T NoOp1.Blue}
 addUserKnob {20 PAGE_HUE l "Hue Corrections"}
 addUserKnob {26 HueShift_DEVIDER l "<b><font color=#70EE70>Hue Shift</font><b>"}
 addUserKnob {22 HueShift_Clear l Clear T "string = \"\"\"HueVsHue \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\nHueVsSat \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\nHueVsLum \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\nSatVsSat \{master L x-1 0.5 0.5 x6 0.5 K x7 0.5\}\nSatVsLum \{master L x-1 0.5 0.5 x6 0.5 K x7 0.5\}\nBlackAndWhite \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\n\"\"\"\nwith nuke.thisNode():\n    nuke.toNode(\"HueKeyer2\").knob(\"lut\").fromScript(string)" +STARTLINE}
 addUserKnob {6 HueShift_Enable l Enable -STARTLINE}
 addUserKnob {41 lut l "" +STARTLINE T HueKeyer2.lut}
 addUserKnob {26 TEEEEEEEEEEEEEEEEEEEEEEEEEEEEEST l "<b><font color=#70EE70>Settings</font><b>"}
 addUserKnob {6 BW_Enable l "Enable Black and White" +STARTLINE}
 addUserKnob {7 BWSoftFilter l "BW Soft Filter"}
 BWSoftFilter 0.245
 addUserKnob {26 soft_devider l "" +STARTLINE T "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-"}
 addUserKnob {20 Vingette}
 addUserKnob {26 Vingette_DEVIDER l "<b><font color=#70EE70>Vingette Add</font><b>"}
 addUserKnob {22 Vingette_Clear l Clear T "nuke.thisNode().knob(\"Vin_Scale\").setValue(0.7)\nnuke.thisNode().knob(\"Vin_Feather\").setValue(0.8)\nnuke.thisNode().knob(\"Vin_Gain\").setValue(1)" +STARTLINE}
 addUserKnob {6 Vingette_Enable l Enable -STARTLINE}
 addUserKnob {18 Vin_Gain l Gain}
 Vin_Gain 1
 addUserKnob {6 Vin_Gain_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 Vin_Scale l Scale R 0.5 4}
 Vin_Scale 0.7
 addUserKnob {7 Vin_Feather l Feather}
 Vin_Feather 0.8
 addUserKnob {12 Vin_Offset l Center}
 addUserKnob {6 Vin_HighlightPrio l "Highlight Preservation" +STARTLINE}
 Vin_HighlightPrio true
 addUserKnob {4 Vin_Method l "" -STARTLINE M {Straight Ease Gaussian "" ""}}
 addUserKnob {7 Vin_HilightIn l In R 0 3}
 addUserKnob {7 Vin_HilightOut l Out -STARTLINE R 0.5 3}
 Vin_HilightOut 0.98
 addUserKnob {26 VingetteOver_DEVIDER l "<b><font color=#70EE70>Vingette Over</font><b>"}
 addUserKnob {22 VingetteO_Clear l Clear T "nuke.thisNode().knob(\"VinO_Scale\").setValue(0.5)\nnuke.thisNode().knob(\"VinO_Feather\").setValue(0.5)\nnuke.thisNode().knob(\"VinO_Opacity\").setValue(0)\nnuke.thisNode().knob(\"VinO_Tint\").setValue(0.5,0)\nnuke.thisNode().knob(\"VinO_Tint\").setValue(0.5,1)\nnuke.thisNode().knob(\"VinO_Tint\").setValue(0.5,2)" +STARTLINE}
 addUserKnob {6 VingetteO_Enable l Enable -STARTLINE}
 VingetteO_Enable true
 addUserKnob {7 VinO_Opacity l Opacity}
 addUserKnob {6 VinO_Invert l Inverse -STARTLINE}
 VinO_Invert true
 addUserKnob {7 VinO_Scale l Scale R 0 4}
 VinO_Scale 0.5
 addUserKnob {7 VinO_Feather l Feather}
 VinO_Feather 0.5
 addUserKnob {12 VinO_Offset l Center}
 addUserKnob {18 VinO_Tint l Tint R 0 2}
 VinO_Tint {0.5 0.5 0.5}
 addUserKnob {6 VinO_Tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 VinO_Tint_panelDropped true
 addUserKnob {20 Effects}
 addUserKnob {26 Sharpen_DEVIDER l "<b><font color=#70EE70>Sharpen</font><b>"}
 addUserKnob {22 Sharpen_Clear l Clear T "nuke.thisNode().knob(\"Grain_Size\").setValue(1)\nnuke.thisNode().knob(\"Grain_Intensity\").setValue(0.25)" +STARTLINE}
 addUserKnob {6 Sharpen_Enable l Enable -STARTLINE}
 addUserKnob {7 Sharpen_1 l Sharpen}
 Sharpen_1 0.4
 addUserKnob {26 Grain_DEVIDER l "<b><font color=#70EE70>Grain</font><b>"}
 addUserKnob {22 Grain_Clear l Clear T "nuke.thisNode().knob(\"Grain_Size\").setValue(1)\nnuke.thisNode().knob(\"Grain_Intensity\").setValue(0.25)" +STARTLINE}
 addUserKnob {6 Grain_Enable l Enable -STARTLINE}
 addUserKnob {7 Grain_Size l Size R 0 8}
 Grain_Size 1
 addUserKnob {7 Grain_Intensity l Intensity}
 Grain_Intensity 0.25
 addUserKnob {26 Mist_DEVIDER l "<b><font color=#70EE70>Mist</font><b>"}
 addUserKnob {22 Mist_Clear l Clear T "nuke.thisNode().knob(\"Grain_Size\").setValue(1)\nnuke.thisNode().knob(\"Grain_Intensity\").setValue(0.25)" +STARTLINE}
 addUserKnob {6 Mist_Enable l Enable -STARTLINE}
 addUserKnob {7 Mist_Opacity l Opacity}
 Mist_Opacity 0.345
 addUserKnob {7 Mist_Gamma l "Selection Curve"}
 Mist_Gamma 0.465
 addUserKnob {7 Feather}
 Feather 0.28
 addUserKnob {7 Mist_ColorMix l "Color Mix"}
 Mist_ColorMix 0.435
 addUserKnob {6 Mist_Premultiplied l Premult -STARTLINE}
 Mist_Premultiplied true
 addUserKnob {20 Mask}
 addUserKnob {26 Devider_Mask l Mask}
 addUserKnob {41 mix -STARTLINE T Merge18.mix}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge18.invert_mask}
}
 BackdropNode {
  inputs 0
  name BackdropNode16
  tile_color 0x63c681ff
  label "Hue Curves"
  note_font_size 42
  xpos 455
  ypos 779
  bdwidth 1236
  bdheight 482
  z_order -1
 }
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xafc663ff
  label Lift/Gain/Gamma
  note_font_size 42
  xpos 467
  ypos -269
  bdwidth 540
  bdheight 583
 }
 BackdropNode {
  inputs 0
  name BackdropNode10
  tile_color 0x6369c6ff
  label "Overlay Vingette"
  note_font_size 42
  xpos 467
  ypos 2846
  bdwidth 445
  bdheight 122
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  tile_color 0x63c0c6ff
  label "Primaries Offset"
  note_font_size 42
  xpos 462
  ypos 1821
  bdwidth 483
  bdheight 276
 }
 BackdropNode {
  inputs 0
  name BackdropNode12
  tile_color 0x639fc6ff
  label "Two Strip (NYI)"
  note_font_size 42
  xpos 464
  ypos 2154
  bdwidth 452
  bdheight 202
 }
 BackdropNode {
  inputs 0
  name BackdropNode13
  tile_color 0x8863c6ff
  label Mist
  note_font_size 42
  xpos 464
  ypos 3227
  bdwidth 496
  bdheight 179
 }
 BackdropNode {
  inputs 0
  name BackdropNode14
  tile_color 0x9763c6ff
  label Grain
  note_font_size 42
  xpos 464
  ypos 3417
  bdwidth 498
  bdheight 140
 }
 BackdropNode {
  inputs 0
  name BackdropNode15
  tile_color 0x7363c6ff
  label Sharpen
  note_font_size 42
  xpos 468
  ypos 3034
  bdwidth 500
  bdheight 177
 }
 BackdropNode {
  inputs 0
  name BackdropNode17
  tile_color 0xaa5555ff
  label ColorMixer
  note_font_size 42
  xpos 489
  ypos -1823
  bdwidth 515
  bdheight 349
 }
 BackdropNode {
  inputs 0
  name BackdropNode19
  tile_color 0x6dc663ff
  label "Curves (NYI)"
  note_font_size 42
  xpos 464
  ypos 560
  bdwidth 539
  bdheight 152
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0xc67a63ff
  label "Black & White Mix (NYI)"
  note_font_size 42
  xpos 490
  ypos -1447
  bdwidth 517
  bdheight 319
 }
 BackdropNode {
  inputs 0
  name BackdropNode20
  tile_color 0xaaaaaa00
  label REPLACE
  note_font_size 42
  xpos 956
  ypos 1820
  bdwidth 288
  bdheight 275
 }
 BackdropNode {
  inputs 0
  name BackdropNode21
  tile_color 0xaaaaaa00
  label "YCbCr Rotation"
  note_font_size 42
  xpos 1436
  ypos 1822
  bdwidth 313
  bdheight 272
 }
 BackdropNode {
  inputs 0
  name BackdropNode22
  tile_color 0x91c663ff
  label Shadow/Midtone/Highlights
  note_font_size 42
  xpos 465
  ypos 357
  bdwidth 545
  bdheight 155
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x63c6a8ff
  label "Split Toning"
  note_font_size 42
  xpos 457
  ypos 1312
  bdwidth 443
  bdheight 365
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0xaaaaaa00
  label SHIFT
  note_font_size 42
  xpos 1264
  ypos 1821
  bdwidth 158
  bdheight 276
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x388e8e00
  label "Used to store curves.\n(Do NOT cut and paste)"
  note_font_size 20
  xpos 1414
  ypos 943
  bdwidth 239
  bdheight 159
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0xc6bf63ff
  label "Color Boost"
  note_font_size 42
  xpos 499
  ypos -631
  bdwidth 526
  bdheight 261
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0xc69563ff
  label "Temperature & Tint"
  note_font_size 42
  xpos 499
  ypos -1091
  bdwidth 511
  bdheight 188
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0xc6aa63ff
  label "Base Color Correction"
  note_font_size 42
  xpos 499
  ypos -859
  bdwidth 516
  bdheight 182
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  tile_color 0x6387c6ff
  label "Gain Vingette"
  note_font_size 42
  xpos 467
  ypos 2519
  bdwidth 439
  bdheight 265
 }
 Input {
  inputs 0
  name Input
  xpos 509
  ypos -2122
 }
 Dot {
  name Dot47
  xpos 543
  ypos -2059
 }
set N673dd450 [stack 0]
 Shuffle {
  alpha white
  name Shuffle21
  xpos 509
  ypos -2007
 }
 Dot {
  name Dot33
  xpos 543
  ypos -1708
 }
set N1161ac80 [stack 0]
 Dot {
  name Dot32
  xpos 749
  ypos -1708
 }
 ColorMatrix {
  matrix {
      {{(parent.NoOp1.RED.r/(parent.NoOp1.RED.r+parent.NoOp1.RED.g+parent.NoOp1.RED.b)*(parent.NoOp1.RED.r>=0?parent.NoOp1.RED.r:-parent.NoOp1.RED.r))} {(parent.NoOp1.RED.g/(parent.NoOp1.RED.r+parent.NoOp1.RED.g+parent.NoOp1.RED.b)*(parent.NoOp1.RED.g>=0?parent.NoOp1.RED.g:-parent.NoOp1.RED.g))} {(parent.NoOp1.RED.b/(parent.NoOp1.RED.r+parent.NoOp1.RED.g+parent.NoOp1.RED.b)*(parent.NoOp1.RED.b>=0?parent.NoOp1.RED.b:-parent.NoOp1.RED.b))}}
      {{(parent.NoOp1.Green.r/(parent.NoOp1.Green.r+parent.NoOp1.Green.g+parent.NoOp1.Green.b)*(parent.NoOp1.Green.r>=0?parent.NoOp1.Green.r:-parent.NoOp1.Green.r))} {(parent.NoOp1.Green.g/(parent.NoOp1.Green.r+parent.NoOp1.Green.g+parent.NoOp1.Green.b)*(parent.NoOp1.Green.g>=0?parent.NoOp1.Green.g:-parent.NoOp1.Green.g))} {(parent.NoOp1.Green.b/(parent.NoOp1.Green.r+parent.NoOp1.Green.g+parent.NoOp1.Green.b)*(parent.NoOp1.Green.b>=0?parent.NoOp1.Green.b:-parent.NoOp1.Green.b))}}
      {{(parent.NoOp1.Blue.r/(parent.NoOp1.Blue.r+parent.NoOp1.Blue.g+parent.NoOp1.Blue.b)*(parent.NoOp1.Blue.r>=0?parent.NoOp1.Blue.r:-parent.NoOp1.Blue.r))} {(parent.NoOp1.Blue.g/(parent.NoOp1.Blue.r+parent.NoOp1.Blue.g+parent.NoOp1.Blue.b)*(parent.NoOp1.Blue.g>=0?parent.NoOp1.Blue.g:-parent.NoOp1.Blue.g))} {(parent.NoOp1.Blue.b/(parent.NoOp1.Blue.r+parent.NoOp1.Blue.g+parent.NoOp1.Blue.b)*(parent.NoOp1.Blue.b>=0?parent.NoOp1.Blue.b:-parent.NoOp1.Blue.b))}}
    }
  name ColorMatrix3
  xpos 715
  ypos -1633
 }
 Expression {
  expr0 isnan(r)==1?0:r
  expr1 isnan(g)==1?0:g
  expr2 isnan(b)==1?0:b
  name Expression3
  xpos 715
  ypos -1530
 }
push $N1161ac80
 Switch {
  inputs 2
  which {{parent.ColorMixer_Enable}}
  name Switch1
  xpos 509
  ypos -1530
 }
 Dot {
  name Dot12
  xpos 543
  ypos -1354
 }
set N18d2dd10 [stack 0]
 Dot {
  name Dot13
  xpos 814
  ypos -1354
 }
 Saturation {
  saturation 0
  mode Maximum
  name Saturation1
  xpos 780
  ypos -1250
 }
set N32b08b20 [stack 0]
 Dot {
  name Dot14
  xpos 814
  ypos -1153
 }
push $N32b08b20
 ColorLookup {
  lut {master {curve C x0.008857131004 0 s0.400000006 v1.05014801 L x0.7664735317 1 s0.5 t0 u1.130736947}
    red {}
    green {}
    blue {}
    alpha {}}
  name ColorLookup1
  xpos 678
  ypos -1250
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle3
  xpos 678
  ypos -1224
 }
push $N18d2dd10
 HueKeyer {
  lut {amount {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
    sat_thrsh {curve 0}}
  invert false
  name BlackAndWhite
  xpos 509
  ypos -1331
  disable {{1-parent.BW_Enable}}
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle2
  xpos 509
  ypos -1285
  disable {{1-parent.BW_Enable}}
 }
set N1136e540 [stack 0]
 Shuffle {
  red white
  green white
  blue white
  alpha white
  name Shuffle4
  xpos 619
  ypos -1285
 }
 Dot {
  name Dot15
  xpos 653
  ypos -1252
 }
push $N1136e540
 Blur {
  size {{75*parent.BWSoftFilter}}
  filter box
  quality 2
  name Blur2
  xpos 509
  ypos -1259
  disable {{1-parent.BW_Enable}}
 }
 Merge2 {
  inputs 2+1
  maskChannelMask rgba.red
  name Merge1
  xpos 509
  ypos -1224
  disable {{1-parent.BW_Enable}}
 }
set N1dcc3f60 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  name Merge4
  xpos 509
  ypos -1157
  disable {{1-parent.BW_Enable}}
 }
 Colorspace {
  colorspace_out CIE-XYZ
  name Colorspace3
  xpos 509
  ypos -1011
  disable {{1-parent.General_Enable}}
 }
 Grade {
  white {1 {parent.Tint*0.1+0.9} {parent.Temperature*0.5+0.5} 1}
  black_clamp false
  name Grade2
  xpos 509
  ypos -972
  disable {{parent.Colorspace3.disable}}
 }
set N46397450 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  name Colorspace7
  xpos 509
  ypos -933
  disable {{parent.Colorspace3.disable}}
 }
 Saturation {
  saturation {{parent.Saturation}}
  name Saturation2
  xpos 509
  ypos -795
  disable {{1-parent.General_Enable}}
 }
 Grade {
  black_clamp false
  name BaseGrade
  xpos 509
  ypos -769
  disable {{1-parent.General_Enable}}
 }
set N1d648fc0 [stack 0]
 EXPTool {
  mode Stops
  name Exposure1
  xpos 509
  ypos -743
  disable {{parent.red==0?1:1-parent.General_Enable}}
 }
 Expression {
  temp_name0 Gamma
  temp_expr0 parent.Contrast
  expr0 "r<1&&r>0?r<0.5?pow(r,Gamma)*pow(0.5, 1-Gamma):1-pow(1-r,Gamma)*pow(0.5, 1-Gamma):r"
  expr1 "g<1&&g>0?g<0.5?pow(g,Gamma)*pow(0.5, 1-Gamma):1-pow(1-g,Gamma)*pow(0.5, 1-Gamma):g"
  expr2 "b<1&&b>0?b<0.5?pow(b,Gamma)*pow(0.5, 1-Gamma):1-pow(1-b,Gamma)*pow(0.5, 1-Gamma):b"
  name Expression9
  xpos 509
  ypos -717
  disable {{parent.Contrast==1?1:1-parent.General_Enable}}
 }
 Expression {
  temp_name0 Gamma
  temp_expr0 parent.Contrast
  expr0 r<1?(r>0?r:1-pow(1-r,1/(pow(Gamma,4)))):pow(r,1/(pow(Gamma,4)))
  expr1 g<1?(g>0?g:1-pow(1-g,1/(pow(Gamma,4)))):pow(g,1/(pow(Gamma,4)))
  expr2 b<1?(b>0?b:1-pow(1-b,1/(pow(Gamma,4)))):pow(b,1/(pow(Gamma,4)))
  name Expression4
  xpos 509
  ypos -691
  disable {{parent.Contrast==1?1:1-parent.General_Enable}}
 }
 Dot {
  name Dot55
  xpos 543
  ypos -576
 }
set N138213b0 [stack 0]
 Colorspace {
  colorspace_out HSV
  name Colorspace1
  xpos 509
  ypos -558
  disable {{parent.ColorBoost==1?1:1-parent.General_Enable}}
 }
 Grade {
  channels {-rgba.red rgba.green -rgba.blue none}
  gamma {{parent.ColorBoost}}
  black_clamp false
  name Grade4
  xpos 509
  ypos -532
  disable {{parent.Colorspace1.disable}}
 }
set N1383ebf0 [stack 0]
 Dot {
  name Dot9
  xpos 424
  ypos -528
 }
push $N46397450
 Dot {
  name Dot11
  xpos 428
  ypos -968
 }
push $N1dcc3f60
 Dot {
  name Dot16
  xpos 438
  ypos -1220
 }
 StickyNote {
  inputs 0
  name StickyNote10
  label "<center>Black and White Mix\n"
  xpos 335
  ypos -1233
 }
push $N138213b0
 Dot {
  name Dot56
  xpos 637
  ypos -576
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace13
  xpos 603
  ypos -454
  disable {{parent.ColorBoost==1?1:0}}
 }
push $N1383ebf0
 Colorspace {
  colorspace_in HSV
  name Colorspace2
  xpos 509
  ypos -506
  disable {{parent.Colorspace1.disable}}
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace14
  xpos 509
  ypos -480
  disable {{parent.Colorspace1.disable}}
 }
 ShuffleCopy {
  inputs 2
  red red
  alpha alpha2
  name ShuffleCopy2
  xpos 509
  ypos -454
  disable {{parent.Colorspace1.disable}}
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace15
  xpos 509
  ypos -428
  disable {{parent.Colorspace1.disable}}
 }
 Dot {
  name Dot53
  xpos 543
  ypos -195
 }
set Nd81b140 [stack 0]
 Colorspace {
  colorspace_out sRGB
  name LGGColorspace_in
  xpos 509
  ypos -123
 }
set Nd81fce0 [stack 0]
 Dot {
  name Dot4
  xpos 772
  ypos -119
 }
 Grade {
  black {{parent.LiftEnabled?parent.Lift.a-1:0}}
  white {{parent.GainEnabled?parent.Gain.a:1}}
  gamma {{parent.GammaEnabled?parent.Gamma.a:1}}
  black_clamp false
  name LuminanceMod
  xpos 738
  ypos -17
 }
 Colorspace {
  colorspace_in {{parent.LGGColorspace_in.colorspace_out}}
  name LGGColorspace_OutL
  xpos 738
  ypos 45
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace5
  xpos 738
  ypos 100
 }
 Shuffle {
  alpha white
  name Shuffle23
  xpos 738
  ypos 164
 }
push $Nd81fce0
 Grade {
  black {{parent.LiftEnabled?((parent.Lift.r-((parent.Lift.r+parent.Lift.g+parent.Lift.b)/3))*1)+(parent.Lift.a)-1:0} {parent.LiftEnabled?((parent.Lift.g-((parent.Lift.r+parent.Lift.g+parent.Lift.b)/3))*1)+(parent.Lift.a)-1:0} {parent.LiftEnabled?((parent.Lift.b-((parent.Lift.r+parent.Lift.g+parent.Lift.b)/3))*1)+(parent.Lift.a)-1:0} 1}
  white {{parent.GainEnabled?((parent.Gain.r-((parent.Gain.r+parent.Gain.g+parent.Gain.b)/3))*1)+(parent.Gain.a):1} {parent.GainEnabled?((parent.Gain.g-((parent.Gain.r+parent.Gain.g+parent.Gain.b)/3))*1)+(parent.Gain.a):1} {parent.GainEnabled?((parent.Gain.b-((parent.Gain.r+parent.Gain.g+parent.Gain.b)/3))*1)+(parent.Gain.a):1} {curve}}
  gamma {{parent.GammaEnabled?((parent.Gamma.r-((parent.Gamma.r+parent.Gamma.g+parent.Gamma.b)/3))*1)+(parent.Gamma.a):1} {parent.GammaEnabled?((parent.Gamma.g-((parent.Gamma.r+parent.Gamma.g+parent.Gamma.b)/3))*1)+(parent.Gamma.a):1} {parent.GammaEnabled?((parent.Gamma.b-((parent.Gamma.r+parent.Gamma.g+parent.Gamma.b)/3))*1)+(parent.Gamma.a):1} {curve}}
  black_clamp false
  name Grade1
  xpos 510
  ypos -18
 }
 Colorspace {
  colorspace_in {{parent.LGGColorspace_in.colorspace_out}}
  name LGGColorspace_Out
  xpos 510
  ypos 54
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace4
  xpos 510
  ypos 101
  disable {{parent.LumaMix==0?1:0}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  mix {{parent.LumaMix}}
  name Merge2
  xpos 510
  ypos 158
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace6
  xpos 510
  ypos 216
  disable {{parent.LumaMix==0?1:0}}
 }
push $Nd81b140
 Dot {
  name Dot54
  xpos 481
  ypos -195
 }
 Dot {
  name Dot52
  xpos 481
  ypos 294
 }
 Switch {
  inputs 2
  which {{parent.liftgammagain_Enable}}
  name Switch4
  xpos 509
  ypos 290
 }
 ColorCorrect {
  shadows.gain {{((parent.Shadows.r-((parent.Shadows.r+parent.Shadows.g+parent.Shadows.b)/3))*2)+(parent.Shadows.a)} {((parent.Shadows.g-((parent.Shadows.r+parent.Shadows.g+parent.Shadows.b)/3))*2)+(parent.Shadows.a)} {((parent.Shadows.b-((parent.Shadows.r+parent.Shadows.g+parent.Shadows.b)/3))*2)+(parent.Shadows.a)} 1}
  midtones.gain {{((parent.Midtones.r-((parent.Midtones.r+parent.Midtones.g+parent.Midtones.b)/3))*1)+(parent.Midtones.a)} {((parent.Midtones.g-((parent.Midtones.r+parent.Midtones.g+parent.Midtones.b)/3))*1)+(parent.Midtones.a)} {((parent.Midtones.b-((parent.Midtones.r+parent.Midtones.g+parent.Midtones.b)/3))*1)+(parent.Midtones.a)} 1}
  highlights.gain {{((parent.Highlights.r-((parent.Highlights.r+parent.Highlights.g+parent.Highlights.b)/3))*2)+(parent.Highlights.a)} {((parent.Highlights.g-((parent.Highlights.r+parent.Highlights.g+parent.Highlights.b)/3))*2)+(parent.Highlights.a)} {((parent.Highlights.b-((parent.Highlights.r+parent.Highlights.g+parent.Highlights.b)/3))*2)+(parent.Highlights.a)} 1}
  lookup {shadow {curve 1 s0 x0.5 0 s0}
    midtone {1-shadow-highlight}
    highlight {}}
  name BaseColorCorrect
  knobChanged RunNodeC()
  xpos 509
  ypos 434
  disable {{1-parent.SMH_Enable}}
  addUserKnob {20 User}
  addUserKnob {22 RunThis T "def RunNodeC():\n\tif nuke.thisKnob().Class() == \"Array_Knob\":\n\t\t\tthisNode = nuke.thisNode().fullName().split(\".\")\[-2]\n\t\t\twith nuke.Root():\n\t\t\t\tinputNode = nuke.toNode(thisNode)\n\t\t\t#nuke.message( inputNode)\n\t\t\twith inputNode:\n\t\t\t\tshadowval = nuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"low\").value()\n\t\t\t\thighlightval = nuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"High\").value()\n\t\t\t\tcurve = nuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"lookup\").toScript()\n\t\t\t\tmyCurve = curve.splitlines()\[0]\n\t\t\t\tmyCurve = \"shadow \{curve 1 s0 x0.5 0 s0\}\"\n\t\t\t\tmyCurve = myCurve.replace(myCurve.split(\" \")\[4]\[1:],str(shadowval))\n\t\t\t\tnuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"lookup\").editCurve(\"shadow\",myCurve.replace(\"shadow\",\"curve\")\[7:-1])\n\t\t\t\tmyCurve = curve.splitlines()\[2]\n\t\t\t\tmyCurve = \"highlight \{curve x0.5 0 s0 x1 1 s0\}\"\n\t\t\t\tmyCurve = myCurve.replace(myCurve.split(\" \")\[2]\[1:],str(highlightval))\n\t\t\t\tnuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"lookup\").editCurve(\"highlight\",myCurve.replace(\"highlight\",\"curve\")\[7:-1])\nnuke.toNode(\"BaseColorCorrect\").knob('knobChanged').setValue(\"RunNodeC()\")\n" +STARTLINE}
  addUserKnob {7 low l Low}
  low 0.5
  addUserKnob {7 High}
  High 0.5
 }
 ColorLookup {
  name ColorLookup2
  xpos 509
  ypos 660
  disable true
 }
 Dot {
  name Dot34
  xpos 543
  ypos 857
 }
set Nea4c8120 [stack 0]
 Dot {
  name Dot5
  xpos 694
  ypos 857
 }
set N7c5ae860 [stack 0]
 Colorspace {
  colorspace_out HSL
  name Hue_HSL_To
  xpos 660
  ypos 888
 }
set N7c5b33e0 [stack 0]
 Grade {
  multiply 6
  black_clamp false
  name Grade8
  xpos 1064
  ypos 888
 }
 Dot {
  name Dot39
  xpos 1174
  ypos 892
 }
set N7c5dca40 [stack 0]
 Dot {
  name Dot40
  xpos 1284
  ypos 892
 }
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle17
  xpos 1250
  ypos 934
 }
 ColorLookup {
  lut {master {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
    red {}
    green {}
    blue {}
    alpha {}}
  name SatVsLum
  xpos 1250
  ypos 960
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle18
  xpos 1250
  ypos 986
 }
 Grade {
  channels rgba
  multiply 2
  black_clamp false
  name Grade9
  xpos 1250
  ypos 1012
 }
 Dot {
  name Dot38
  xpos 1284
  ypos 1164
 }
push $N7c5dca40
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle16
  xpos 1140
  ypos 934
 }
 ColorLookup {
  lut {master {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
    red {}
    green {}
    blue {}
    alpha {}}
  name SatVsSat
  xpos 1140
  ypos 960
 }
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle19
  xpos 1140
  ypos 986
 }
 Grade {
  channels rgba
  multiply 2
  black_clamp false
  name Grade11
  xpos 1140
  ypos 1012
 }
 Dot {
  name Dot41
  xpos 1174
  ypos 1138
 }
push $N7c5ae860
 Dot {
  name Dot36
  xpos 804
  ypos 857
 }
set Nfa6996c0 [stack 0]
 Dot {
  name Dot42
  xpos 914
  ypos 857
 }
set Nfa69e850 [stack 0]
 Dot {
  name Dot43
  xpos 1024
  ypos 857
 }
 HueKeyer {
  lut {amount {curve i L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
    sat_thrsh {curve 0 x6 0 s0}}
  invert false
  name HueVsLum
  xpos 990
  ypos 939
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle20
  xpos 990
  ypos 977
 }
 Grade {
  multiply 2
  black_clamp false
  name Grade12
  xpos 990
  ypos 1003
 }
 Dot {
  name Dot45
  xpos 1024
  ypos 1106
 }
push $Nfa69e850
 HueKeyer {
  lut {amount {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
    sat_thrsh {}}
  invert false
  name HueVsSat
  xpos 880
  ypos 939
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle15
  xpos 880
  ypos 977
 }
 Grade {
  multiply 2
  black_clamp false
  name Grade10
  xpos 880
  ypos 1003
 }
 Dot {
  name Dot44
  xpos 914
  ypos 1068
 }
push $N7c5b33e0
push $Nfa6996c0
 HueKeyer {
  lut {amount {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
    sat_thrsh {curve 0 x6 0 s0}}
  invert false
  name HueVsHue
  xpos 770
  ypos 913
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle14
  xpos 770
  ypos 951
 }
 MergeExpression {
  inputs 2
  expr0 ((B.Red-0.5)*((A.Blue*2)-0.5))+0.5
  name MergeExpression1
  xpos 770
  ypos 977
  disable true
 }
 Grade {
  channels rgba
  add 0.5
  black_clamp false
  name Grade7
  xpos 770
  ypos 1003
 }
 Dot {
  name Dot46
  xpos 804
  ypos 1036
 }
push $N7c5b33e0
 Merge2 {
  inputs 2
  operation plus
  Achannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  name Merge13
  xpos 660
  ypos 1032
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {-rgba.red rgba.green -rgba.blue rgba.alpha}
  Bchannels {-rgba.red rgba.green -rgba.blue rgba.alpha}
  output {-rgba.red rgba.green -rgba.blue rgba.alpha}
  name Merge16
  xpos 660
  ypos 1058
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {-rgba.red -rgba.green rgba.blue rgba.alpha}
  Bchannels {-rgba.red -rgba.green rgba.blue rgba.alpha}
  output {-rgba.red -rgba.green rgba.blue rgba.alpha}
  name Merge17
  xpos 660
  ypos 1096
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  name Merge15
  xpos 660
  ypos 1134
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  name Merge14
  xpos 660
  ypos 1160
 }
 Colorspace {
  colorspace_in HSL
  name Hue_HSL_From
  xpos 660
  ypos 1186
 }
 Dot {
  name Dot37
  xpos 694
  ypos 1223
 }
push $Nea4c8120
 Switch {
  inputs 2
  which {{parent.HueShift_Enable}}
  name Switch3
  xpos 509
  ypos 1219
 }
 Dot {
  name Dot17
  xpos 543
  ypos 1372
 }
set N77f26080 [stack 0]
 Colorspace {
  colorspace_out HSL
  name Colorspace8
  xpos 709
  ypos 1368
 }
set N77f2abe0 [stack 0]
 Dot {
  name Dot18
  xpos 837
  ypos 1459
 }
 Grade {
  white {{1+(parent.Split_Contrast/2)}}
  add {{parent.Split_Offset}}
  gamma {{1-(parent.Split_Contrast/2)}}
  black_clamp false
  name Grade3
  xpos 803
  ypos 1631
 }
 Shuffle {
  name Shuffle9
  xpos 711
  ypos 1631
 }
push $N77f2abe0
 Expression {
  expr0 parent.Split_Bright_Hue
  expr1 parent.Split_Bright_Sat
  name Expression5
  xpos 709
  ypos 1434
 }
 Colorspace {
  colorspace_in HSL
  name Colorspace9
  xpos 709
  ypos 1513
 }
 Shuffle {
  alpha white
  name Shuffle1
  xpos 709
  ypos 1539
 }
push $N77f2abe0
 Expression {
  expr0 parent.Split_Dark_Hue
  expr1 parent.Split_Dark_Sat
  name Expression6
  xpos 601
  ypos 1435
 }
 Colorspace {
  colorspace_in HSL
  name Colorspace10
  xpos 601
  ypos 1514
 }
 Shuffle {
  alpha white
  name Shuffle5
  xpos 601
  ypos 1540
 }
 Merge2 {
  inputs 2+1
  maskChannelMask rgba.blue
  name Merge5
  xpos 601
  ypos 1631
 }
push $N77f26080
 Merge2 {
  inputs 2
  mix {{parent.Split_Mix}}
  name Merge6
  xpos 509
  ypos 1631
  disable {{1-parent.SplitToning_Enable}}
 }
set N1b647e50 [stack 0]
 Dot {
  name Dot19
  xpos 391
  ypos 1635
 }
 StickyNote {
  inputs 0
  name StickyNote11
  label "<center>Split Toning\n"
  xpos 322
  ypos 1621
 }
push $N1b647e50
 Dot {
  name Dot20
  xpos 543
  ypos 1900
 }
set N55380cb0 [stack 0]
 Dot {
  name Dot58
  xpos 1059
  ypos 1900
 }
set N55385860 [stack 0]
 Dot {
  name Dot21
  xpos 1177
  ypos 1900
 }
set N5538a3e0 [stack 0]
 Dot {
  name Dot57
  xpos 1349
  ypos 1900
 }
set N5538ef60 [stack 0]
 Dot {
  name Dot60
  xpos 1588
  ypos 1900
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace16
  xpos 1554
  ypos 1931
 }
 Expression {
  temp_name0 cosThetaB
  temp_expr0 "cos((RotationB+180) * (PI / 180))"
  temp_name1 sinThetaB
  temp_expr1 "sin((RotationB+180) * (PI / 180))"
  temp_name2 cosTheta
  temp_expr2 "cos(Rotation * (PI / 180))"
  temp_name3 sinTheta
  temp_expr3 "sin(Rotation * (PI / 180))"
  expr1 "(cosTheta * (g - 0.5) - sinTheta * (b - 0.5) + 0.5)"
  expr2 "(sinThetaB * (g - 0.5) - cosThetaB * (b - 0.5) + 0.5)"
  name Expression7
  xpos 1554
  ypos 1957
  addUserKnob {20 User}
  addUserKnob {7 Rotation R -180 180}
  Rotation {{180*parent.Prim_HueRed}}
  addUserKnob {7 RotationB R -180 180}
  RotationB {{180*parent.Prim_HueGreen}}
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace17
  xpos 1554
  ypos 1983
 }
 Dot {
  name Dot61
  xpos 1588
  ypos 2063
 }
push $N5538ef60
 ColorMatrix {
  matrix {
      {{(1+(parent.Prim_HueBlue))+(parent.Prim_HueGreen)} {-parent.Prim_HueGreen} {-parent.Prim_HueBlue}}
      {{parent.Prim_HueRed} {(1+(-parent.Prim_HueBlue))-(parent.Prim_HueRed)} {parent.Prim_HueBlue}}
      {{-parent.Prim_HueRed} {parent.Prim_HueGreen} {(1+(-parent.Prim_HueGreen))+parent.Prim_HueRed}}
    }
  name ShiftMatrix
  label "Custom Recipe \nBy Mads Hagbarth Lund"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_size 9
  xpos 1315
  ypos 1965
 }
 Dot {
  name Dot59
  xpos 1349
  ypos 2025
 }
push $N5538a3e0
 Keyer {
  invert true
  operation "luminance key"
  range {0.5795876367 1 1 1}
  name Keyer1
  xpos 1143
  ypos 1971
 }
push $N55385860
 ColorMatrix {
  inputs 1+1
  matrix {
      {1 {parent.Prim_HueGreen} {-parent.Prim_HueBlue}}
      {{-parent.Prim_HueRed} 1 {parent.Prim_HueBlue}}
      {{parent.Prim_HueRed} {-parent.Prim_HueGreen} 1}
    }
  name ReplaceMatrix
  label "Custom Recipe \nBy Mads Hagbarth Lund"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_size 9
  xpos 1025
  ypos 1964
 }
 Switch {
  inputs 3
  which {{parent.PO_Method}}
  name Switch7
  xpos 722
  ypos 2059
 }
push $N55380cb0
 Switch {
  inputs 2
  which {{parent.Primaries_Enable}}
  name Switch6
  xpos 511
  ypos 2059
 }
set N131225a0 [stack 0]
 Dot {
  name Dot23
  xpos 543
  ypos 2218
 }
set N1312a670 [stack 0]
 Dot {
  name Dot24
  xpos 643
  ypos 2218
 }
set N1312f1d0 [stack 0]
 Shuffle {
  blue green
  alpha white
  name Shuffle6
  xpos 719
  ypos 2214
 }
push $N1312f1d0
 Shuffle {
  green blue
  alpha white
  name Shuffle7
  xpos 609
  ypos 2256
 }
 Merge2 {
  inputs 2
  mix 0.445
  name Merge7
  xpos 719
  ypos 2256
 }
push $N1312f1d0
 Merge2 {
  inputs 2
  mix 0.6
  name Merge8
  selected true
  xpos 719
  ypos 2299
 }
push $N1312a670
 AddMix {
  inputs 2
  mix {{parent.Split_Mix}}
  name AddMix1
  xpos 509
  ypos 2299
  disable true
 }
set Nfeef7870 [stack 0]
 Dot {
  name Dot25
  xpos 374
  ypos 2303
 }
 StickyNote {
  inputs 0
  name StickyNote13
  label "<center>Two Strip\n"
  xpos 305
  ypos 2289
 }
 StickyNote {
  inputs 0
  name StickyNote9
  label "<center>Converting to CIE-XYZ\nfor control.\nWill disable if values are default"
  xpos 268
  ypos -979
 }
push $N131225a0
 Dot {
  name Dot22
  xpos 379
  ypos 2063
 }
 StickyNote {
  inputs 0
  name StickyNote12
  label "<center>Prim Offset\nFor post balancing\n"
  xpos 310
  ypos 2049
 }
push $N673dd450
 Dot {
  name Dot49
  xpos 95
  ypos -2059
 }
 Dot {
  name Dot48
  xpos 95
  ypos 3790
 }
 Dot {
  name Dot50
  xpos 453
  ypos 3790
 }
set N1ee9e260 [stack 0]
 Input {
  inputs 0
  name Mask
  xpos 748
  ypos 3786
  number 1
 }
push $Nfeef7870
 Dot {
  name Dot26
  xpos 543
  ypos 2455
 }
set N1eea7910 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle8
  xpos 742
  ypos 2451
 }
 Dot {
  name Dot27
  xpos 924
  ypos 2455
 }
 Dot {
  name Dot28
  xpos 924
  ypos 2718
 }
set N23451b70 [stack 0]
 Dot {
  name Dot29
  xpos 924
  ypos 2915
 }
 Radial {
  invert {{parent.VinO_Invert}}
  area {{((width/2)-(width*parent.VinO_Scale))+(width*((VinO_Offset.x)/1000))} {((height/2)-(height*parent.VinO_Scale))+(height*((VinO_Offset.y)/1000))} {((width/2)+(width*parent.VinO_Scale))+(width*((VinO_Offset.x)/1000))} {((height/2)+(height*parent.VinO_Scale))+(height*((VinO_Offset.y)/1000))}}
  softness {{parent.VinO_Feather}}
  color {{parent.VinO_Tint} {parent.VinO_Tint} {parent.VinO_Tint} {parent.VinO_Tint}}
  name Radial2
  xpos 737
  ypos 2911
 }
push $N1eea7910
 Dot {
  name Dot30
  xpos 543
  ypos 2596
 }
set N2346bb50 [stack 0]
 Keyer {
  invert true
  operation "luminance key"
  range {{parent.Vin_HilightIn} {parent.Vin_HilightOut} 999999 999999}
  name Keyer2
  xpos 636
  ypos 2586
 }
set N234704a0 [stack 0]
 Expression {
  expr3 "( 1- exp( -4 * pow2(a)) ) * 1.018657"
  name Expression1
  xpos 713
  ypos 2634
 }
push $N234704a0
 Expression {
  expr3 "0.5 - 0.5 * cos( a * pi )"
  name Expression2
  xpos 565
  ypos 2629
 }
push $N234704a0
 Switch {
  inputs 3
  which {{parent.Vin_Method}}
  name Switch2
  xpos 636
  ypos 2672
 }
push $N23451b70
 Radial {
  invert true
  area {{((width/2)-(width*parent.Vin_Scale))+(width*((Vin_Offset.x)/1000))} {((height/2)-(height*parent.Vin_Scale))+(width*((Vin_Offset.y)/1000))} {((width/2)+(width*parent.Vin_Scale))+(width*((Vin_Offset.x)/1000))} {((height/2)+(height*parent.Vin_Scale))+(width*((Vin_Offset.y)/1000))}}
  softness {{parent.Vin_Feather}}
  name Radial1
  xpos 740
  ypos 2714
 }
 Merge2 {
  inputs 2
  operation multiply
  mix 0.085
  name Merge9
  xpos 636
  ypos 2714
  disable {{1-parent.Vin_HighlightPrio}}
 }
push $N2346bb50
 Grade {
  inputs 1+1
  white {{parent.Vin_Gain}}
  black_clamp false
  name Grade5
  xpos 509
  ypos 2714
  disable {{1-parent.Vingette_Enable x1 1}}
 }
 Merge2 {
  inputs 2
  mix {{parent.VinO_Opacity/5}}
  name Merge10
  xpos 509
  ypos 2911
  disable {{1-parent.VingetteO_Enable}}
 }
 Clamp {
  maximum_enable false
  name Clamp1
  xpos 509
  ypos 3049
  disable {{parent.Sharpen1.disable}}
 }
 Colorspace {
  colorspace_out Cineon
  name Colorspace18
  xpos 509
  ypos 3087
  disable {{parent.Sharpen1.disable}}
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace11
  xpos 509
  ypos 3113
  disable {{parent.Sharpen1.disable}}
 }
 Sharpen {
  channels {rgba.red -rgba.green -rgba.blue none}
  amount {{parent.Sharpen_1*6}}
  name Sharpen1
  xpos 509
  ypos 3139
  disable {{1-parent.Sharpen_Enable}}
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace12
  xpos 509
  ypos 3165
  disable {{parent.Sharpen1.disable}}
 }
 Colorspace {
  colorspace_in Cineon
  name Colorspace19
  xpos 509
  ypos 3191
  disable {{parent.Sharpen1.disable}}
 }
 Dot {
  name Dot35
  xpos 543
  ypos 3257
 }
set N6915560 [stack 0]
 Keyer {
  operation "luminance key"
  name Keyer3
  xpos 636
  ypos 3247
 }
 Premult {
  name Premult1
  xpos 636
  ypos 3281
  disable {{1-parent.Mist_Premultiplied}}
 }
 Grade {
  channels rgba
  gamma {{parent.Mist_Gamma}}
  black_clamp false
  name Grade6
  xpos 636
  ypos 3307
 }
 Blur {
  size {{(parent.Feather+0.3)*1000}}
  name Blur1
  xpos 636
  ypos 3332
 }
 Expression {
  expr0 a
  expr1 a
  expr2 a
  mix {{1-parent.Mist_ColorMix}}
  name Expression8
  xpos 636
  ypos 3370
 }
push $N6915560
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  mix {{parent.Mist_Opacity}}
  name Merge12
  xpos 509
  ypos 3370
  disable {{1-parent.Mist_Enable}}
 }
 Group {
  name Grain
  help "Adds synthetic grain. Push \"presets\" to get predefined types of grain, these are the correct size for 2K scans.\n\nYou can also adjust the sliders to match a sample piece of grain. Find a sample with a rather constant background, blur it to remove the grain, and use as input to this. View with a wipe in the viewer so you can make a match. It helps to view and match each of the red, green, blue separately."
  xpos 509
  ypos 3487
  disable {{1-parent.Grain_Enable}}
  addUserKnob {20 "" l User}
  addUserKnob {3 seed t "Change this value to make different instances of this operator produce different noise"}
  seed 134
  addUserKnob {35 presets l "" -STARTLINE M {"presets/Kodak 5248" "knobs this \{red_size 3.30 green_size 2.90 blue_size 2.5 red_i 0.60 green_i 0.60 blue_i 0.60 red_m 0.42 green_m 0.46 blue_m 0.85 black 0.00 label \{Kodak 5248\}\}" "presets/Kodak 5279" "knobs this \{red_size 2.70 green_size 2.60 blue_size 2.40 red_i 1.00 green_i 0.76 blue_i 0.65 red_m 0.37 green_m 0.60 blue_m 1.65 black 0.00 label \{Kodak 5279\}\}" "presets/Kodak FX214" "knobs this \{red_size 1.87 green_size 2.60 blue_size 2.44 red_i 1 green_i 0.76 blue_i 0.79 red_m 0.41 green_m 0.60 blue_m 1.80 black 0.00 label \{Kodak FX214\}\}" "presets/Kodak GT5274" "knobs this \{red_size 0.04 green_size 0.10 blue_size 0.90 red_i 0.90 green_i 0.76 blue_i 0.81 red_m 0.49 green_m 0.50 blue_m 1.55 black 0.00 label \{Kodak GT5274\}\}" "presets/Kodak 5217" "knobs this \{red_size 0.23 green_size 1.20 blue_size 1.40 red_i 0.60 green_i 0.86 blue_i 0.60 red_m 0.48 green_m 0.42 blue_m 0.87 black 0.00 label \{Kodak 5217\}\}" "presets/Kodak 5218" "knobs this \{red_size 0.10 green_size 1.60 blue_size 1.91 red_i 0.60 green_i 0.86 blue_i 0.73 red_m 0.38 green_m 0.17 blue_m 0.87 black 0.00 label \{Kodak 5218\}\}" presets/other "knobs this \{label other\}"}}
  addUserKnob {26 "" l "@b;Size"}
  addUserKnob {14 red_size l red R 0 100}
  red_size {{parent.Grain_Size}}
  addUserKnob {14 green_size l green R 0 100}
  green_size {{parent.Grain_Size}}
  addUserKnob {14 blue_size l blue R 0 100}
  blue_size {{parent.Grain_Size}}
  addUserKnob {26 "" l "@b;Irregularity"}
  addUserKnob {7 red_i l red}
  red_i 0.6
  addUserKnob {7 green_i l green}
  green_i 0.6
  addUserKnob {7 blue_i l blue}
  blue_i 0.6
  addUserKnob {26 "" l "@b;Intensity"}
  addUserKnob {7 red_m l red t "Amount of grain to add to a white pixel"}
  red_m {{parent.Grain_Intensity}}
  addUserKnob {7 green_m l green}
  green_m {{parent.Grain_Intensity}}
  addUserKnob {7 blue_m l blue}
  blue_m {{parent.Grain_Intensity}}
  addUserKnob {18 black t "Amount of grain to add everywhere"}
  black {0 0 0}
  addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 minimum t "Minimum black level" R 0 0.01}
  minimum {0 0 0}
  addUserKnob {6 minimum_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 "" l "@b;Mask"}
  addUserKnob {6 maskgrain l "Apply only through alpha" -STARTLINE}
  addUserKnob {41 maskinvert l "Invert alpha" -STARTLINE T Copy1.invert_mask}
 }
  Input {
   inputs 0
   name Input1
   xpos 0
  }
set Nf5acf500 [stack 0]
  Noise {
   output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
   cliptype none
   replace true
   size {{parent.red_size.w} {parent.red_size.h}}
   zoffset {{frame+seed+red_i/2}}
   octaves 2
   gamma 1
   xrotate {{red_i*45}}
   yrotate {{red_i*45}}
   name red
   xpos 220
  }
  Noise {
   output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
   cliptype none
   replace true
   size {{parent.green_size.w} {parent.green_size.h}}
   zoffset {{frame+2*seed+green_i/2}}
   octaves 2
   gamma 1
   xrotate {{green_i*45}}
   yrotate {{green_i*45}}
   name green
   xpos 220
   ypos 43
  }
  Noise {
   output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
   cliptype none
   replace true
   size {{parent.blue_size.w} {parent.blue_size.h}}
   zoffset {{frame+3*seed+blue_i/2}}
   octaves 2
   gamma 1
   xrotate {{blue_i*45}}
   yrotate {{blue_i*45}}
   name blue
   xpos 220
   ypos 86
  }
  Saturation {
   saturation 0
   name Saturation1
   xpos 220
   ypos 112
  }
push $Nf5acf500
  MergeExpression {
   inputs 2
   expr0 max(minimum.r,r+(2*Ar-1)*(r*red_m+black.r))
   expr1 max(minimum.g,g+(2*Ag-1)*(g*green_m+black.g))
   expr2 max(minimum.b,b+(2*Ab-1)*(b*blue_m+black.b))
   name MergeExpression1
   xpos 220
   ypos 208
  }
set Nea99a200 [stack 0]
push $Nf5acf500
  Copy {
   inputs 2
   channels rgb
   maskChannelInput rgba.alpha
   name Copy1
   xpos 0
   ypos 154
  }
push $Nea99a200
  Switch {
   inputs 2
   which {{maskgrain}}
   name Switch1
   xpos 0
   ypos 241
  }
  Output {
   name Output1
   xpos 0
   ypos 286
  }
 end_group
 Shuffle {
  alpha white
  name Shuffle22
  xpos 509
  ypos 3714
 }
push $N1ee9e260
 Merge2 {
  inputs 2+1
  name Merge18
  xpos 509
  ypos 3786
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  xpos 509
  ypos 3855
 }
 Dot {
  name Dot31
  xpos 543
  ypos 3969
 }
 Output {
  name Output1
  xpos 509
  ypos 4133
 }
 StickyNote {
  inputs 0
  name StickyNote15
  tile_color 0xff3100ff
  gl_color 0xff0000ff
  label "<center>IS THIS CORRECT?"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_size 20
  xpos 804
  ypos -940
 }
push $N1d648fc0
 Dot {
  name Dot10
  xpos 428
  ypos -765
 }
 StickyNote {
  inputs 0
  name StickyNote8
  label "<center>Base Color Correction\nfor normalizing shot."
  xpos 318
  ypos -776
 }
 NoOp {
  inputs 0
  name NoOp1
  xpos 815
  ypos -1634
  addUserKnob {20 User}
  addUserKnob {6 Green_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  Green_panelDropped true
  addUserKnob {18 RED}
  RED {1 0 0}
  addUserKnob {6 RED_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
  RED_panelDropped true
  addUserKnob {18 Green}
  Green {0 1 0}
  addUserKnob {6 Green_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  Green_panelDropped true
  addUserKnob {18 Blue}
  Blue {0 0 1}
  addUserKnob {6 Blue_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  Blue_panelDropped true
 }
 HueKeyer {
  inputs 0
  lut {HueVsHue {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
    HueVsSat {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
    HueVsLum {curve i L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
    SatVsSat {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
    SatVsLum {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
    BlackAndWhite {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}}
  name HueKeyer2
  knobChanged RunNode()
  xpos 1499
  ypos 1036
 }
 StickyNote {
  inputs 0
  name StickyNote1
  label "Temporary, remove later->"
  xpos 330
  ypos 3054
 }
 StickyNote {
  inputs 0
  name StickyNote7
  label "<center>Color Boost\nIntroduce saturation in\nless saturated areas\n(should be reduced)"
  xpos 313
  ypos -540
 }
 StickyNote {
  inputs 0
  name StickyNote16
  tile_color 0xff3100ff
  gl_color 0xff0000ff
  label "<center>REDO THIS"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_size 20
  xpos 771
  ypos 1310
 }
end_group
push $N554243d0
Reformat {
 type scale
 scale 0.41
 pbb true
 name Reformat2
 selected true
 xpos -680
 ypos 3844
}
Write {
 channels rgba
 file /u/jorc/Desktop/huemaskicon.png
 file_type png
 checkHashOnRead false
 version 1
 name Write1
 selected true
 xpos -680
 ypos 3905
 addUserKnob {20 caravr l CaraVR}
 addUserKnob {4 viewPresets l "View Presets" M {main stereo cams "stereo cams" all}}
 addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v and not ('_left' in v or '_right' in v)]\nelif viewPreset == 3:\n  selectedViews = \[v for v in scriptViews if 'cam' in v and ('_left' in v or '_right' in v)]\nelif viewPreset == 4:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
}
RotoPaint {
 inputs 0
 output alpha
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x448b0000 x44418000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Brush33 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ba4000 x43820000 1}}}
     {tx x447a4000 x44ba4000 x43820000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush32 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcc000 x44138000 1}}}
     {tx x447a4000 x44bcc000 x44138000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush31 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44956000 x44228000 1}}}
     {tx x447a4000 x44956000 x44228000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush30 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a32000 x43fc8000 1}
       {x44a32000 x4400c000 1}
       {x44a32000 x44020000 1}
       {x44a28000 x44020000 1}}}
     {tx x447a4000 x44a2f800 x4400c000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush29 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5a000 x440ac000 1}
       {x44a50000 x440ac000 1}}}
     {tx x447a4000 x44a55000 x440ac000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush28 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6c000 x43960000 1}}}
     {tx x447a4000 x44c6c000 x43960000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush27 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c62000 x43988000 1}
       {x44c80000 x43960000 1}
       {x44c8a000 x43960000 1}
       {x44c8a000 x43938000 1}}}
     {tx x447a4000 x44c7d800 x43960000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush26 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bb8000 x43480000 1}}}
     {tx x447a4000 x44bb8000 x43480000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush25 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c26000 x43848000 1}
       {x44c30000 x437f0000 1}}}
     {tx x447a4000 x44c2b000 x43820000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush24 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44e56000 x44520000 1}
       {x44e6a000 x444e4000 1}
       {x44e60000 x444d0000 1}}}
     {tx x447a4000 x44e60000 x444f1555}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush23 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b90000 x44430000 1}
       {x44b86000 x44430000 1}
       {x44b90000 x44444000 1}}}
     {tx x447a4000 x44b8caab x44436aab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush22 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5a000 x44430000 1}}}
     {tx x447a4000 x44a5a000 x44430000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush21 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b86000 x4441c000 1}}}
     {tx x447a4000 x44b86000 x4441c000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush20 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3e000 x444e4000 1}
       {x44d3e000 x444f8000 1}}}
     {tx x447a4000 x44d3e000 x444ee000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush19 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44dac000 x442dc000 1}
       {x44db6000 x442f0000 1}
       {x44dac000 x44318000 1}}}
     {tx x447a4000 x44daf555 x442f6aab}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush18 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44e1a000 x44494000 1}
       {x44e06000 x44480000 1}}}
     {tx x447a4000 x44e10000 x4448a000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush17 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44138000 x44960000 1}}}
     {tx x447a4000 x44138000 x44960000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush16 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4428c000 x44a64000 1}}}
     {tx x447a4000 x4428c000 x44a64000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush15 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44624000 x44924000 1}}}
     {tx x447a4000 x44624000 x44924000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush14 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x444bc000 x44a5a000 1}
       {x444f8000 x44a5a000 1}
       {x444f8000 x44a64000 1}}}
     {tx x447a4000 x444e4000 x44a5d555}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush13 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x43e10000 x4483e000 1}
       {x43e60000 x4482a000 1}
       {x43eb0000 x4482a000 1}
       {x43ed8000 x4482a000 1}}}
     {tx x447a4000 x43e7e000 x4482f000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush12 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x43d98000 x44520000 1}}}
     {tx x447a4000 x43d98000 x44520000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush11 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x43e60000 x44368000 1}
       {x43e38000 x4437c000 1}}}
     {tx x447a4000 x43e4c000 x44372000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush10 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44174000 x443cc000 1}
       {x44160000 x443f4000 1}}}
     {tx x447a4000 x4416a000 x443e0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush9 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44318000 x443e0000 1}}}
     {tx x447a4000 x44318000 x443e0000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush8 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44598000 x443cc000 1}
       {x445d4000 x443b8000 1}
       {x445e8000 x443cc000 1}
       {x445d4000 x443cc000 1}}}
     {tx x447a4000 x445ca000 x443c7000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush7 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44988000 x44750000 1}
       {x449b0000 x4478c000 1}}}
     {tx x447a4000 x4499c000 x4476e000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush6 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b90000 x4487a000 1}
       {x44b86000 x44866000 1}}}
     {tx x447a4000 x44b8b000 x44870000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush5 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c30000 x449ec000 1}
       {x44c12000 x449ec000 1}}}
     {tx x447a4000 x44c21000 x449ec000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush4 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f0000 x44b04000 1}}}
     {tx x447a4000 x447f0000 x44b04000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush3 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44548000 x44b22000 1}}}
     {tx x447a4000 x44548000 x44b22000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44520000 x449c4000 1}}}
     {tx x447a4000 x44520000 x449c4000}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}
    {cubiccurve Brush1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x444f8000 x44aa0000 1}
       {x44534000 x44aa0000 1}
       {x44534000 x44a8c000 1}}}
     {tx x447a4000 x44520000 x44a99555}
     {a ro 0 go 0 bo 0 ao 0 bs x42280000 bu 1 str 1 spx x448b0000 spy x44418000 sb 1 ltn x447a4000 ltm x447a4000 ltt x40000000 tt x41880000}}}}}}
 toolbox {brush {
  { selectAll bs 42 str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush bs 42 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1001 ltm 1001 tt 17 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_size 42
 toolbar_brush_hardness 0.200000003
 toolbar_lifetime_type single
 toolbar_lifetime_start 1001
 toolbar_lifetime_end 1001
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1112 774}
 colorOverlay {0 0 0 0}
 lifetime_start 1001
 lifetime_end 1001
 motionblur_on true
 motionblur_shutter_offset_type centred
 brush_size 42
 brush_spacing 0.05000000075
 brush_hardness 0.200000003
 source_black_outside true
 name RotoPaint2
 selected true
 xpos -190
 ypos 3341
}
